package no.netcom.ninja.core.system.tuxedo.service.parameters;

import bea.jolt.pool.Result;
import no.netcom.ninja.core.system.tuxedo.exception.FMLManipulationException;
import no.netcom.ninja.core.util.TypeConverter;

/**
 * @author  Ninja - Generated by Ninja tools
 */
public class CsGtWrkDateOutput extends ServiceOutput {

    /**
     * Creates a new instance of CsGtWrkDateOutput.
     *
     * @throws FMLManipulationException
     */
    public CsGtWrkDateOutput(int nApplicationStatus) throws FMLManipulationException {
        createFmlBuffer();
        setApplicationCode(nApplicationStatus);
    }

    public CsGtWrkDateOutput() {
    }

    /**
     * Creates a new instance of CsGtWrkDateOutput.
     *
     * @param ds Output dataset from CsGtWrkDate service.
     * @throws FMLManipulationException
     */
    public CsGtWrkDateOutput(Result ds) throws FMLManipulationException {
        createFmlBuffer();
        populateFmlBuffer(ds);
    }

    /**
     * Populates the FML buffer.
     *
     * @throws FMLManipulationException
     */
    private void createFmlBuffer() throws FMLManipulationException {
        this.fmlBuffer = new FmlField[6];
        this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
        this.fmlBuffer[1] = new FmlField("START_DATE", FmlField.TYPE_STRING, 15, null, 1, 1);
        this.fmlBuffer[2] = new FmlField("DAYS", FmlField.TYPE_INTEGER, -1, null, 2, 1);
        this.fmlBuffer[3] = new FmlField("HOURS", FmlField.TYPE_INTEGER, -1, null, 3, 1);
        this.fmlBuffer[4] = new FmlField("ADD_SUB_MODE", FmlField.TYPE_SHORT, -1, null, 4, 1);
        this.fmlBuffer[5] = new FmlField("END_DATE", FmlField.TYPE_STRING, 15, null, 5, 1);
    }

    /**
     * Retrieves the value of the 'GENERATION' field in the FML buffer.
     *
     * @return Value of 'GENERATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GENERATION() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[0].getValue(0));
    }

    /**
     * Retrieves the value of the 'START_DATE' field in the FML buffer.
     *
     * @return Value of 'START_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_START_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[1].getValue(0));
    }

    /**
     * Retrieves the value of the 'DAYS' field in the FML buffer.
     *
     * @return Value of 'DAYS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DAYS() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[2].getValue(0));
    }

    /**
     * Retrieves the value of the 'HOURS' field in the FML buffer.
     *
     * @return Value of 'HOURS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_HOURS() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[3].getValue(0));
    }

    /**
     * Retrieves the value of the 'ADD_SUB_MODE' field in the FML buffer.
     *
     * @return Value of 'ADD_SUB_MODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ADD_SUB_MODE() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[4].getValue(0)));
    }

    /**
     * Retrieves the value of the 'END_DATE' field in the FML buffer.
     *
     * @return Value of 'END_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_END_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[5].getValue(0));
    }
}