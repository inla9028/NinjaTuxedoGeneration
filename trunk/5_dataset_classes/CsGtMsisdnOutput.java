package no.netcom.ninja.core.system.tuxedo.service.parameters;

import bea.jolt.pool.Result;
import no.netcom.ninja.core.system.tuxedo.exception.FMLManipulationException;
import no.netcom.ninja.core.util.TypeConverter;

/**
 * @author  Ninja - Generated by Ninja tools
 */
public class CsGtMsisdnOutput extends ServiceOutput {

    /**
     * Creates a new instance of CsGtMsisdnOutput.
     *
     * @throws FMLManipulationException
     */
    public CsGtMsisdnOutput(int nApplicationStatus) throws FMLManipulationException {
        createFmlBuffer();
        setApplicationCode(nApplicationStatus);
    }

    public CsGtMsisdnOutput() {
    }

    /**
     * Creates a new instance of CsGtMsisdnOutput.
     *
     * @param ds Output dataset from CsGtMsisdn service.
     * @throws FMLManipulationException
     */
    public CsGtMsisdnOutput(Result ds) throws FMLManipulationException {
        createFmlBuffer();
        populateFmlBuffer(ds);
    }

    /**
     * Populates the FML buffer.
     *
     * @throws FMLManipulationException
     */
    private void createFmlBuffer() throws FMLManipulationException {
        this.fmlBuffer = new FmlField[102];
        this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
        this.fmlBuffer[1] = new FmlField("DIRECTIVE", FmlField.TYPE_INTEGER, -1, null, 1, 1);
        this.fmlBuffer[2] = new FmlField("FIRST_DIRECTIVE", FmlField.TYPE_INTEGER, -1, null, 2, 1);
        this.fmlBuffer[3] = new FmlField("SECOND_DIRECTIVE", FmlField.TYPE_INTEGER, -1, null, 3, 1);
        this.fmlBuffer[4] = new FmlField("OPERATOR_ID", FmlField.TYPE_INTEGER, -1, null, 4, 1);
        this.fmlBuffer[5] = new FmlField("APPLICATION_ID", FmlField.TYPE_STRING, 7, null, 5, 1);
        this.fmlBuffer[6] = new FmlField("TRANSACTION_MODE", FmlField.TYPE_BYTE, -1, null, 6, 1);
        this.fmlBuffer[7] = new FmlField("RUN_DATE", FmlField.TYPE_STRING, 9, null, 7, 1);
        this.fmlBuffer[8] = new FmlField("MARKET_CODE", FmlField.TYPE_STRING, 4, null, 8, 1);
        this.fmlBuffer[9] = new FmlField("SVC_STATUS", FmlField.TYPE_BYTE, -1, null, 9, 1);
        this.fmlBuffer[10] = new FmlField("LAST_UPDATE_DATE", FmlField.TYPE_STRING, 15, null, 10, 1);
        this.fmlBuffer[11] = new FmlField("LAST_UPDATE_STAMP", FmlField.TYPE_SHORT, -1, null, 11, 1);
        this.fmlBuffer[12] = new FmlField("ENV_CODE", FmlField.TYPE_STRING, 11, null, 12, 1);
        this.fmlBuffer[13] = new FmlField("SESSION_ID", FmlField.TYPE_INTEGER, -1, null, 13, 1);
        this.fmlBuffer[14] = new FmlField("ONLINE_TRX_NO", FmlField.TYPE_INTEGER, -1, null, 14, 1);
        this.fmlBuffer[15] = new FmlField("GROUP_TRX_ID", FmlField.TYPE_INTEGER, -1, null, 15, 1);
        this.fmlBuffer[16] = new FmlField("INDAA", FmlField.TYPE_BYTE, -1, null, 16, 1);
        this.fmlBuffer[17] = new FmlField("INDPREACTIVATE", FmlField.TYPE_BYTE, -1, null, 17, 1);
        this.fmlBuffer[18] = new FmlField("LOC_COMP_LN", FmlField.TYPE_BYTE, -1, null, 18, 1);
        this.fmlBuffer[19] = new FmlField("ROWID", FmlField.TYPE_STRING, 19, null, 19, 1);
        this.fmlBuffer[20] = new FmlField("CTN", FmlField.TYPE_STRING, 21, null, 20, 1);
        this.fmlBuffer[21] = new FmlField("SYS_CREATION_DATE", FmlField.TYPE_STRING, 15, null, 21, 1);
        this.fmlBuffer[22] = new FmlField("SYS_UPDATE_DATE", FmlField.TYPE_STRING, 15, null, 22, 1);
        this.fmlBuffer[23] = new FmlField("TNINVOPERATOR_ID", FmlField.TYPE_INTEGER, -1, null, 23, 1);
        this.fmlBuffer[24] = new FmlField("TNINVAPPLICATION_ID", FmlField.TYPE_STRING, 7, null, 24, 1);
        this.fmlBuffer[25] = new FmlField("DL_SERVICE_CODE", FmlField.TYPE_STRING, 6, null, 25, 1);
        this.fmlBuffer[26] = new FmlField("DL_UPDATE_STAMP", FmlField.TYPE_SHORT, -1, null, 26, 1);
        this.fmlBuffer[27] = new FmlField("LAST_TRX_DATE", FmlField.TYPE_STRING, 15, null, 27, 1);
        this.fmlBuffer[28] = new FmlField("LAST_TRX_CODE", FmlField.TYPE_STRING, 4, null, 28, 1);
        this.fmlBuffer[29] = new FmlField("LAST_TRX_UID", FmlField.TYPE_INTEGER, -1, null, 29, 1);
        this.fmlBuffer[30] = new FmlField("CTN_STATUS", FmlField.TYPE_STRING, 3, null, 30, 1);
        this.fmlBuffer[31] = new FmlField("NL", FmlField.TYPE_STRING, 4, null, 31, 1);
        this.fmlBuffer[32] = new FmlField("NGP", FmlField.TYPE_STRING, 4, null, 32, 1);
        this.fmlBuffer[33] = new FmlField("SPECIAL_TRX_DATE", FmlField.TYPE_STRING, 15, null, 33, 1);
        this.fmlBuffer[34] = new FmlField("TN_IN_USE", FmlField.TYPE_BYTE, -1, null, 34, 1);
        this.fmlBuffer[35] = new FmlField("REASON", FmlField.TYPE_STRING, 31, null, 35, 1);
        this.fmlBuffer[36] = new FmlField("PNI", FmlField.TYPE_STRING, 11, null, 36, 1);
        this.fmlBuffer[37] = new FmlField("SPECIAL_TRX_NO", FmlField.TYPE_SHORT, -1, null, 37, 1);
        this.fmlBuffer[38] = new FmlField("CONV_RUN_NO", FmlField.TYPE_SHORT, -1, null, 38, 1);
        this.fmlBuffer[39] = new FmlField("ITEM_SDESC", FmlField.TYPE_STRING, 31, null, 39, 1);
        this.fmlBuffer[40] = new FmlField("MOREROWS", FmlField.TYPE_SHORT, -1, null, 40, 1);
        this.fmlBuffer[41] = new FmlField("ROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 41, 1);
        this.fmlBuffer[42] = new FmlField("SITINVROWID", FmlField.TYPE_STRING, 19, null, 42, 50);
        this.fmlBuffer[43] = new FmlField("SERIAL_NUMBER", FmlField.TYPE_STRING, 21, null, 43, 50);
        this.fmlBuffer[44] = new FmlField("SITINVSYS_CREATION_DATE", FmlField.TYPE_STRING, 15, null, 44, 50);
        this.fmlBuffer[45] = new FmlField("SITINVSYS_UPDATE_DATE", FmlField.TYPE_STRING, 15, null, 45, 50);
        this.fmlBuffer[46] = new FmlField("SITINVOPERATOR_ID", FmlField.TYPE_INTEGER, -1, null, 46, 50);
        this.fmlBuffer[47] = new FmlField("SITINVAPPLICATION_ID", FmlField.TYPE_STRING, 7, null, 47, 50);
        this.fmlBuffer[48] = new FmlField("SITINVDL_SERVICE_CODE", FmlField.TYPE_STRING, 6, null, 48, 50);
        this.fmlBuffer[49] = new FmlField("SITINVDL_UPDATE_STAMP", FmlField.TYPE_SHORT, -1, null, 49, 50);
        this.fmlBuffer[50] = new FmlField("ACT_ISSUE_DATE", FmlField.TYPE_STRING, 15, null, 50, 50);
        this.fmlBuffer[51] = new FmlField("ITEM_ID", FmlField.TYPE_STRING, 16, null, 51, 50);
        this.fmlBuffer[52] = new FmlField("POOL", FmlField.TYPE_STRING, 3, null, 52, 50);
        this.fmlBuffer[53] = new FmlField("LOCATION_ID", FmlField.TYPE_STRING, 5, null, 53, 50);
        this.fmlBuffer[54] = new FmlField("DOCUMENT_LOC_ID", FmlField.TYPE_STRING, 5, null, 54, 50);
        this.fmlBuffer[55] = new FmlField("DOCUMENT_TYPE", FmlField.TYPE_BYTE, -1, null, 55, 50);
        this.fmlBuffer[56] = new FmlField("DOCUMENT_OID", FmlField.TYPE_INTEGER, -1, null, 56, 50);
        this.fmlBuffer[57] = new FmlField("ACTIVITY_CODE", FmlField.TYPE_STRING, 5, null, 57, 50);
        this.fmlBuffer[58] = new FmlField("ACTIVITY_DATE", FmlField.TYPE_STRING, 15, null, 58, 50);
        this.fmlBuffer[59] = new FmlField("OPERATION_STATUS", FmlField.TYPE_BYTE, -1, null, 59, 50);
        this.fmlBuffer[60] = new FmlField("ITEM_OWNERSHIP", FmlField.TYPE_BYTE, -1, null, 60, 50);
        this.fmlBuffer[61] = new FmlField("ITEM_OWNERSHIP_DT", FmlField.TYPE_STRING, 15, null, 61, 50);
        this.fmlBuffer[62] = new FmlField("CURR_POSSESSION", FmlField.TYPE_BYTE, -1, null, 62, 50);
        this.fmlBuffer[63] = new FmlField("CURR_POSSESSION_DT", FmlField.TYPE_STRING, 15, null, 63, 50);
        this.fmlBuffer[64] = new FmlField("MISSING_IND", FmlField.TYPE_BYTE, -1, null, 64, 50);
        this.fmlBuffer[65] = new FmlField("IN_REPAIR_IND", FmlField.TYPE_BYTE, -1, null, 65, 50);
        this.fmlBuffer[66] = new FmlField("IN_TRANSIT_IND", FmlField.TYPE_BYTE, -1, null, 66, 50);
        this.fmlBuffer[67] = new FmlField("COMITED_TO_POS_IND", FmlField.TYPE_BYTE, -1, null, 67, 50);
        this.fmlBuffer[68] = new FmlField("COMITED_DATE", FmlField.TYPE_STRING, 15, null, 68, 50);
        this.fmlBuffer[69] = new FmlField("POS_DOCUMENT_LOCID", FmlField.TYPE_STRING, 5, null, 69, 50);
        this.fmlBuffer[70] = new FmlField("POS_DOCUMENT_TYPE", FmlField.TYPE_BYTE, -1, null, 70, 50);
        this.fmlBuffer[71] = new FmlField("POS_DOCUMENT_OID", FmlField.TYPE_INTEGER, -1, null, 71, 50);
        this.fmlBuffer[72] = new FmlField("ACTIVITY_REASON", FmlField.TYPE_STRING, 4, null, 72, 50);
        this.fmlBuffer[73] = new FmlField("LAST_COUNTED_DATE", FmlField.TYPE_STRING, 15, null, 73, 50);
        this.fmlBuffer[74] = new FmlField("UPGRADE_IND", FmlField.TYPE_BYTE, -1, null, 74, 50);
        this.fmlBuffer[75] = new FmlField("EXPECTED_RTRN_DATE", FmlField.TYPE_STRING, 15, null, 75, 50);
        this.fmlBuffer[76] = new FmlField("REPAIR_LOCATION_ID", FmlField.TYPE_STRING, 5, null, 76, 50);
        this.fmlBuffer[77] = new FmlField("INITIAL_BOOK_VALUE", FmlField.TYPE_DOUBLE, -1, null, 77, 50);
        this.fmlBuffer[78] = new FmlField("INITIAL_DPR_DATE", FmlField.TYPE_STRING, 9, null, 78, 50);
        this.fmlBuffer[79] = new FmlField("INI_NO_MONTHS_TO_DPR", FmlField.TYPE_SHORT, -1, null, 79, 50);
        this.fmlBuffer[80] = new FmlField("LAST_DPR_DATE", FmlField.TYPE_STRING, 15, null, 80, 50);
        this.fmlBuffer[81] = new FmlField("CURRENT_BOOK_VALUE", FmlField.TYPE_DOUBLE, -1, null, 81, 50);
        this.fmlBuffer[82] = new FmlField("CUR_NO_MONTHS_TO_DPR", FmlField.TYPE_SHORT, -1, null, 82, 50);
        this.fmlBuffer[83] = new FmlField("POLICE_REPORT_NO", FmlField.TYPE_STRING, 16, null, 83, 50);
        this.fmlBuffer[84] = new FmlField("POLICE_REPORT_DATE", FmlField.TYPE_STRING, 15, null, 84, 50);
        this.fmlBuffer[85] = new FmlField("POLICE_STATION", FmlField.TYPE_STRING, 31, null, 85, 50);
        this.fmlBuffer[86] = new FmlField("MSN", FmlField.TYPE_STRING, 11, null, 86, 50);
        this.fmlBuffer[87] = new FmlField("PUK", FmlField.TYPE_INTEGER, -1, null, 87, 50);
        this.fmlBuffer[88] = new FmlField("PACKAGE_ID", FmlField.TYPE_INTEGER, -1, null, 88, 50);
        this.fmlBuffer[89] = new FmlField("PACKAGE_MSISDN", FmlField.TYPE_STRING, 21, null, 89, 50);
        this.fmlBuffer[90] = new FmlField("PUK2", FmlField.TYPE_INTEGER, -1, null, 90, 50);
        this.fmlBuffer[91] = new FmlField("IMSI", FmlField.TYPE_STRING, 16, null, 91, 50);
        this.fmlBuffer[92] = new FmlField("KI", FmlField.TYPE_STRING, 33, null, 92, 50);
        this.fmlBuffer[93] = new FmlField("FIRST_USED_DATE", FmlField.TYPE_STRING, 15, null, 93, 50);
        this.fmlBuffer[94] = new FmlField("SIM_STATUS", FmlField.TYPE_BYTE, -1, null, 94, 50);
        this.fmlBuffer[95] = new FmlField("SUSPEND_IND", FmlField.TYPE_BYTE, -1, null, 95, 50);
        this.fmlBuffer[96] = new FmlField("SUSPEND_DATE", FmlField.TYPE_STRING, 15, null, 96, 50);
        this.fmlBuffer[97] = new FmlField("INITIAL_PIN", FmlField.TYPE_SHORT, -1, null, 97, 50);
        this.fmlBuffer[98] = new FmlField("SENT_TO_AUC_IND", FmlField.TYPE_BYTE, -1, null, 98, 50);
        this.fmlBuffer[99] = new FmlField("HLR_CD", FmlField.TYPE_STRING, 4, null, 99, 50);
        this.fmlBuffer[100] = new FmlField("INITIAL_PIN2", FmlField.TYPE_SHORT, -1, null, 100, 50);
        this.fmlBuffer[101] = new FmlField("K4ID", FmlField.TYPE_STRING, 41, null, 101, 50);
    }

    /**
     * Retrieves the value of the 'GENERATION' field in the FML buffer.
     *
     * @return Value of 'GENERATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GENERATION() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[0].getValue(0));
    }

    /**
     * Retrieves the value of the 'DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[1].getValue(0));
    }

    /**
     * Retrieves the value of the 'FIRST_DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'FIRST_DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_FIRST_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[2].getValue(0));
    }

    /**
     * Retrieves the value of the 'SECOND_DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'SECOND_DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SECOND_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[3].getValue(0));
    }

    /**
     * Retrieves the value of the 'OPERATOR_ID' field in the FML buffer.
     *
     * @return Value of 'OPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_OPERATOR_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[4].getValue(0));
    }

    /**
     * Retrieves the value of the 'APPLICATION_ID' field in the FML buffer.
     *
     * @return Value of 'APPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_APPLICATION_ID() throws FMLManipulationException {
        return ((String) this.fmlBuffer[5].getValue(0));
    }

    /**
     * Retrieves the value of the 'TRANSACTION_MODE' field in the FML buffer.
     *
     * @return Value of 'TRANSACTION_MODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TRANSACTION_MODE() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[6].getValue(0)));
    }

    /**
     * Retrieves the value of the 'RUN_DATE' field in the FML buffer.
     *
     * @return Value of 'RUN_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RUN_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[7].getValue(0));
    }

    /**
     * Retrieves the value of the 'MARKET_CODE' field in the FML buffer.
     *
     * @return Value of 'MARKET_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MARKET_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[8].getValue(0));
    }

    /**
     * Retrieves the value of the 'SVC_STATUS' field in the FML buffer.
     *
     * @return Value of 'SVC_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SVC_STATUS() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[9].getValue(0)));
    }

    /**
     * Retrieves the value of the 'LAST_UPDATE_DATE' field in the FML buffer.
     *
     * @return Value of 'LAST_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LAST_UPDATE_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[10].getValue(0));
    }

    /**
     * Retrieves the value of the 'LAST_UPDATE_STAMP' field in the FML buffer.
     *
     * @return Value of 'LAST_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_LAST_UPDATE_STAMP() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[11].getValue(0)));
    }

    /**
     * Retrieves the value of the 'ENV_CODE' field in the FML buffer.
     *
     * @return Value of 'ENV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ENV_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[12].getValue(0));
    }

    /**
     * Retrieves the value of the 'SESSION_ID' field in the FML buffer.
     *
     * @return Value of 'SESSION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SESSION_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[13].getValue(0));
    }

    /**
     * Retrieves the value of the 'ONLINE_TRX_NO' field in the FML buffer.
     *
     * @return Value of 'ONLINE_TRX_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ONLINE_TRX_NO() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[14].getValue(0));
    }

    /**
     * Retrieves the value of the 'GROUP_TRX_ID' field in the FML buffer.
     *
     * @return Value of 'GROUP_TRX_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GROUP_TRX_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[15].getValue(0));
    }

    /**
     * Retrieves the value of the 'INDAA' field in the FML buffer.
     *
     * @return Value of 'INDAA' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INDAA() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[16].getValue(0)));
    }

    /**
     * Retrieves the value of the 'INDPREACTIVATE' field in the FML buffer.
     *
     * @return Value of 'INDPREACTIVATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INDPREACTIVATE() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[17].getValue(0)));
    }

    /**
     * Retrieves the value of the 'LOC_COMP_LN' field in the FML buffer.
     *
     * @return Value of 'LOC_COMP_LN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LOC_COMP_LN() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[18].getValue(0)));
    }

    /**
     * Retrieves the value of the 'ROWID' field in the FML buffer.
     *
     * @return Value of 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ROWID() throws FMLManipulationException {
        return ((String) this.fmlBuffer[19].getValue(0));
    }

    /**
     * Retrieves the value of the 'CTN' field in the FML buffer.
     *
     * @return Value of 'CTN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CTN() throws FMLManipulationException {
        return ((String) this.fmlBuffer[20].getValue(0));
    }

    /**
     * Retrieves the value of the 'SYS_CREATION_DATE' field in the FML buffer.
     *
     * @return Value of 'SYS_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SYS_CREATION_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[21].getValue(0));
    }

    /**
     * Retrieves the value of the 'SYS_UPDATE_DATE' field in the FML buffer.
     *
     * @return Value of 'SYS_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SYS_UPDATE_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[22].getValue(0));
    }

    /**
     * Retrieves the value of the 'TNINVOPERATOR_ID' field in the FML buffer.
     *
     * @return Value of 'TNINVOPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_TNINVOPERATOR_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[23].getValue(0));
    }

    /**
     * Retrieves the value of the 'TNINVAPPLICATION_ID' field in the FML buffer.
     *
     * @return Value of 'TNINVAPPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TNINVAPPLICATION_ID() throws FMLManipulationException {
        return ((String) this.fmlBuffer[24].getValue(0));
    }

    /**
     * Retrieves the value of the 'DL_SERVICE_CODE' field in the FML buffer.
     *
     * @return Value of 'DL_SERVICE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DL_SERVICE_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[25].getValue(0));
    }

    /**
     * Retrieves the value of the 'DL_UPDATE_STAMP' field in the FML buffer.
     *
     * @return Value of 'DL_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DL_UPDATE_STAMP() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[26].getValue(0)));
    }

    /**
     * Retrieves the value of the 'LAST_TRX_DATE' field in the FML buffer.
     *
     * @return Value of 'LAST_TRX_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LAST_TRX_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[27].getValue(0));
    }

    /**
     * Retrieves the value of the 'LAST_TRX_CODE' field in the FML buffer.
     *
     * @return Value of 'LAST_TRX_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LAST_TRX_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[28].getValue(0));
    }

    /**
     * Retrieves the value of the 'LAST_TRX_UID' field in the FML buffer.
     *
     * @return Value of 'LAST_TRX_UID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_LAST_TRX_UID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[29].getValue(0));
    }

    /**
     * Retrieves the value of the 'CTN_STATUS' field in the FML buffer.
     *
     * @return Value of 'CTN_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CTN_STATUS() throws FMLManipulationException {
        return ((String) this.fmlBuffer[30].getValue(0));
    }

    /**
     * Retrieves the value of the 'NL' field in the FML buffer.
     *
     * @return Value of 'NL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_NL() throws FMLManipulationException {
        return ((String) this.fmlBuffer[31].getValue(0));
    }

    /**
     * Retrieves the value of the 'NGP' field in the FML buffer.
     *
     * @return Value of 'NGP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_NGP() throws FMLManipulationException {
        return ((String) this.fmlBuffer[32].getValue(0));
    }

    /**
     * Retrieves the value of the 'SPECIAL_TRX_DATE' field in the FML buffer.
     *
     * @return Value of 'SPECIAL_TRX_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SPECIAL_TRX_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[33].getValue(0));
    }

    /**
     * Retrieves the value of the 'TN_IN_USE' field in the FML buffer.
     *
     * @return Value of 'TN_IN_USE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TN_IN_USE() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[34].getValue(0)));
    }

    /**
     * Retrieves the value of the 'REASON' field in the FML buffer.
     *
     * @return Value of 'REASON' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_REASON() throws FMLManipulationException {
        return ((String) this.fmlBuffer[35].getValue(0));
    }

    /**
     * Retrieves the value of the 'PNI' field in the FML buffer.
     *
     * @return Value of 'PNI' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PNI() throws FMLManipulationException {
        return ((String) this.fmlBuffer[36].getValue(0));
    }

    /**
     * Retrieves the value of the 'SPECIAL_TRX_NO' field in the FML buffer.
     *
     * @return Value of 'SPECIAL_TRX_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SPECIAL_TRX_NO() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[37].getValue(0)));
    }

    /**
     * Retrieves the value of the 'CONV_RUN_NO' field in the FML buffer.
     *
     * @return Value of 'CONV_RUN_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_CONV_RUN_NO() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[38].getValue(0)));
    }

    /**
     * Retrieves the value of the 'ITEM_SDESC' field in the FML buffer.
     *
     * @return Value of 'ITEM_SDESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ITEM_SDESC() throws FMLManipulationException {
        return ((String) this.fmlBuffer[39].getValue(0));
    }

    /**
     * Retrieves the value of the 'MOREROWS' field in the FML buffer.
     *
     * @return Value of 'MOREROWS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_MOREROWS() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[40].getValue(0)));
    }

    /**
     * Retrieves the value of the 'ROWCOUNT' field in the FML buffer.
     *
     * @return Value of 'ROWCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROWCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[41].getValue(0));
    }

    /**
     * Retrieves the value of the 'SITINVROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SITINVROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SITINVROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[42].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SITINVROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'SITINVROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SITINVROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[42].getCount());
    }

    /**
     * Retrieves the value of the 'SERIAL_NUMBER' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SERIAL_NUMBER' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SERIAL_NUMBER(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[43].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SERIAL_NUMBER' field in the FML buffer.
     *
     * @return Number of values defined for 'SERIAL_NUMBER' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SERIAL_NUMBER_size() throws FMLManipulationException {
        return (this.fmlBuffer[43].getCount());
    }

    /**
     * Retrieves the value of the 'SITINVSYS_CREATION_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SITINVSYS_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SITINVSYS_CREATION_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[44].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SITINVSYS_CREATION_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SITINVSYS_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SITINVSYS_CREATION_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[44].getCount());
    }

    /**
     * Retrieves the value of the 'SITINVSYS_UPDATE_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SITINVSYS_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SITINVSYS_UPDATE_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[45].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SITINVSYS_UPDATE_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SITINVSYS_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SITINVSYS_UPDATE_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[45].getCount());
    }

    /**
     * Retrieves the value of the 'SITINVOPERATOR_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SITINVOPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SITINVOPERATOR_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[46].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SITINVOPERATOR_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'SITINVOPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SITINVOPERATOR_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[46].getCount());
    }

    /**
     * Retrieves the value of the 'SITINVAPPLICATION_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SITINVAPPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SITINVAPPLICATION_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[47].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SITINVAPPLICATION_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'SITINVAPPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SITINVAPPLICATION_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[47].getCount());
    }

    /**
     * Retrieves the value of the 'SITINVDL_SERVICE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SITINVDL_SERVICE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SITINVDL_SERVICE_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[48].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SITINVDL_SERVICE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'SITINVDL_SERVICE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SITINVDL_SERVICE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[48].getCount());
    }

    /**
     * Retrieves the value of the 'SITINVDL_UPDATE_STAMP' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SITINVDL_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SITINVDL_UPDATE_STAMP(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[49].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'SITINVDL_UPDATE_STAMP' field in the FML buffer.
     *
     * @return Number of values defined for 'SITINVDL_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SITINVDL_UPDATE_STAMP_size() throws FMLManipulationException {
        return (this.fmlBuffer[49].getCount());
    }

    /**
     * Retrieves the value of the 'ACT_ISSUE_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ACT_ISSUE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACT_ISSUE_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[50].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ACT_ISSUE_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACT_ISSUE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACT_ISSUE_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[50].getCount());
    }

    /**
     * Retrieves the value of the 'ITEM_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ITEM_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ITEM_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[51].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ITEM_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'ITEM_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ITEM_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[51].getCount());
    }

    /**
     * Retrieves the value of the 'POOL' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'POOL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_POOL(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[52].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'POOL' field in the FML buffer.
     *
     * @return Number of values defined for 'POOL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_POOL_size() throws FMLManipulationException {
        return (this.fmlBuffer[52].getCount());
    }

    /**
     * Retrieves the value of the 'LOCATION_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'LOCATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LOCATION_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[53].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'LOCATION_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'LOCATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LOCATION_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[53].getCount());
    }

    /**
     * Retrieves the value of the 'DOCUMENT_LOC_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'DOCUMENT_LOC_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DOCUMENT_LOC_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[54].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DOCUMENT_LOC_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'DOCUMENT_LOC_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DOCUMENT_LOC_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[54].getCount());
    }

    /**
     * Retrieves the value of the 'DOCUMENT_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'DOCUMENT_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DOCUMENT_TYPE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[55].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'DOCUMENT_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'DOCUMENT_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DOCUMENT_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[55].getCount());
    }

    /**
     * Retrieves the value of the 'DOCUMENT_OID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'DOCUMENT_OID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DOCUMENT_OID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[56].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DOCUMENT_OID' field in the FML buffer.
     *
     * @return Number of values defined for 'DOCUMENT_OID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DOCUMENT_OID_size() throws FMLManipulationException {
        return (this.fmlBuffer[56].getCount());
    }

    /**
     * Retrieves the value of the 'ACTIVITY_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ACTIVITY_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACTIVITY_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[57].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ACTIVITY_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTIVITY_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTIVITY_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[57].getCount());
    }

    /**
     * Retrieves the value of the 'ACTIVITY_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ACTIVITY_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACTIVITY_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[58].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ACTIVITY_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTIVITY_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTIVITY_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[58].getCount());
    }

    /**
     * Retrieves the value of the 'OPERATION_STATUS' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'OPERATION_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_OPERATION_STATUS(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[59].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'OPERATION_STATUS' field in the FML buffer.
     *
     * @return Number of values defined for 'OPERATION_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_OPERATION_STATUS_size() throws FMLManipulationException {
        return (this.fmlBuffer[59].getCount());
    }

    /**
     * Retrieves the value of the 'ITEM_OWNERSHIP' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ITEM_OWNERSHIP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ITEM_OWNERSHIP(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[60].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'ITEM_OWNERSHIP' field in the FML buffer.
     *
     * @return Number of values defined for 'ITEM_OWNERSHIP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ITEM_OWNERSHIP_size() throws FMLManipulationException {
        return (this.fmlBuffer[60].getCount());
    }

    /**
     * Retrieves the value of the 'ITEM_OWNERSHIP_DT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ITEM_OWNERSHIP_DT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ITEM_OWNERSHIP_DT(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[61].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ITEM_OWNERSHIP_DT' field in the FML buffer.
     *
     * @return Number of values defined for 'ITEM_OWNERSHIP_DT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ITEM_OWNERSHIP_DT_size() throws FMLManipulationException {
        return (this.fmlBuffer[61].getCount());
    }

    /**
     * Retrieves the value of the 'CURR_POSSESSION' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'CURR_POSSESSION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CURR_POSSESSION(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[62].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'CURR_POSSESSION' field in the FML buffer.
     *
     * @return Number of values defined for 'CURR_POSSESSION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CURR_POSSESSION_size() throws FMLManipulationException {
        return (this.fmlBuffer[62].getCount());
    }

    /**
     * Retrieves the value of the 'CURR_POSSESSION_DT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'CURR_POSSESSION_DT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CURR_POSSESSION_DT(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[63].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CURR_POSSESSION_DT' field in the FML buffer.
     *
     * @return Number of values defined for 'CURR_POSSESSION_DT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CURR_POSSESSION_DT_size() throws FMLManipulationException {
        return (this.fmlBuffer[63].getCount());
    }

    /**
     * Retrieves the value of the 'MISSING_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'MISSING_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MISSING_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[64].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'MISSING_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'MISSING_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MISSING_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[64].getCount());
    }

    /**
     * Retrieves the value of the 'IN_REPAIR_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'IN_REPAIR_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_IN_REPAIR_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[65].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'IN_REPAIR_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'IN_REPAIR_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_IN_REPAIR_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[65].getCount());
    }

    /**
     * Retrieves the value of the 'IN_TRANSIT_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'IN_TRANSIT_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_IN_TRANSIT_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[66].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'IN_TRANSIT_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'IN_TRANSIT_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_IN_TRANSIT_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[66].getCount());
    }

    /**
     * Retrieves the value of the 'COMITED_TO_POS_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'COMITED_TO_POS_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_COMITED_TO_POS_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[67].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'COMITED_TO_POS_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'COMITED_TO_POS_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_COMITED_TO_POS_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[67].getCount());
    }

    /**
     * Retrieves the value of the 'COMITED_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'COMITED_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_COMITED_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[68].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'COMITED_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'COMITED_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_COMITED_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[68].getCount());
    }

    /**
     * Retrieves the value of the 'POS_DOCUMENT_LOCID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'POS_DOCUMENT_LOCID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_POS_DOCUMENT_LOCID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[69].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'POS_DOCUMENT_LOCID' field in the FML buffer.
     *
     * @return Number of values defined for 'POS_DOCUMENT_LOCID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_POS_DOCUMENT_LOCID_size() throws FMLManipulationException {
        return (this.fmlBuffer[69].getCount());
    }

    /**
     * Retrieves the value of the 'POS_DOCUMENT_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'POS_DOCUMENT_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_POS_DOCUMENT_TYPE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[70].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'POS_DOCUMENT_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'POS_DOCUMENT_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_POS_DOCUMENT_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[70].getCount());
    }

    /**
     * Retrieves the value of the 'POS_DOCUMENT_OID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'POS_DOCUMENT_OID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_POS_DOCUMENT_OID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[71].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'POS_DOCUMENT_OID' field in the FML buffer.
     *
     * @return Number of values defined for 'POS_DOCUMENT_OID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_POS_DOCUMENT_OID_size() throws FMLManipulationException {
        return (this.fmlBuffer[71].getCount());
    }

    /**
     * Retrieves the value of the 'ACTIVITY_REASON' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ACTIVITY_REASON' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACTIVITY_REASON(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[72].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ACTIVITY_REASON' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTIVITY_REASON' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTIVITY_REASON_size() throws FMLManipulationException {
        return (this.fmlBuffer[72].getCount());
    }

    /**
     * Retrieves the value of the 'LAST_COUNTED_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'LAST_COUNTED_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LAST_COUNTED_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[73].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'LAST_COUNTED_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'LAST_COUNTED_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LAST_COUNTED_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[73].getCount());
    }

    /**
     * Retrieves the value of the 'UPGRADE_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'UPGRADE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_UPGRADE_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[74].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'UPGRADE_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'UPGRADE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_UPGRADE_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[74].getCount());
    }

    /**
     * Retrieves the value of the 'EXPECTED_RTRN_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'EXPECTED_RTRN_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_EXPECTED_RTRN_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[75].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'EXPECTED_RTRN_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'EXPECTED_RTRN_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_EXPECTED_RTRN_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[75].getCount());
    }

    /**
     * Retrieves the value of the 'REPAIR_LOCATION_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'REPAIR_LOCATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_REPAIR_LOCATION_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[76].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'REPAIR_LOCATION_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'REPAIR_LOCATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_REPAIR_LOCATION_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[76].getCount());
    }

    /**
     * Retrieves the value of the 'INITIAL_BOOK_VALUE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'INITIAL_BOOK_VALUE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_INITIAL_BOOK_VALUE(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[77].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INITIAL_BOOK_VALUE' field in the FML buffer.
     *
     * @return Number of values defined for 'INITIAL_BOOK_VALUE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INITIAL_BOOK_VALUE_size() throws FMLManipulationException {
        return (this.fmlBuffer[77].getCount());
    }

    /**
     * Retrieves the value of the 'INITIAL_DPR_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'INITIAL_DPR_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INITIAL_DPR_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[78].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INITIAL_DPR_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'INITIAL_DPR_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INITIAL_DPR_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[78].getCount());
    }

    /**
     * Retrieves the value of the 'INI_NO_MONTHS_TO_DPR' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'INI_NO_MONTHS_TO_DPR' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_INI_NO_MONTHS_TO_DPR(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[79].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'INI_NO_MONTHS_TO_DPR' field in the FML buffer.
     *
     * @return Number of values defined for 'INI_NO_MONTHS_TO_DPR' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INI_NO_MONTHS_TO_DPR_size() throws FMLManipulationException {
        return (this.fmlBuffer[79].getCount());
    }

    /**
     * Retrieves the value of the 'LAST_DPR_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'LAST_DPR_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LAST_DPR_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[80].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'LAST_DPR_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'LAST_DPR_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LAST_DPR_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[80].getCount());
    }

    /**
     * Retrieves the value of the 'CURRENT_BOOK_VALUE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'CURRENT_BOOK_VALUE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_CURRENT_BOOK_VALUE(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[81].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CURRENT_BOOK_VALUE' field in the FML buffer.
     *
     * @return Number of values defined for 'CURRENT_BOOK_VALUE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CURRENT_BOOK_VALUE_size() throws FMLManipulationException {
        return (this.fmlBuffer[81].getCount());
    }

    /**
     * Retrieves the value of the 'CUR_NO_MONTHS_TO_DPR' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'CUR_NO_MONTHS_TO_DPR' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_CUR_NO_MONTHS_TO_DPR(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[82].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'CUR_NO_MONTHS_TO_DPR' field in the FML buffer.
     *
     * @return Number of values defined for 'CUR_NO_MONTHS_TO_DPR' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CUR_NO_MONTHS_TO_DPR_size() throws FMLManipulationException {
        return (this.fmlBuffer[82].getCount());
    }

    /**
     * Retrieves the value of the 'POLICE_REPORT_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'POLICE_REPORT_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_POLICE_REPORT_NO(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[83].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'POLICE_REPORT_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'POLICE_REPORT_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_POLICE_REPORT_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[83].getCount());
    }

    /**
     * Retrieves the value of the 'POLICE_REPORT_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'POLICE_REPORT_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_POLICE_REPORT_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[84].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'POLICE_REPORT_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'POLICE_REPORT_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_POLICE_REPORT_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[84].getCount());
    }

    /**
     * Retrieves the value of the 'POLICE_STATION' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'POLICE_STATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_POLICE_STATION(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[85].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'POLICE_STATION' field in the FML buffer.
     *
     * @return Number of values defined for 'POLICE_STATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_POLICE_STATION_size() throws FMLManipulationException {
        return (this.fmlBuffer[85].getCount());
    }

    /**
     * Retrieves the value of the 'MSN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'MSN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MSN(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[86].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'MSN' field in the FML buffer.
     *
     * @return Number of values defined for 'MSN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MSN_size() throws FMLManipulationException {
        return (this.fmlBuffer[86].getCount());
    }

    /**
     * Retrieves the value of the 'PUK' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'PUK' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_PUK(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[87].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PUK' field in the FML buffer.
     *
     * @return Number of values defined for 'PUK' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PUK_size() throws FMLManipulationException {
        return (this.fmlBuffer[87].getCount());
    }

    /**
     * Retrieves the value of the 'PACKAGE_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'PACKAGE_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_PACKAGE_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[88].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PACKAGE_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'PACKAGE_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PACKAGE_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[88].getCount());
    }

    /**
     * Retrieves the value of the 'PACKAGE_MSISDN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'PACKAGE_MSISDN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PACKAGE_MSISDN(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[89].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PACKAGE_MSISDN' field in the FML buffer.
     *
     * @return Number of values defined for 'PACKAGE_MSISDN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PACKAGE_MSISDN_size() throws FMLManipulationException {
        return (this.fmlBuffer[89].getCount());
    }

    /**
     * Retrieves the value of the 'PUK2' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'PUK2' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_PUK2(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[90].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PUK2' field in the FML buffer.
     *
     * @return Number of values defined for 'PUK2' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PUK2_size() throws FMLManipulationException {
        return (this.fmlBuffer[90].getCount());
    }

    /**
     * Retrieves the value of the 'IMSI' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'IMSI' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_IMSI(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[91].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'IMSI' field in the FML buffer.
     *
     * @return Number of values defined for 'IMSI' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_IMSI_size() throws FMLManipulationException {
        return (this.fmlBuffer[91].getCount());
    }

    /**
     * Retrieves the value of the 'KI' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'KI' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_KI(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[92].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'KI' field in the FML buffer.
     *
     * @return Number of values defined for 'KI' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_KI_size() throws FMLManipulationException {
        return (this.fmlBuffer[92].getCount());
    }

    /**
     * Retrieves the value of the 'FIRST_USED_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'FIRST_USED_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FIRST_USED_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[93].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'FIRST_USED_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'FIRST_USED_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FIRST_USED_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[93].getCount());
    }

    /**
     * Retrieves the value of the 'SIM_STATUS' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SIM_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SIM_STATUS(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[94].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'SIM_STATUS' field in the FML buffer.
     *
     * @return Number of values defined for 'SIM_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SIM_STATUS_size() throws FMLManipulationException {
        return (this.fmlBuffer[94].getCount());
    }

    /**
     * Retrieves the value of the 'SUSPEND_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SUSPEND_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SUSPEND_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[95].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'SUSPEND_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'SUSPEND_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SUSPEND_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[95].getCount());
    }

    /**
     * Retrieves the value of the 'SUSPEND_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SUSPEND_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SUSPEND_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[96].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SUSPEND_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SUSPEND_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SUSPEND_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[96].getCount());
    }

    /**
     * Retrieves the value of the 'INITIAL_PIN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'INITIAL_PIN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_INITIAL_PIN(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[97].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'INITIAL_PIN' field in the FML buffer.
     *
     * @return Number of values defined for 'INITIAL_PIN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INITIAL_PIN_size() throws FMLManipulationException {
        return (this.fmlBuffer[97].getCount());
    }

    /**
     * Retrieves the value of the 'SENT_TO_AUC_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SENT_TO_AUC_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SENT_TO_AUC_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[98].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'SENT_TO_AUC_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'SENT_TO_AUC_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SENT_TO_AUC_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[98].getCount());
    }

    /**
     * Retrieves the value of the 'HLR_CD' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'HLR_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_HLR_CD(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[99].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'HLR_CD' field in the FML buffer.
     *
     * @return Number of values defined for 'HLR_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_HLR_CD_size() throws FMLManipulationException {
        return (this.fmlBuffer[99].getCount());
    }

    /**
     * Retrieves the value of the 'INITIAL_PIN2' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'INITIAL_PIN2' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_INITIAL_PIN2(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[100].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'INITIAL_PIN2' field in the FML buffer.
     *
     * @return Number of values defined for 'INITIAL_PIN2' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INITIAL_PIN2_size() throws FMLManipulationException {
        return (this.fmlBuffer[100].getCount());
    }

    /**
     * Retrieves the value of the 'K4ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'K4ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_K4ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[101].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'K4ID' field in the FML buffer.
     *
     * @return Number of values defined for 'K4ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_K4ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[101].getCount());
    }
}