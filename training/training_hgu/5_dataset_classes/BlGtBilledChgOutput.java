package no.netcom.ninja.core.system.tuxedo.service.parameters;

import bea.jolt.pool.Result;
import no.netcom.ninja.core.system.tuxedo.exception.FMLManipulationException;
import no.netcom.ninja.core.util.TypeConverter;

/**
 * @author  Ninja - Generated by Ninja tools
 */
public class BlGtBilledChgOutput extends ServiceOutput {

    /**
     * Creates a new instance of BlGtBilledChgOutput.
     *
     * @throws FMLManipulationException
     */
    public BlGtBilledChgOutput(int nApplicationStatus) throws FMLManipulationException {
        createFmlBuffer();
        setApplicationCode(nApplicationStatus);
    }

    public BlGtBilledChgOutput() {
    }

    /**
     * Creates a new instance of BlGtBilledChgOutput.
     *
     * @param ds Output dataset from BlGtBilledChg service.
     * @throws FMLManipulationException
     */
    public BlGtBilledChgOutput(Result ds) throws FMLManipulationException {
        createFmlBuffer();
        populateFmlBuffer(ds);
    }

    /**
     * Populates the FML buffer.
     *
     * @throws FMLManipulationException
     */
    private void createFmlBuffer() throws FMLManipulationException {
        this.fmlBuffer = new FmlField[36];
        this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
        this.fmlBuffer[1] = new FmlField("MOREROWS", FmlField.TYPE_SHORT, -1, null, 1, 1);
        this.fmlBuffer[2] = new FmlField("ROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 2, 1);
        this.fmlBuffer[3] = new FmlField("TOTALCOUNT", FmlField.TYPE_INTEGER, -1, null, 3, 1);
        this.fmlBuffer[4] = new FmlField("TYPE", FmlField.TYPE_STRING, 3, null, 4, 600);
        this.fmlBuffer[5] = new FmlField("FROM_DATE", FmlField.TYPE_STRING, 9, null, 5, 600);
        this.fmlBuffer[6] = new FmlField("TO_DATE", FmlField.TYPE_STRING, 9, null, 6, 600);
        this.fmlBuffer[7] = new FmlField("FEATURE_CODE", FmlField.TYPE_STRING, 7, null, 7, 600);
        this.fmlBuffer[8] = new FmlField("FEATURE_DESC", FmlField.TYPE_STRING, 101, null, 8, 600);
        this.fmlBuffer[9] = new FmlField("FEATURE_CATEGORY", FmlField.TYPE_STRING, 5, null, 9, 600);
        this.fmlBuffer[10] = new FmlField("AMOUNT_INCL_TAX", FmlField.TYPE_DOUBLE, -1, null, 10, 600);
        this.fmlBuffer[11] = new FmlField("TAX_AMOUNT", FmlField.TYPE_DOUBLE, -1, null, 11, 600);
        this.fmlBuffer[12] = new FmlField("TAX_EXMP_AMOUNT", FmlField.TYPE_DOUBLE, -1, null, 12, 600);
        this.fmlBuffer[13] = new FmlField("PACKAGE_DESC", FmlField.TYPE_STRING, 10, null, 13, 600);
        this.fmlBuffer[14] = new FmlField("NUM_OF_CALLS", FmlField.TYPE_INTEGER, -1, null, 14, 600);
        this.fmlBuffer[15] = new FmlField("DURATION", FmlField.TYPE_DOUBLE, -1, null, 15, 600);
        this.fmlBuffer[16] = new FmlField("ACTV_CODE", FmlField.TYPE_STRING, 5, null, 16, 600);
        this.fmlBuffer[17] = new FmlField("ENT_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 17, 600);
        this.fmlBuffer[18] = new FmlField("BALANCE_IMPACT_CODE", FmlField.TYPE_BYTE, -1, null, 18, 600);
        this.fmlBuffer[19] = new FmlField("INV_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 19, 600);
        this.fmlBuffer[20] = new FmlField("FTR_REVENUE_CODE", FmlField.TYPE_STRING, 4, null, 20, 600);
        this.fmlBuffer[21] = new FmlField("CHARGE_TYPE", FmlField.TYPE_BYTE, -1, null, 21, 600);
        this.fmlBuffer[22] = new FmlField("BL_IGNORE_IND", FmlField.TYPE_BYTE, -1, null, 22, 600);
        this.fmlBuffer[23] = new FmlField("UNIT_MEASURE_CODE", FmlField.TYPE_BYTE, -1, null, 23, 600);
        this.fmlBuffer[24] = new FmlField("ADJUSTED_AMT", FmlField.TYPE_DOUBLE, -1, null, 24, 600);
        this.fmlBuffer[25] = new FmlField("DISCOUNTED_AMT", FmlField.TYPE_DOUBLE, -1, null, 25, 600);
        this.fmlBuffer[26] = new FmlField("BAN_LVL_CRD_AMT", FmlField.TYPE_DOUBLE, -1, null, 26, 600);
        this.fmlBuffer[27] = new FmlField("UTC_DISCOUNT_TYPE", FmlField.TYPE_STRING, 3, null, 27, 600);
        this.fmlBuffer[28] = new FmlField("SERVICE_DESC", FmlField.TYPE_STRING, 501, null, 28, 600);
        this.fmlBuffer[29] = new FmlField("ACTV_REASON_CODE", FmlField.TYPE_STRING, 7, null, 29, 600);
        this.fmlBuffer[30] = new FmlField("DISCOUNTED_VAT_AMT", FmlField.TYPE_DOUBLE, -1, null, 30, 600);
        this.fmlBuffer[31] = new FmlField("BILL_COMMENT", FmlField.TYPE_STRING, 501, null, 31, 600);
        this.fmlBuffer[32] = new FmlField("QUANTITY", FmlField.TYPE_INTEGER, -1, null, 32, 600);
        this.fmlBuffer[33] = new FmlField("TML_UTC_IND", FmlField.TYPE_BYTE, -1, null, 33, 600);
        this.fmlBuffer[34] = new FmlField("UTC_FROM_TO_BAN", FmlField.TYPE_INTEGER, -1, null, 34, 600);
        this.fmlBuffer[35] = new FmlField("UTC_FROM_SUBSCRIBER", FmlField.TYPE_STRING, 21, null, 35, 600);
    }

    /**
     * Retrieves the value of the 'GENERATION' field in the FML buffer.
     *
     * @return Value of 'GENERATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GENERATION() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[0].getValue(0));
    }

    /**
     * Retrieves the value of the 'MOREROWS' field in the FML buffer.
     *
     * @return Value of 'MOREROWS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_MOREROWS() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[1].getValue(0)));
    }

    /**
     * Retrieves the value of the 'ROWCOUNT' field in the FML buffer.
     *
     * @return Value of 'ROWCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROWCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[2].getValue(0));
    }

    /**
     * Retrieves the value of the 'TOTALCOUNT' field in the FML buffer.
     *
     * @return Value of 'TOTALCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_TOTALCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[3].getValue(0));
    }

    /**
     * Retrieves the value of the 'TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TYPE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[4].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[4].getCount());
    }

    /**
     * Retrieves the value of the 'FROM_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'FROM_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FROM_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[5].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'FROM_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'FROM_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FROM_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[5].getCount());
    }

    /**
     * Retrieves the value of the 'TO_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'TO_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TO_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[6].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TO_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'TO_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TO_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[6].getCount());
    }

    /**
     * Retrieves the value of the 'FEATURE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'FEATURE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FEATURE_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[7].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'FEATURE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'FEATURE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FEATURE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[7].getCount());
    }

    /**
     * Retrieves the value of the 'FEATURE_DESC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'FEATURE_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FEATURE_DESC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[8].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'FEATURE_DESC' field in the FML buffer.
     *
     * @return Number of values defined for 'FEATURE_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FEATURE_DESC_size() throws FMLManipulationException {
        return (this.fmlBuffer[8].getCount());
    }

    /**
     * Retrieves the value of the 'FEATURE_CATEGORY' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'FEATURE_CATEGORY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FEATURE_CATEGORY(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[9].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'FEATURE_CATEGORY' field in the FML buffer.
     *
     * @return Number of values defined for 'FEATURE_CATEGORY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FEATURE_CATEGORY_size() throws FMLManipulationException {
        return (this.fmlBuffer[9].getCount());
    }

    /**
     * Retrieves the value of the 'AMOUNT_INCL_TAX' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'AMOUNT_INCL_TAX' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_AMOUNT_INCL_TAX(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[10].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'AMOUNT_INCL_TAX' field in the FML buffer.
     *
     * @return Number of values defined for 'AMOUNT_INCL_TAX' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_AMOUNT_INCL_TAX_size() throws FMLManipulationException {
        return (this.fmlBuffer[10].getCount());
    }

    /**
     * Retrieves the value of the 'TAX_AMOUNT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'TAX_AMOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_TAX_AMOUNT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[11].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TAX_AMOUNT' field in the FML buffer.
     *
     * @return Number of values defined for 'TAX_AMOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TAX_AMOUNT_size() throws FMLManipulationException {
        return (this.fmlBuffer[11].getCount());
    }

    /**
     * Retrieves the value of the 'TAX_EXMP_AMOUNT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'TAX_EXMP_AMOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_TAX_EXMP_AMOUNT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[12].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TAX_EXMP_AMOUNT' field in the FML buffer.
     *
     * @return Number of values defined for 'TAX_EXMP_AMOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TAX_EXMP_AMOUNT_size() throws FMLManipulationException {
        return (this.fmlBuffer[12].getCount());
    }

    /**
     * Retrieves the value of the 'PACKAGE_DESC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'PACKAGE_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PACKAGE_DESC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[13].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PACKAGE_DESC' field in the FML buffer.
     *
     * @return Number of values defined for 'PACKAGE_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PACKAGE_DESC_size() throws FMLManipulationException {
        return (this.fmlBuffer[13].getCount());
    }

    /**
     * Retrieves the value of the 'NUM_OF_CALLS' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'NUM_OF_CALLS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_NUM_OF_CALLS(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[14].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'NUM_OF_CALLS' field in the FML buffer.
     *
     * @return Number of values defined for 'NUM_OF_CALLS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_NUM_OF_CALLS_size() throws FMLManipulationException {
        return (this.fmlBuffer[14].getCount());
    }

    /**
     * Retrieves the value of the 'DURATION' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'DURATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_DURATION(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[15].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DURATION' field in the FML buffer.
     *
     * @return Number of values defined for 'DURATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DURATION_size() throws FMLManipulationException {
        return (this.fmlBuffer[15].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'ACTV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACTV_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[16].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ACTV_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[16].getCount());
    }

    /**
     * Retrieves the value of the 'ENT_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'ENT_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ENT_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[17].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ENT_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ENT_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ENT_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[17].getCount());
    }

    /**
     * Retrieves the value of the 'BALANCE_IMPACT_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BALANCE_IMPACT_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BALANCE_IMPACT_CODE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[18].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'BALANCE_IMPACT_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'BALANCE_IMPACT_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BALANCE_IMPACT_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[18].getCount());
    }

    /**
     * Retrieves the value of the 'INV_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'INV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_INV_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[19].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INV_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'INV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INV_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[19].getCount());
    }

    /**
     * Retrieves the value of the 'FTR_REVENUE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'FTR_REVENUE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FTR_REVENUE_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[20].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'FTR_REVENUE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'FTR_REVENUE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FTR_REVENUE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[20].getCount());
    }

    /**
     * Retrieves the value of the 'CHARGE_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'CHARGE_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CHARGE_TYPE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[21].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'CHARGE_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'CHARGE_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CHARGE_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[21].getCount());
    }

    /**
     * Retrieves the value of the 'BL_IGNORE_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BL_IGNORE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BL_IGNORE_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[22].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'BL_IGNORE_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'BL_IGNORE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BL_IGNORE_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[22].getCount());
    }

    /**
     * Retrieves the value of the 'UNIT_MEASURE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'UNIT_MEASURE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_UNIT_MEASURE_CODE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[23].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'UNIT_MEASURE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'UNIT_MEASURE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_UNIT_MEASURE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[23].getCount());
    }

    /**
     * Retrieves the value of the 'ADJUSTED_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'ADJUSTED_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_ADJUSTED_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[24].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADJUSTED_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'ADJUSTED_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADJUSTED_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[24].getCount());
    }

    /**
     * Retrieves the value of the 'DISCOUNTED_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'DISCOUNTED_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_DISCOUNTED_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[25].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DISCOUNTED_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'DISCOUNTED_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DISCOUNTED_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[25].getCount());
    }

    /**
     * Retrieves the value of the 'BAN_LVL_CRD_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BAN_LVL_CRD_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_BAN_LVL_CRD_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[26].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BAN_LVL_CRD_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'BAN_LVL_CRD_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BAN_LVL_CRD_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[26].getCount());
    }

    /**
     * Retrieves the value of the 'UTC_DISCOUNT_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'UTC_DISCOUNT_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_UTC_DISCOUNT_TYPE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[27].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'UTC_DISCOUNT_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'UTC_DISCOUNT_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_UTC_DISCOUNT_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[27].getCount());
    }

    /**
     * Retrieves the value of the 'SERVICE_DESC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'SERVICE_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SERVICE_DESC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[28].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SERVICE_DESC' field in the FML buffer.
     *
     * @return Number of values defined for 'SERVICE_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SERVICE_DESC_size() throws FMLManipulationException {
        return (this.fmlBuffer[28].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_REASON_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'ACTV_REASON_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACTV_REASON_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[29].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ACTV_REASON_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_REASON_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_REASON_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[29].getCount());
    }

    /**
     * Retrieves the value of the 'DISCOUNTED_VAT_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'DISCOUNTED_VAT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_DISCOUNTED_VAT_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[30].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DISCOUNTED_VAT_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'DISCOUNTED_VAT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DISCOUNTED_VAT_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[30].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_COMMENT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BILL_COMMENT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_COMMENT(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[31].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_COMMENT' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_COMMENT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_COMMENT_size() throws FMLManipulationException {
        return (this.fmlBuffer[31].getCount());
    }

    /**
     * Retrieves the value of the 'QUANTITY' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'QUANTITY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_QUANTITY(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[32].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'QUANTITY' field in the FML buffer.
     *
     * @return Number of values defined for 'QUANTITY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_QUANTITY_size() throws FMLManipulationException {
        return (this.fmlBuffer[32].getCount());
    }

    /**
     * Retrieves the value of the 'TML_UTC_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'TML_UTC_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TML_UTC_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[33].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'TML_UTC_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'TML_UTC_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TML_UTC_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[33].getCount());
    }

    /**
     * Retrieves the value of the 'UTC_FROM_TO_BAN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'UTC_FROM_TO_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_UTC_FROM_TO_BAN(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[34].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'UTC_FROM_TO_BAN' field in the FML buffer.
     *
     * @return Number of values defined for 'UTC_FROM_TO_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_UTC_FROM_TO_BAN_size() throws FMLManipulationException {
        return (this.fmlBuffer[34].getCount());
    }

    /**
     * Retrieves the value of the 'UTC_FROM_SUBSCRIBER' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'UTC_FROM_SUBSCRIBER' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_UTC_FROM_SUBSCRIBER(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[35].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'UTC_FROM_SUBSCRIBER' field in the FML buffer.
     *
     * @return Number of values defined for 'UTC_FROM_SUBSCRIBER' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_UTC_FROM_SUBSCRIBER_size() throws FMLManipulationException {
        return (this.fmlBuffer[35].getCount());
    }
}