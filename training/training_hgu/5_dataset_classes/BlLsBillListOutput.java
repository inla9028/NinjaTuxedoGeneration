package no.netcom.ninja.core.system.tuxedo.service.parameters;

import bea.jolt.pool.Result;
import no.netcom.ninja.core.system.tuxedo.exception.FMLManipulationException;
import no.netcom.ninja.core.util.TypeConverter;

/**
 * @author  Ninja - Generated by Ninja tools
 */
public class BlLsBillListOutput extends ServiceOutput {

    /**
     * Creates a new instance of BlLsBillListOutput.
     *
     * @throws FMLManipulationException
     */
    public BlLsBillListOutput(int nApplicationStatus) throws FMLManipulationException {
        createFmlBuffer();
        setApplicationCode(nApplicationStatus);
    }

    public BlLsBillListOutput() {
    }

    /**
     * Creates a new instance of BlLsBillListOutput.
     *
     * @param ds Output dataset from BlLsBillList service.
     * @throws FMLManipulationException
     */
    public BlLsBillListOutput(Result ds) throws FMLManipulationException {
        createFmlBuffer();
        populateFmlBuffer(ds);
    }

    /**
     * Populates the FML buffer.
     *
     * @throws FMLManipulationException
     */
    private void createFmlBuffer() throws FMLManipulationException {
        this.fmlBuffer = new FmlField[19];
        this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
        this.fmlBuffer[1] = new FmlField("ROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 1, 1);
        this.fmlBuffer[2] = new FmlField("BILL_SEQ_NO", FmlField.TYPE_SHORT, -1, null, 2, 600);
        this.fmlBuffer[3] = new FmlField("INVOICE_SEQ_NO", FmlField.TYPE_STRING, 14, null, 3, 600);
        this.fmlBuffer[4] = new FmlField("PRD_CVRG_STRT_DATE", FmlField.TYPE_STRING, 9, null, 4, 600);
        this.fmlBuffer[5] = new FmlField("PRD_CVRG_END_DATE", FmlField.TYPE_STRING, 9, null, 5, 600);
        this.fmlBuffer[6] = new FmlField("BILL_DATE", FmlField.TYPE_STRING, 9, null, 6, 600);
        this.fmlBuffer[7] = new FmlField("ROOT_BAN", FmlField.TYPE_INTEGER, -1, null, 7, 600);
        this.fmlBuffer[8] = new FmlField("PRODUCTION_TYPE", FmlField.TYPE_BYTE, -1, null, 8, 600);
        this.fmlBuffer[9] = new FmlField("CALLS_AVAILABLE_IND", FmlField.TYPE_BYTE, -1, null, 9, 600);
        this.fmlBuffer[10] = new FmlField("BILL_CONF_STATUS", FmlField.TYPE_BYTE, -1, null, 10, 600);
        this.fmlBuffer[11] = new FmlField("BILL_STATUS_DATE", FmlField.TYPE_STRING, 9, null, 11, 600);
        this.fmlBuffer[12] = new FmlField("CARRY_OVER_IND", FmlField.TYPE_BYTE, -1, null, 12, 600);
        this.fmlBuffer[13] = new FmlField("PRODUCTION_DATE", FmlField.TYPE_STRING, 9, null, 13, 600);
        this.fmlBuffer[14] = new FmlField("INVOICE_AMOUNT", FmlField.TYPE_DOUBLE, -1, null, 14, 600);
        this.fmlBuffer[15] = new FmlField("TOTAL_AMOUNT_DUE", FmlField.TYPE_DOUBLE, -1, null, 15, 600);
        this.fmlBuffer[16] = new FmlField("PRODUCTION_REQUEST", FmlField.TYPE_BYTE, -1, null, 16, 600);
        this.fmlBuffer[17] = new FmlField("BILL_DELIVERY_IND", FmlField.TYPE_STRING, 3, null, 17, 600);
        this.fmlBuffer[18] = new FmlField("CYCLE_CODE", FmlField.TYPE_SHORT, -1, null, 18, 600);
    }

    /**
     * Retrieves the value of the 'GENERATION' field in the FML buffer.
     *
     * @return Value of 'GENERATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GENERATION() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[0].getValue(0));
    }

    /**
     * Retrieves the value of the 'ROWCOUNT' field in the FML buffer.
     *
     * @return Value of 'ROWCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROWCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[1].getValue(0));
    }

    /**
     * Retrieves the value of the 'BILL_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_BILL_SEQ_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[2].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'BILL_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[2].getCount());
    }

    /**
     * Retrieves the value of the 'INVOICE_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'INVOICE_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INVOICE_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[3].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INVOICE_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'INVOICE_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INVOICE_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[3].getCount());
    }

    /**
     * Retrieves the value of the 'PRD_CVRG_STRT_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'PRD_CVRG_STRT_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PRD_CVRG_STRT_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[4].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PRD_CVRG_STRT_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'PRD_CVRG_STRT_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PRD_CVRG_STRT_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[4].getCount());
    }

    /**
     * Retrieves the value of the 'PRD_CVRG_END_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'PRD_CVRG_END_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PRD_CVRG_END_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[5].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PRD_CVRG_END_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'PRD_CVRG_END_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PRD_CVRG_END_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[5].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BILL_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[6].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[6].getCount());
    }

    /**
     * Retrieves the value of the 'ROOT_BAN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'ROOT_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROOT_BAN(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[7].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ROOT_BAN' field in the FML buffer.
     *
     * @return Number of values defined for 'ROOT_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ROOT_BAN_size() throws FMLManipulationException {
        return (this.fmlBuffer[7].getCount());
    }

    /**
     * Retrieves the value of the 'PRODUCTION_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'PRODUCTION_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PRODUCTION_TYPE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[8].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'PRODUCTION_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'PRODUCTION_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PRODUCTION_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[8].getCount());
    }

    /**
     * Retrieves the value of the 'CALLS_AVAILABLE_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'CALLS_AVAILABLE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CALLS_AVAILABLE_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[9].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'CALLS_AVAILABLE_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'CALLS_AVAILABLE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CALLS_AVAILABLE_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[9].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_CONF_STATUS' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BILL_CONF_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_CONF_STATUS(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[10].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'BILL_CONF_STATUS' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_CONF_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_CONF_STATUS_size() throws FMLManipulationException {
        return (this.fmlBuffer[10].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_STATUS_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BILL_STATUS_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_STATUS_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[11].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_STATUS_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_STATUS_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_STATUS_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[11].getCount());
    }

    /**
     * Retrieves the value of the 'CARRY_OVER_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'CARRY_OVER_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CARRY_OVER_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[12].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'CARRY_OVER_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'CARRY_OVER_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CARRY_OVER_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[12].getCount());
    }

    /**
     * Retrieves the value of the 'PRODUCTION_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'PRODUCTION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PRODUCTION_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[13].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PRODUCTION_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'PRODUCTION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PRODUCTION_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[13].getCount());
    }

    /**
     * Retrieves the value of the 'INVOICE_AMOUNT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'INVOICE_AMOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_INVOICE_AMOUNT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[14].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INVOICE_AMOUNT' field in the FML buffer.
     *
     * @return Number of values defined for 'INVOICE_AMOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INVOICE_AMOUNT_size() throws FMLManipulationException {
        return (this.fmlBuffer[14].getCount());
    }

    /**
     * Retrieves the value of the 'TOTAL_AMOUNT_DUE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'TOTAL_AMOUNT_DUE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_TOTAL_AMOUNT_DUE(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[15].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TOTAL_AMOUNT_DUE' field in the FML buffer.
     *
     * @return Number of values defined for 'TOTAL_AMOUNT_DUE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TOTAL_AMOUNT_DUE_size() throws FMLManipulationException {
        return (this.fmlBuffer[15].getCount());
    }

    /**
     * Retrieves the value of the 'PRODUCTION_REQUEST' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'PRODUCTION_REQUEST' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PRODUCTION_REQUEST(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[16].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'PRODUCTION_REQUEST' field in the FML buffer.
     *
     * @return Number of values defined for 'PRODUCTION_REQUEST' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PRODUCTION_REQUEST_size() throws FMLManipulationException {
        return (this.fmlBuffer[16].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_DELIVERY_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BILL_DELIVERY_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_DELIVERY_IND(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[17].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_DELIVERY_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_DELIVERY_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_DELIVERY_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[17].getCount());
    }

    /**
     * Retrieves the value of the 'CYCLE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'CYCLE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_CYCLE_CODE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[18].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'CYCLE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'CYCLE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CYCLE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[18].getCount());
    }
}