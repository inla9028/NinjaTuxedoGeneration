package no.netcom.ninja.core.system.tuxedo.service.parameters;

import bea.jolt.pool.Result;
import no.netcom.ninja.core.system.tuxedo.exception.FMLManipulationException;
import no.netcom.ninja.core.util.TypeConverter;

/**
 * @author  Ninja - Generated by Ninja tools
 */
public class ClGtColPathOutput extends ServiceOutput {

    /**
     * Creates a new instance of ClGtColPathOutput.
     *
     * @throws FMLManipulationException
     */
    public ClGtColPathOutput(int nApplicationStatus) throws FMLManipulationException {
        createFmlBuffer();
        setApplicationCode(nApplicationStatus);
    }

    public ClGtColPathOutput() {
    }

    /**
     * Creates a new instance of ClGtColPathOutput.
     *
     * @param ds Output dataset from ClGtColPath service.
     * @throws FMLManipulationException
     */
    public ClGtColPathOutput(Result ds) throws FMLManipulationException {
        createFmlBuffer();
        populateFmlBuffer(ds);
    }

    /**
     * Populates the FML buffer.
     *
     * @throws FMLManipulationException
     */
    private void createFmlBuffer() throws FMLManipulationException {
        this.fmlBuffer = new FmlField[39];
        this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
        this.fmlBuffer[1] = new FmlField("DIRECTIVE", FmlField.TYPE_INTEGER, -1, null, 1, 1);
        this.fmlBuffer[2] = new FmlField("FIRST_DIRECTIVE", FmlField.TYPE_INTEGER, -1, null, 2, 1);
        this.fmlBuffer[3] = new FmlField("SECOND_DIRECTIVE", FmlField.TYPE_INTEGER, -1, null, 3, 1);
        this.fmlBuffer[4] = new FmlField("OPERATOR_ID", FmlField.TYPE_INTEGER, -1, null, 4, 1);
        this.fmlBuffer[5] = new FmlField("APPLICATION_ID", FmlField.TYPE_STRING, 7, null, 5, 1);
        this.fmlBuffer[6] = new FmlField("TRANSACTION_MODE", FmlField.TYPE_BYTE, -1, null, 6, 1);
        this.fmlBuffer[7] = new FmlField("RUN_DATE", FmlField.TYPE_STRING, 9, null, 7, 1);
        this.fmlBuffer[8] = new FmlField("MARKET_CODE", FmlField.TYPE_STRING, 4, null, 8, 1);
        this.fmlBuffer[9] = new FmlField("SVC_STATUS", FmlField.TYPE_BYTE, -1, null, 9, 1);
        this.fmlBuffer[10] = new FmlField("LAST_UPDATE_DATE", FmlField.TYPE_STRING, 15, null, 10, 1);
        this.fmlBuffer[11] = new FmlField("LAST_UPDATE_STAMP", FmlField.TYPE_SHORT, -1, null, 11, 1);
        this.fmlBuffer[12] = new FmlField("ENV_CODE", FmlField.TYPE_STRING, 11, null, 12, 1);
        this.fmlBuffer[13] = new FmlField("SESSION_ID", FmlField.TYPE_INTEGER, -1, null, 13, 1);
        this.fmlBuffer[14] = new FmlField("ONLINE_TRX_NO", FmlField.TYPE_INTEGER, -1, null, 14, 1);
        this.fmlBuffer[15] = new FmlField("GROUP_TRX_ID", FmlField.TYPE_INTEGER, -1, null, 15, 1);
        this.fmlBuffer[16] = new FmlField("MOREROWS", FmlField.TYPE_SHORT, -1, null, 16, 1);
        this.fmlBuffer[17] = new FmlField("ROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 17, 1);
        this.fmlBuffer[18] = new FmlField("ROWID", FmlField.TYPE_STRING, 19, null, 18, 100);
        this.fmlBuffer[19] = new FmlField("COL_PATH_CODE", FmlField.TYPE_STRING, 4, null, 19, 100);
        this.fmlBuffer[20] = new FmlField("COL_STEP_NUM", FmlField.TYPE_SHORT, -1, null, 20, 100);
        this.fmlBuffer[21] = new FmlField("COL_ACTIVITY_CODE", FmlField.TYPE_STRING, 3, null, 21, 100);
        this.fmlBuffer[22] = new FmlField("DAYS_FROM_PREV_STEP", FmlField.TYPE_SHORT, -1, null, 22, 100);
        this.fmlBuffer[23] = new FmlField("POINT_OF_DAYS_COUNT", FmlField.TYPE_BYTE, -1, null, 23, 100);
        this.fmlBuffer[24] = new FmlField("LETTER_CODE_O_BA", FmlField.TYPE_STRING, 5, null, 24, 100);
        this.fmlBuffer[25] = new FmlField("LETTER_CODE_NO_BA", FmlField.TYPE_STRING, 5, null, 25, 100);
        this.fmlBuffer[26] = new FmlField("LETTER_CODE_O_LA", FmlField.TYPE_STRING, 5, null, 26, 100);
        this.fmlBuffer[27] = new FmlField("LETTER_CODE_NO_LA", FmlField.TYPE_STRING, 5, null, 27, 100);
        this.fmlBuffer[28] = new FmlField("FOLLOW_UP_TYPE", FmlField.TYPE_STRING, 5, null, 28, 100);
        this.fmlBuffer[29] = new FmlField("BILL_MSG_ACTV_CODE", FmlField.TYPE_STRING, 5, null, 29, 100);
        this.fmlBuffer[30] = new FmlField("BILL_MSG_ACTV_RSN_CD", FmlField.TYPE_STRING, 7, null, 30, 100);
        this.fmlBuffer[31] = new FmlField("APPROVAL_FU_TYPE", FmlField.TYPE_STRING, 5, null, 31, 100);
        this.fmlBuffer[32] = new FmlField("COL_ACTIVITY_DESC", FmlField.TYPE_STRING, 31, null, 32, 100);
        this.fmlBuffer[33] = new FmlField("FUTP_FU_DESCRIPTION", FmlField.TYPE_STRING, 21, null, 33, 100);
        this.fmlBuffer[34] = new FmlField("LETTER_TITLE_OPEN", FmlField.TYPE_STRING, 41, null, 34, 100);
        this.fmlBuffer[35] = new FmlField("LETTER_TITLE_NOT_OPEN", FmlField.TYPE_STRING, 41, null, 35, 100);
        this.fmlBuffer[36] = new FmlField("BILL_FIXED_TEXT", FmlField.TYPE_STRING, 61, null, 36, 100);
        this.fmlBuffer[37] = new FmlField("CRD_LMT_FROM_PCT_L", FmlField.TYPE_INTEGER, -1, null, 37, 100);
        this.fmlBuffer[38] = new FmlField("CRD_LMT_TO_PCT_L", FmlField.TYPE_INTEGER, -1, null, 38, 100);
    }

    /**
     * Retrieves the value of the 'GENERATION' field in the FML buffer.
     *
     * @return Value of 'GENERATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GENERATION() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[0].getValue(0));
    }

    /**
     * Retrieves the value of the 'DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[1].getValue(0));
    }

    /**
     * Retrieves the value of the 'FIRST_DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'FIRST_DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_FIRST_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[2].getValue(0));
    }

    /**
     * Retrieves the value of the 'SECOND_DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'SECOND_DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SECOND_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[3].getValue(0));
    }

    /**
     * Retrieves the value of the 'OPERATOR_ID' field in the FML buffer.
     *
     * @return Value of 'OPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_OPERATOR_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[4].getValue(0));
    }

    /**
     * Retrieves the value of the 'APPLICATION_ID' field in the FML buffer.
     *
     * @return Value of 'APPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_APPLICATION_ID() throws FMLManipulationException {
        return ((String) this.fmlBuffer[5].getValue(0));
    }

    /**
     * Retrieves the value of the 'TRANSACTION_MODE' field in the FML buffer.
     *
     * @return Value of 'TRANSACTION_MODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TRANSACTION_MODE() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[6].getValue(0)));
    }

    /**
     * Retrieves the value of the 'RUN_DATE' field in the FML buffer.
     *
     * @return Value of 'RUN_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RUN_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[7].getValue(0));
    }

    /**
     * Retrieves the value of the 'MARKET_CODE' field in the FML buffer.
     *
     * @return Value of 'MARKET_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MARKET_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[8].getValue(0));
    }

    /**
     * Retrieves the value of the 'SVC_STATUS' field in the FML buffer.
     *
     * @return Value of 'SVC_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SVC_STATUS() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[9].getValue(0)));
    }

    /**
     * Retrieves the value of the 'LAST_UPDATE_DATE' field in the FML buffer.
     *
     * @return Value of 'LAST_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LAST_UPDATE_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[10].getValue(0));
    }

    /**
     * Retrieves the value of the 'LAST_UPDATE_STAMP' field in the FML buffer.
     *
     * @return Value of 'LAST_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_LAST_UPDATE_STAMP() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[11].getValue(0)));
    }

    /**
     * Retrieves the value of the 'ENV_CODE' field in the FML buffer.
     *
     * @return Value of 'ENV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ENV_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[12].getValue(0));
    }

    /**
     * Retrieves the value of the 'SESSION_ID' field in the FML buffer.
     *
     * @return Value of 'SESSION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SESSION_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[13].getValue(0));
    }

    /**
     * Retrieves the value of the 'ONLINE_TRX_NO' field in the FML buffer.
     *
     * @return Value of 'ONLINE_TRX_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ONLINE_TRX_NO() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[14].getValue(0));
    }

    /**
     * Retrieves the value of the 'GROUP_TRX_ID' field in the FML buffer.
     *
     * @return Value of 'GROUP_TRX_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GROUP_TRX_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[15].getValue(0));
    }

    /**
     * Retrieves the value of the 'MOREROWS' field in the FML buffer.
     *
     * @return Value of 'MOREROWS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_MOREROWS() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[16].getValue(0)));
    }

    /**
     * Retrieves the value of the 'ROWCOUNT' field in the FML buffer.
     *
     * @return Value of 'ROWCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROWCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[17].getValue(0));
    }

    /**
     * Retrieves the value of the 'ROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[18].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[18].getCount());
    }

    /**
     * Retrieves the value of the 'COL_PATH_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'COL_PATH_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_COL_PATH_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[19].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'COL_PATH_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'COL_PATH_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_COL_PATH_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[19].getCount());
    }

    /**
     * Retrieves the value of the 'COL_STEP_NUM' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'COL_STEP_NUM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_COL_STEP_NUM(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[20].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'COL_STEP_NUM' field in the FML buffer.
     *
     * @return Number of values defined for 'COL_STEP_NUM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_COL_STEP_NUM_size() throws FMLManipulationException {
        return (this.fmlBuffer[20].getCount());
    }

    /**
     * Retrieves the value of the 'COL_ACTIVITY_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'COL_ACTIVITY_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_COL_ACTIVITY_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[21].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'COL_ACTIVITY_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'COL_ACTIVITY_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_COL_ACTIVITY_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[21].getCount());
    }

    /**
     * Retrieves the value of the 'DAYS_FROM_PREV_STEP' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'DAYS_FROM_PREV_STEP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DAYS_FROM_PREV_STEP(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[22].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'DAYS_FROM_PREV_STEP' field in the FML buffer.
     *
     * @return Number of values defined for 'DAYS_FROM_PREV_STEP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DAYS_FROM_PREV_STEP_size() throws FMLManipulationException {
        return (this.fmlBuffer[22].getCount());
    }

    /**
     * Retrieves the value of the 'POINT_OF_DAYS_COUNT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'POINT_OF_DAYS_COUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_POINT_OF_DAYS_COUNT(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[23].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'POINT_OF_DAYS_COUNT' field in the FML buffer.
     *
     * @return Number of values defined for 'POINT_OF_DAYS_COUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_POINT_OF_DAYS_COUNT_size() throws FMLManipulationException {
        return (this.fmlBuffer[23].getCount());
    }

    /**
     * Retrieves the value of the 'LETTER_CODE_O_BA' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'LETTER_CODE_O_BA' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LETTER_CODE_O_BA(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[24].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'LETTER_CODE_O_BA' field in the FML buffer.
     *
     * @return Number of values defined for 'LETTER_CODE_O_BA' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LETTER_CODE_O_BA_size() throws FMLManipulationException {
        return (this.fmlBuffer[24].getCount());
    }

    /**
     * Retrieves the value of the 'LETTER_CODE_NO_BA' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'LETTER_CODE_NO_BA' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LETTER_CODE_NO_BA(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[25].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'LETTER_CODE_NO_BA' field in the FML buffer.
     *
     * @return Number of values defined for 'LETTER_CODE_NO_BA' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LETTER_CODE_NO_BA_size() throws FMLManipulationException {
        return (this.fmlBuffer[25].getCount());
    }

    /**
     * Retrieves the value of the 'LETTER_CODE_O_LA' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'LETTER_CODE_O_LA' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LETTER_CODE_O_LA(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[26].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'LETTER_CODE_O_LA' field in the FML buffer.
     *
     * @return Number of values defined for 'LETTER_CODE_O_LA' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LETTER_CODE_O_LA_size() throws FMLManipulationException {
        return (this.fmlBuffer[26].getCount());
    }

    /**
     * Retrieves the value of the 'LETTER_CODE_NO_LA' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'LETTER_CODE_NO_LA' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LETTER_CODE_NO_LA(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[27].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'LETTER_CODE_NO_LA' field in the FML buffer.
     *
     * @return Number of values defined for 'LETTER_CODE_NO_LA' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LETTER_CODE_NO_LA_size() throws FMLManipulationException {
        return (this.fmlBuffer[27].getCount());
    }

    /**
     * Retrieves the value of the 'FOLLOW_UP_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'FOLLOW_UP_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FOLLOW_UP_TYPE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[28].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'FOLLOW_UP_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'FOLLOW_UP_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FOLLOW_UP_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[28].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_MSG_ACTV_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'BILL_MSG_ACTV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_MSG_ACTV_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[29].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_MSG_ACTV_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_MSG_ACTV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_MSG_ACTV_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[29].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_MSG_ACTV_RSN_CD' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'BILL_MSG_ACTV_RSN_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_MSG_ACTV_RSN_CD(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[30].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_MSG_ACTV_RSN_CD' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_MSG_ACTV_RSN_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_MSG_ACTV_RSN_CD_size() throws FMLManipulationException {
        return (this.fmlBuffer[30].getCount());
    }

    /**
     * Retrieves the value of the 'APPROVAL_FU_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'APPROVAL_FU_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_APPROVAL_FU_TYPE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[31].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'APPROVAL_FU_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'APPROVAL_FU_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_APPROVAL_FU_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[31].getCount());
    }

    /**
     * Retrieves the value of the 'COL_ACTIVITY_DESC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'COL_ACTIVITY_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_COL_ACTIVITY_DESC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[32].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'COL_ACTIVITY_DESC' field in the FML buffer.
     *
     * @return Number of values defined for 'COL_ACTIVITY_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_COL_ACTIVITY_DESC_size() throws FMLManipulationException {
        return (this.fmlBuffer[32].getCount());
    }

    /**
     * Retrieves the value of the 'FUTP_FU_DESCRIPTION' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'FUTP_FU_DESCRIPTION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FUTP_FU_DESCRIPTION(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[33].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'FUTP_FU_DESCRIPTION' field in the FML buffer.
     *
     * @return Number of values defined for 'FUTP_FU_DESCRIPTION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FUTP_FU_DESCRIPTION_size() throws FMLManipulationException {
        return (this.fmlBuffer[33].getCount());
    }

    /**
     * Retrieves the value of the 'LETTER_TITLE_OPEN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'LETTER_TITLE_OPEN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LETTER_TITLE_OPEN(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[34].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'LETTER_TITLE_OPEN' field in the FML buffer.
     *
     * @return Number of values defined for 'LETTER_TITLE_OPEN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LETTER_TITLE_OPEN_size() throws FMLManipulationException {
        return (this.fmlBuffer[34].getCount());
    }

    /**
     * Retrieves the value of the 'LETTER_TITLE_NOT_OPEN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'LETTER_TITLE_NOT_OPEN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LETTER_TITLE_NOT_OPEN(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[35].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'LETTER_TITLE_NOT_OPEN' field in the FML buffer.
     *
     * @return Number of values defined for 'LETTER_TITLE_NOT_OPEN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LETTER_TITLE_NOT_OPEN_size() throws FMLManipulationException {
        return (this.fmlBuffer[35].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_FIXED_TEXT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'BILL_FIXED_TEXT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_FIXED_TEXT(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[36].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_FIXED_TEXT' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_FIXED_TEXT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_FIXED_TEXT_size() throws FMLManipulationException {
        return (this.fmlBuffer[36].getCount());
    }

    /**
     * Retrieves the value of the 'CRD_LMT_FROM_PCT_L' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'CRD_LMT_FROM_PCT_L' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_CRD_LMT_FROM_PCT_L(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[37].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CRD_LMT_FROM_PCT_L' field in the FML buffer.
     *
     * @return Number of values defined for 'CRD_LMT_FROM_PCT_L' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CRD_LMT_FROM_PCT_L_size() throws FMLManipulationException {
        return (this.fmlBuffer[37].getCount());
    }

    /**
     * Retrieves the value of the 'CRD_LMT_TO_PCT_L' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'CRD_LMT_TO_PCT_L' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_CRD_LMT_TO_PCT_L(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[38].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CRD_LMT_TO_PCT_L' field in the FML buffer.
     *
     * @return Number of values defined for 'CRD_LMT_TO_PCT_L' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CRD_LMT_TO_PCT_L_size() throws FMLManipulationException {
        return (this.fmlBuffer[38].getCount());
    }
}