package no.netcom.ninja.core.system.tuxedo.service.parameters;

import no.netcom.ninja.core.referencetables.NinjaConfigurationReferenceTable;
import no.netcom.ninja.core.system.tuxedo.exception.FMLManipulationException;
import no.netcom.ninja.core.util.TypeConverter;


/**
 * @author  Ninja - Generated by Ninja tools
 */
public class ArAdjCrgInput extends ServiceInput {
    //// Indicates whether the default values has been loaded from the DB or not
    //private static Boolean defaultValuesPopulated = Boolean.FALSE;
    //// Holds default values for fields in FML buffer
    //private static String defaultValues[] = null;

    /**
     * Creates a new instance of ArAdjCrgInput
     *
     * @throws FMLManipulationException
     */
    public ArAdjCrgInput() throws FMLManipulationException {
        // Initialise FML buffer
        fmlBuffer = new FmlField[78];

        //// Get default values from DB
        //synchronized (this.defaultValuesPopulated) {
        //    if (this.defaultValuesPopulated.equals(Boolean.FALSE)) {
        //        defaultValues = getDefaultValues("arAdjCrg", 78);
        //        this.defaultValuesPopulated = Boolean.TRUE;
        //    }
        //}

        this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
        this.fmlBuffer[1] = new FmlField("DIRECTIVE", FmlField.TYPE_INTEGER, -1, NinjaConfigurationReferenceTable.getTuxedoDirective(), 1, 1);
        this.fmlBuffer[2] = new FmlField("FIRST_DIRECTIVE", FmlField.TYPE_INTEGER, -1, null, 2, 1);
        this.fmlBuffer[3] = new FmlField("SECOND_DIRECTIVE", FmlField.TYPE_INTEGER, -1, null, 3, 1);
        this.fmlBuffer[4] = new FmlField("OPERATOR_ID", FmlField.TYPE_INTEGER, -1, NinjaConfigurationReferenceTable.getDefaultFokusOperatorId(), 4, 1);
        this.fmlBuffer[5] = new FmlField("APPLICATION_ID", FmlField.TYPE_STRING, 7, NinjaConfigurationReferenceTable.getApplicationId(), 5, 1);
        this.fmlBuffer[6] = new FmlField("TRANSACTION_MODE", FmlField.TYPE_BYTE, -1, NinjaConfigurationReferenceTable.getTuxedoTransactionMode(), 6, 1);
        this.fmlBuffer[7] = new FmlField("RUN_DATE", FmlField.TYPE_STRING, 9, null, 7, 1);
        this.fmlBuffer[8] = new FmlField("MARKET_CODE", FmlField.TYPE_STRING, 4, NinjaConfigurationReferenceTable.getDefaultMarket(), 8, 1);
        this.fmlBuffer[9] = new FmlField("SVC_STATUS", FmlField.TYPE_BYTE, -1, null, 9, 1);
        this.fmlBuffer[10] = new FmlField("LAST_UPDATE_DATE", FmlField.TYPE_STRING, 15, null, 10, 1);
        this.fmlBuffer[11] = new FmlField("LAST_UPDATE_STAMP", FmlField.TYPE_SHORT, -1, null, 11, 1);
        this.fmlBuffer[12] = new FmlField("ENV_CODE", FmlField.TYPE_STRING, 11, NinjaConfigurationReferenceTable.getFokusEnvironmentCode(), 12, 1);
        this.fmlBuffer[13] = new FmlField("SESSION_ID", FmlField.TYPE_INTEGER, -1, NinjaConfigurationReferenceTable.getTuxedoSessionId(), 13, 1);
        this.fmlBuffer[14] = new FmlField("ONLINE_TRX_NO", FmlField.TYPE_INTEGER, -1, NinjaConfigurationReferenceTable.getTuxedoOnlineTrxNo(), 14, 1);
        this.fmlBuffer[15] = new FmlField("GROUP_TRX_ID", FmlField.TYPE_INTEGER, -1, null, 15, 1);
        this.fmlBuffer[16] = new FmlField("ACT_CODE", FmlField.TYPE_STRING, 4, null, 16, 1);
        this.fmlBuffer[17] = new FmlField("ACT_REASON", FmlField.TYPE_STRING, 5, null, 17, 1);
        this.fmlBuffer[18] = new FmlField("SUSP_RC_RATE_TYPE", FmlField.TYPE_BYTE, -1, null, 18, 1);
        this.fmlBuffer[19] = new FmlField("MEMO_CTN", FmlField.TYPE_STRING, 21, null, 19, 1);
        this.fmlBuffer[20] = new FmlField("USER_TEXT", FmlField.TYPE_STRING, 2001, null, 20, 1);
        this.fmlBuffer[21] = new FmlField("MEMO_SOURCE", FmlField.TYPE_BYTE, -1, null, 21, 1);
        this.fmlBuffer[22] = new FmlField("PARAM_COUNT", FmlField.TYPE_INTEGER, -1, null, 22, 1);
        this.fmlBuffer[23] = new FmlField("P1", FmlField.TYPE_STRING, 51, null, 23, 1);
        this.fmlBuffer[24] = new FmlField("P2", FmlField.TYPE_STRING, 51, null, 24, 1);
        this.fmlBuffer[25] = new FmlField("P3", FmlField.TYPE_STRING, 51, null, 25, 1);
        this.fmlBuffer[26] = new FmlField("P4", FmlField.TYPE_STRING, 51, null, 26, 1);
        this.fmlBuffer[27] = new FmlField("P5", FmlField.TYPE_STRING, 51, null, 27, 1);
        this.fmlBuffer[28] = new FmlField("P6", FmlField.TYPE_STRING, 51, null, 28, 1);
        this.fmlBuffer[29] = new FmlField("P7", FmlField.TYPE_STRING, 51, null, 29, 1);
        this.fmlBuffer[30] = new FmlField("P8", FmlField.TYPE_STRING, 51, null, 30, 1);
        this.fmlBuffer[31] = new FmlField("P9", FmlField.TYPE_STRING, 51, null, 31, 1);
        this.fmlBuffer[32] = new FmlField("P10", FmlField.TYPE_STRING, 51, null, 32, 1);
        this.fmlBuffer[33] = new FmlField("MEMO_AMT", FmlField.TYPE_DOUBLE, -1, null, 33, 1);
        this.fmlBuffer[34] = new FmlField("RMS_ACT_CODE", FmlField.TYPE_STRING, 5, null, 34, 1);
        this.fmlBuffer[35] = new FmlField("CHARGE_AMT", FmlField.TYPE_DOUBLE, -1, null, 35, 1);
        this.fmlBuffer[36] = new FmlField("CHARGE_AMT_IND", FmlField.TYPE_BYTE, -1, null, 36, 1);
        this.fmlBuffer[37] = new FmlField("WAIVE_REASON", FmlField.TYPE_STRING, 7, null, 37, 1);
        this.fmlBuffer[38] = new FmlField("WAIVE_IND", FmlField.TYPE_BYTE, -1, null, 38, 1);
        this.fmlBuffer[39] = new FmlField("ROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 39, 1);
        this.fmlBuffer[40] = new FmlField("ROWID", FmlField.TYPE_STRING, 19, null, 40, 70);
        this.fmlBuffer[41] = new FmlField("BAN", FmlField.TYPE_INTEGER, -1, null, 41, 70);
        this.fmlBuffer[42] = new FmlField("PARTITION_ROOT_BAN", FmlField.TYPE_INTEGER, -1, null, 42, 70);
        this.fmlBuffer[43] = new FmlField("ADJ_REASON_CODE", FmlField.TYPE_STRING, 7, null, 43, 70);
        this.fmlBuffer[44] = new FmlField("BALANCE_IMPACT_CODE", FmlField.TYPE_BYTE, -1, null, 44, 70);
        this.fmlBuffer[45] = new FmlField("EFFECTIVE_DATE", FmlField.TYPE_STRING, 9, null, 45, 70);
        this.fmlBuffer[46] = new FmlField("SOURCE_APPL_CD", FmlField.TYPE_BYTE, -1, null, 46, 70);
        this.fmlBuffer[47] = new FmlField("ADJ_LEVEL_CODE", FmlField.TYPE_BYTE, -1, null, 47, 70);
        this.fmlBuffer[48] = new FmlField("INV_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 48, 70);
        this.fmlBuffer[49] = new FmlField("SUBSCRIBER_NO", FmlField.TYPE_STRING, 21, null, 49, 70);
        this.fmlBuffer[50] = new FmlField("CHARGE_ID", FmlField.TYPE_INTEGER, -1, null, 50, 70);
        this.fmlBuffer[51] = new FmlField("ADJUSTMENT_AMOUNT", FmlField.TYPE_DOUBLE, -1, null, 51, 70);
        this.fmlBuffer[52] = new FmlField("TAX_CODE", FmlField.TYPE_BYTE, -1, null, 52, 70);
        this.fmlBuffer[53] = new FmlField("ADJ_PRIOD_START_DATE", FmlField.TYPE_STRING, 9, null, 53, 70);
        this.fmlBuffer[54] = new FmlField("ADJ_PRIOD_END_DATE", FmlField.TYPE_STRING, 9, null, 54, 70);
        this.fmlBuffer[55] = new FmlField("USER_COMMENT", FmlField.TYPE_STRING, 501, null, 55, 70);
        this.fmlBuffer[56] = new FmlField("MEMO_ID", FmlField.TYPE_INTEGER, -1, null, 56, 70);
        this.fmlBuffer[57] = new FmlField("MESSAGE_EXIST_IND", FmlField.TYPE_BYTE, -1, null, 57, 70);
        this.fmlBuffer[58] = new FmlField("SOURCE_BILL_SEQ_NO", FmlField.TYPE_SHORT, -1, null, 58, 70);
        this.fmlBuffer[59] = new FmlField("CHANNEL_SEIZURE_DATE", FmlField.TYPE_STRING, 15, null, 59, 70);
        this.fmlBuffer[60] = new FmlField("MESSAGE_SWITCH_ID", FmlField.TYPE_STRING, 8, null, 60, 70);
        this.fmlBuffer[61] = new FmlField("MESSAGE_IDENTIFIER", FmlField.TYPE_STRING, 25, null, 61, 70);
        this.fmlBuffer[62] = new FmlField("BL_IGNORE_IND", FmlField.TYPE_BYTE, -1, null, 62, 70);
        this.fmlBuffer[63] = new FmlField("RMS_INV_STORE_ID", FmlField.TYPE_STRING, 5, null, 63, 70);
        this.fmlBuffer[64] = new FmlField("RMS_INV_ACTV_TYPE", FmlField.TYPE_BYTE, -1, null, 64, 70);
        this.fmlBuffer[65] = new FmlField("RMS_INV_ID", FmlField.TYPE_INTEGER, -1, null, 65, 70);
        this.fmlBuffer[66] = new FmlField("DISCOUNT_PCT_L", FmlField.TYPE_INTEGER, -1, null, 66, 70);
        this.fmlBuffer[67] = new FmlField("SOC", FmlField.TYPE_STRING, 10, null, 67, 70);
        this.fmlBuffer[68] = new FmlField("FTR_REVENUE_CODE", FmlField.TYPE_STRING, 4, null, 68, 70);
        this.fmlBuffer[69] = new FmlField("FEATURE_CODE", FmlField.TYPE_STRING, 7, null, 69, 70);
        this.fmlBuffer[70] = new FmlField("SUB_MARKET_CD", FmlField.TYPE_STRING, 4, null, 70, 70);
        this.fmlBuffer[71] = new FmlField("SERVICE_FTR_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 71, 70);
        this.fmlBuffer[72] = new FmlField("TAX_ADJUSTMENT_IND", FmlField.TYPE_BYTE, -1, null, 72, 70);
        this.fmlBuffer[73] = new FmlField("ORG_CODE", FmlField.TYPE_STRING, 10, null, 73, 70);
        this.fmlBuffer[74] = new FmlField("VOUCHER_NUM", FmlField.TYPE_STRING, 14, null, 74, 70);
        this.fmlBuffer[75] = new FmlField("DESIGNATED_INV", FmlField.TYPE_STRING, 14, null, 75, 70);
        this.fmlBuffer[76] = new FmlField("ACTV_CODE", FmlField.TYPE_STRING, 5, null, 76, 70);
        this.fmlBuffer[77] = new FmlField("BILL_RELEVANCE_IND", FmlField.TYPE_BYTE, -1, null, 77, 70);
    }

    /**
     * Retrieves the value of the 'GENERATION' field in the FML buffer.
     *
     * @return Value of 'GENERATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GENERATION() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[0].getValue(0));
    }

    /**
     * Sets the value of the 'GENERATION' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_GENERATION(Integer value) throws FMLManipulationException {
        this.fmlBuffer[0].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[1].getValue(0));
    }

    /**
     * Sets the value of the 'DIRECTIVE' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getTuxedoDirective().
     * @throws FMLManipulationException
     */
    public void set_DIRECTIVE(Integer value) throws FMLManipulationException {
        this.fmlBuffer[1].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'FIRST_DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'FIRST_DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_FIRST_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[2].getValue(0));
    }

    /**
     * Sets the value of the 'FIRST_DIRECTIVE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_FIRST_DIRECTIVE(Integer value) throws FMLManipulationException {
        this.fmlBuffer[2].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'SECOND_DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'SECOND_DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SECOND_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[3].getValue(0));
    }

    /**
     * Sets the value of the 'SECOND_DIRECTIVE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_SECOND_DIRECTIVE(Integer value) throws FMLManipulationException {
        this.fmlBuffer[3].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'OPERATOR_ID' field in the FML buffer.
     *
     * @return Value of 'OPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_OPERATOR_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[4].getValue(0));
    }

    /**
     * Sets the value of the 'OPERATOR_ID' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getDefaultFokusOperatorId().
     * @throws FMLManipulationException
     */
    public void set_OPERATOR_ID(Integer value) throws FMLManipulationException {
        this.fmlBuffer[4].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'APPLICATION_ID' field in the FML buffer.
     *
     * @return Value of 'APPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_APPLICATION_ID() throws FMLManipulationException {
        return ((String) this.fmlBuffer[5].getValue(0));
    }

    /**
     * Sets the value of the 'APPLICATION_ID' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getApplicationId(), Maximum length: 7.
     * @throws FMLManipulationException
     */
    public void set_APPLICATION_ID(String value) throws FMLManipulationException {
        this.fmlBuffer[5].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'TRANSACTION_MODE' field in the FML buffer.
     *
     * @return Value of 'TRANSACTION_MODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TRANSACTION_MODE() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[6].getValue(0)));
    }

    /**
     * Sets the value of the 'TRANSACTION_MODE' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getTuxedoTransactionMode().
     * @throws FMLManipulationException
     */
    public void set_TRANSACTION_MODE(String value) throws FMLManipulationException {
        this.fmlBuffer[6].setValue(0, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves the value of the 'RUN_DATE' field in the FML buffer.
     *
     * @return Value of 'RUN_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RUN_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[7].getValue(0));
    }

    /**
     * Sets the value of the 'RUN_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 9.
     * @throws FMLManipulationException
     */
    public void set_RUN_DATE(String value) throws FMLManipulationException {
        this.fmlBuffer[7].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'MARKET_CODE' field in the FML buffer.
     *
     * @return Value of 'MARKET_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MARKET_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[8].getValue(0));
    }

    /**
     * Sets the value of the 'MARKET_CODE' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getDefaultMarket(), Maximum length: 4.
     * @throws FMLManipulationException
     */
    public void set_MARKET_CODE(String value) throws FMLManipulationException {
        this.fmlBuffer[8].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'SVC_STATUS' field in the FML buffer.
     *
     * @return Value of 'SVC_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SVC_STATUS() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[9].getValue(0)));
    }

    /**
     * Sets the value of the 'SVC_STATUS' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_SVC_STATUS(String value) throws FMLManipulationException {
        this.fmlBuffer[9].setValue(0, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves the value of the 'LAST_UPDATE_DATE' field in the FML buffer.
     *
     * @return Value of 'LAST_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LAST_UPDATE_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[10].getValue(0));
    }

    /**
     * Sets the value of the 'LAST_UPDATE_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 15.
     * @throws FMLManipulationException
     */
    public void set_LAST_UPDATE_DATE(String value) throws FMLManipulationException {
        this.fmlBuffer[10].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'LAST_UPDATE_STAMP' field in the FML buffer.
     *
     * @return Value of 'LAST_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_LAST_UPDATE_STAMP() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[11].getValue(0)));
    }

    /**
     * Sets the value of the 'LAST_UPDATE_STAMP' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_LAST_UPDATE_STAMP(Integer value) throws FMLManipulationException {
        this.fmlBuffer[11].setValue(0, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves the value of the 'ENV_CODE' field in the FML buffer.
     *
     * @return Value of 'ENV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ENV_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[12].getValue(0));
    }

    /**
     * Sets the value of the 'ENV_CODE' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getFokusEnvironmentCode(), Maximum length: 11.
     * @throws FMLManipulationException
     */
    public void set_ENV_CODE(String value) throws FMLManipulationException {
        this.fmlBuffer[12].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'SESSION_ID' field in the FML buffer.
     *
     * @return Value of 'SESSION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SESSION_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[13].getValue(0));
    }

    /**
     * Sets the value of the 'SESSION_ID' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getTuxedoSessionId().
     * @throws FMLManipulationException
     */
    public void set_SESSION_ID(Integer value) throws FMLManipulationException {
        this.fmlBuffer[13].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'ONLINE_TRX_NO' field in the FML buffer.
     *
     * @return Value of 'ONLINE_TRX_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ONLINE_TRX_NO() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[14].getValue(0));
    }

    /**
     * Sets the value of the 'ONLINE_TRX_NO' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getTuxedoOnlineTrxNo().
     * @throws FMLManipulationException
     */
    public void set_ONLINE_TRX_NO(Integer value) throws FMLManipulationException {
        this.fmlBuffer[14].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'GROUP_TRX_ID' field in the FML buffer.
     *
     * @return Value of 'GROUP_TRX_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GROUP_TRX_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[15].getValue(0));
    }

    /**
     * Sets the value of the 'GROUP_TRX_ID' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_GROUP_TRX_ID(Integer value) throws FMLManipulationException {
        this.fmlBuffer[15].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'ACT_CODE' field in the FML buffer.
     *
     * @return Value of 'ACT_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACT_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[16].getValue(0));
    }

    /**
     * Sets the value of the 'ACT_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 4.
     * @throws FMLManipulationException
     */
    public void set_ACT_CODE(String value) throws FMLManipulationException {
        this.fmlBuffer[16].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'ACT_REASON' field in the FML buffer.
     *
     * @return Value of 'ACT_REASON' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACT_REASON() throws FMLManipulationException {
        return ((String) this.fmlBuffer[17].getValue(0));
    }

    /**
     * Sets the value of the 'ACT_REASON' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 5.
     * @throws FMLManipulationException
     */
    public void set_ACT_REASON(String value) throws FMLManipulationException {
        this.fmlBuffer[17].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'SUSP_RC_RATE_TYPE' field in the FML buffer.
     *
     * @return Value of 'SUSP_RC_RATE_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SUSP_RC_RATE_TYPE() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[18].getValue(0)));
    }

    /**
     * Sets the value of the 'SUSP_RC_RATE_TYPE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_SUSP_RC_RATE_TYPE(String value) throws FMLManipulationException {
        this.fmlBuffer[18].setValue(0, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves the value of the 'MEMO_CTN' field in the FML buffer.
     *
     * @return Value of 'MEMO_CTN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MEMO_CTN() throws FMLManipulationException {
        return ((String) this.fmlBuffer[19].getValue(0));
    }

    /**
     * Sets the value of the 'MEMO_CTN' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @throws FMLManipulationException
     */
    public void set_MEMO_CTN(String value) throws FMLManipulationException {
        this.fmlBuffer[19].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'USER_TEXT' field in the FML buffer.
     *
     * @return Value of 'USER_TEXT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_USER_TEXT() throws FMLManipulationException {
        return ((String) this.fmlBuffer[20].getValue(0));
    }

    /**
     * Sets the value of the 'USER_TEXT' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 2001.
     * @throws FMLManipulationException
     */
    public void set_USER_TEXT(String value) throws FMLManipulationException {
        this.fmlBuffer[20].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'MEMO_SOURCE' field in the FML buffer.
     *
     * @return Value of 'MEMO_SOURCE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MEMO_SOURCE() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[21].getValue(0)));
    }

    /**
     * Sets the value of the 'MEMO_SOURCE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_MEMO_SOURCE(String value) throws FMLManipulationException {
        this.fmlBuffer[21].setValue(0, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves the value of the 'PARAM_COUNT' field in the FML buffer.
     *
     * @return Value of 'PARAM_COUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_PARAM_COUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[22].getValue(0));
    }

    /**
     * Sets the value of the 'PARAM_COUNT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_PARAM_COUNT(Integer value) throws FMLManipulationException {
        this.fmlBuffer[22].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P1' field in the FML buffer.
     *
     * @return Value of 'P1' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P1() throws FMLManipulationException {
        return ((String) this.fmlBuffer[23].getValue(0));
    }

    /**
     * Sets the value of the 'P1' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 51.
     * @throws FMLManipulationException
     */
    public void set_P1(String value) throws FMLManipulationException {
        this.fmlBuffer[23].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P2' field in the FML buffer.
     *
     * @return Value of 'P2' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P2() throws FMLManipulationException {
        return ((String) this.fmlBuffer[24].getValue(0));
    }

    /**
     * Sets the value of the 'P2' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 51.
     * @throws FMLManipulationException
     */
    public void set_P2(String value) throws FMLManipulationException {
        this.fmlBuffer[24].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P3' field in the FML buffer.
     *
     * @return Value of 'P3' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P3() throws FMLManipulationException {
        return ((String) this.fmlBuffer[25].getValue(0));
    }

    /**
     * Sets the value of the 'P3' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 51.
     * @throws FMLManipulationException
     */
    public void set_P3(String value) throws FMLManipulationException {
        this.fmlBuffer[25].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P4' field in the FML buffer.
     *
     * @return Value of 'P4' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P4() throws FMLManipulationException {
        return ((String) this.fmlBuffer[26].getValue(0));
    }

    /**
     * Sets the value of the 'P4' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 51.
     * @throws FMLManipulationException
     */
    public void set_P4(String value) throws FMLManipulationException {
        this.fmlBuffer[26].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P5' field in the FML buffer.
     *
     * @return Value of 'P5' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P5() throws FMLManipulationException {
        return ((String) this.fmlBuffer[27].getValue(0));
    }

    /**
     * Sets the value of the 'P5' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 51.
     * @throws FMLManipulationException
     */
    public void set_P5(String value) throws FMLManipulationException {
        this.fmlBuffer[27].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P6' field in the FML buffer.
     *
     * @return Value of 'P6' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P6() throws FMLManipulationException {
        return ((String) this.fmlBuffer[28].getValue(0));
    }

    /**
     * Sets the value of the 'P6' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 51.
     * @throws FMLManipulationException
     */
    public void set_P6(String value) throws FMLManipulationException {
        this.fmlBuffer[28].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P7' field in the FML buffer.
     *
     * @return Value of 'P7' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P7() throws FMLManipulationException {
        return ((String) this.fmlBuffer[29].getValue(0));
    }

    /**
     * Sets the value of the 'P7' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 51.
     * @throws FMLManipulationException
     */
    public void set_P7(String value) throws FMLManipulationException {
        this.fmlBuffer[29].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P8' field in the FML buffer.
     *
     * @return Value of 'P8' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P8() throws FMLManipulationException {
        return ((String) this.fmlBuffer[30].getValue(0));
    }

    /**
     * Sets the value of the 'P8' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 51.
     * @throws FMLManipulationException
     */
    public void set_P8(String value) throws FMLManipulationException {
        this.fmlBuffer[30].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P9' field in the FML buffer.
     *
     * @return Value of 'P9' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P9() throws FMLManipulationException {
        return ((String) this.fmlBuffer[31].getValue(0));
    }

    /**
     * Sets the value of the 'P9' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 51.
     * @throws FMLManipulationException
     */
    public void set_P9(String value) throws FMLManipulationException {
        this.fmlBuffer[31].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P10' field in the FML buffer.
     *
     * @return Value of 'P10' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P10() throws FMLManipulationException {
        return ((String) this.fmlBuffer[32].getValue(0));
    }

    /**
     * Sets the value of the 'P10' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 51.
     * @throws FMLManipulationException
     */
    public void set_P10(String value) throws FMLManipulationException {
        this.fmlBuffer[32].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'MEMO_AMT' field in the FML buffer.
     *
     * @return Value of 'MEMO_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_MEMO_AMT() throws FMLManipulationException {
        return ((Double) this.fmlBuffer[33].getValue(0));
    }

    /**
     * Sets the value of the 'MEMO_AMT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_MEMO_AMT(Double value) throws FMLManipulationException {
        this.fmlBuffer[33].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'RMS_ACT_CODE' field in the FML buffer.
     *
     * @return Value of 'RMS_ACT_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RMS_ACT_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[34].getValue(0));
    }

    /**
     * Sets the value of the 'RMS_ACT_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 5.
     * @throws FMLManipulationException
     */
    public void set_RMS_ACT_CODE(String value) throws FMLManipulationException {
        this.fmlBuffer[34].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'CHARGE_AMT' field in the FML buffer.
     *
     * @return Value of 'CHARGE_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_CHARGE_AMT() throws FMLManipulationException {
        return ((Double) this.fmlBuffer[35].getValue(0));
    }

    /**
     * Sets the value of the 'CHARGE_AMT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_CHARGE_AMT(Double value) throws FMLManipulationException {
        this.fmlBuffer[35].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'CHARGE_AMT_IND' field in the FML buffer.
     *
     * @return Value of 'CHARGE_AMT_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CHARGE_AMT_IND() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[36].getValue(0)));
    }

    /**
     * Sets the value of the 'CHARGE_AMT_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_CHARGE_AMT_IND(String value) throws FMLManipulationException {
        this.fmlBuffer[36].setValue(0, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves the value of the 'WAIVE_REASON' field in the FML buffer.
     *
     * @return Value of 'WAIVE_REASON' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_WAIVE_REASON() throws FMLManipulationException {
        return ((String) this.fmlBuffer[37].getValue(0));
    }

    /**
     * Sets the value of the 'WAIVE_REASON' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 7.
     * @throws FMLManipulationException
     */
    public void set_WAIVE_REASON(String value) throws FMLManipulationException {
        this.fmlBuffer[37].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'WAIVE_IND' field in the FML buffer.
     *
     * @return Value of 'WAIVE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_WAIVE_IND() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[38].getValue(0)));
    }

    /**
     * Sets the value of the 'WAIVE_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_WAIVE_IND(String value) throws FMLManipulationException {
        this.fmlBuffer[38].setValue(0, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves the value of the 'ROWCOUNT' field in the FML buffer.
     *
     * @return Value of 'ROWCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROWCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[39].getValue(0));
    }

    /**
     * Sets the value of the 'ROWCOUNT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_ROWCOUNT(Integer value) throws FMLManipulationException {
        this.fmlBuffer[39].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'ROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[40].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ROWID' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 19.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_ROWID(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[40].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[40].getCount());
    }

    /**
     * Retrieves the value of the 'BAN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_BAN(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[41].getValue(nIndex));
    }

    /**
     * Sets the value of the 'BAN' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_BAN(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[41].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'BAN' field in the FML buffer.
     *
     * @return Number of values defined for 'BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BAN_size() throws FMLManipulationException {
        return (this.fmlBuffer[41].getCount());
    }

    /**
     * Retrieves the value of the 'PARTITION_ROOT_BAN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'PARTITION_ROOT_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_PARTITION_ROOT_BAN(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[42].getValue(nIndex));
    }

    /**
     * Sets the value of the 'PARTITION_ROOT_BAN' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_PARTITION_ROOT_BAN(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[42].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'PARTITION_ROOT_BAN' field in the FML buffer.
     *
     * @return Number of values defined for 'PARTITION_ROOT_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PARTITION_ROOT_BAN_size() throws FMLManipulationException {
        return (this.fmlBuffer[42].getCount());
    }

    /**
     * Retrieves the value of the 'ADJ_REASON_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'ADJ_REASON_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADJ_REASON_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[43].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ADJ_REASON_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 7.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_ADJ_REASON_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[43].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ADJ_REASON_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'ADJ_REASON_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADJ_REASON_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[43].getCount());
    }

    /**
     * Retrieves the value of the 'BALANCE_IMPACT_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'BALANCE_IMPACT_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BALANCE_IMPACT_CODE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[44].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'BALANCE_IMPACT_CODE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_BALANCE_IMPACT_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[44].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'BALANCE_IMPACT_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'BALANCE_IMPACT_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BALANCE_IMPACT_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[44].getCount());
    }

    /**
     * Retrieves the value of the 'EFFECTIVE_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'EFFECTIVE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_EFFECTIVE_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[45].getValue(nIndex));
    }

    /**
     * Sets the value of the 'EFFECTIVE_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 9.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_EFFECTIVE_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[45].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'EFFECTIVE_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'EFFECTIVE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_EFFECTIVE_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[45].getCount());
    }

    /**
     * Retrieves the value of the 'SOURCE_APPL_CD' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'SOURCE_APPL_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SOURCE_APPL_CD(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[46].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'SOURCE_APPL_CD' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_SOURCE_APPL_CD(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[46].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'SOURCE_APPL_CD' field in the FML buffer.
     *
     * @return Number of values defined for 'SOURCE_APPL_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SOURCE_APPL_CD_size() throws FMLManipulationException {
        return (this.fmlBuffer[46].getCount());
    }

    /**
     * Retrieves the value of the 'ADJ_LEVEL_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'ADJ_LEVEL_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADJ_LEVEL_CODE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[47].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'ADJ_LEVEL_CODE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_ADJ_LEVEL_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[47].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'ADJ_LEVEL_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'ADJ_LEVEL_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADJ_LEVEL_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[47].getCount());
    }

    /**
     * Retrieves the value of the 'INV_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'INV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_INV_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[48].getValue(nIndex));
    }

    /**
     * Sets the value of the 'INV_SEQ_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_INV_SEQ_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[48].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'INV_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'INV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INV_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[48].getCount());
    }

    /**
     * Retrieves the value of the 'SUBSCRIBER_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'SUBSCRIBER_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SUBSCRIBER_NO(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[49].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SUBSCRIBER_NO' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_SUBSCRIBER_NO(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[49].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SUBSCRIBER_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'SUBSCRIBER_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SUBSCRIBER_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[49].getCount());
    }

    /**
     * Retrieves the value of the 'CHARGE_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'CHARGE_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_CHARGE_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[50].getValue(nIndex));
    }

    /**
     * Sets the value of the 'CHARGE_ID' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_CHARGE_ID(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[50].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'CHARGE_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'CHARGE_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CHARGE_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[50].getCount());
    }

    /**
     * Retrieves the value of the 'ADJUSTMENT_AMOUNT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'ADJUSTMENT_AMOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_ADJUSTMENT_AMOUNT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[51].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ADJUSTMENT_AMOUNT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_ADJUSTMENT_AMOUNT(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[51].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ADJUSTMENT_AMOUNT' field in the FML buffer.
     *
     * @return Number of values defined for 'ADJUSTMENT_AMOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADJUSTMENT_AMOUNT_size() throws FMLManipulationException {
        return (this.fmlBuffer[51].getCount());
    }

    /**
     * Retrieves the value of the 'TAX_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'TAX_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TAX_CODE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[52].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'TAX_CODE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_TAX_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[52].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'TAX_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'TAX_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TAX_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[52].getCount());
    }

    /**
     * Retrieves the value of the 'ADJ_PRIOD_START_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'ADJ_PRIOD_START_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADJ_PRIOD_START_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[53].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ADJ_PRIOD_START_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 9.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_ADJ_PRIOD_START_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[53].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ADJ_PRIOD_START_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'ADJ_PRIOD_START_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADJ_PRIOD_START_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[53].getCount());
    }

    /**
     * Retrieves the value of the 'ADJ_PRIOD_END_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'ADJ_PRIOD_END_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADJ_PRIOD_END_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[54].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ADJ_PRIOD_END_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 9.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_ADJ_PRIOD_END_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[54].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ADJ_PRIOD_END_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'ADJ_PRIOD_END_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADJ_PRIOD_END_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[54].getCount());
    }

    /**
     * Retrieves the value of the 'USER_COMMENT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'USER_COMMENT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_USER_COMMENT(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[55].getValue(nIndex));
    }

    /**
     * Sets the value of the 'USER_COMMENT' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 501.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_USER_COMMENT(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[55].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'USER_COMMENT' field in the FML buffer.
     *
     * @return Number of values defined for 'USER_COMMENT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_USER_COMMENT_size() throws FMLManipulationException {
        return (this.fmlBuffer[55].getCount());
    }

    /**
     * Retrieves the value of the 'MEMO_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'MEMO_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_MEMO_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[56].getValue(nIndex));
    }

    /**
     * Sets the value of the 'MEMO_ID' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_MEMO_ID(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[56].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'MEMO_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'MEMO_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MEMO_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[56].getCount());
    }

    /**
     * Retrieves the value of the 'MESSAGE_EXIST_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'MESSAGE_EXIST_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MESSAGE_EXIST_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[57].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'MESSAGE_EXIST_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_MESSAGE_EXIST_IND(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[57].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'MESSAGE_EXIST_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'MESSAGE_EXIST_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MESSAGE_EXIST_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[57].getCount());
    }

    /**
     * Retrieves the value of the 'SOURCE_BILL_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'SOURCE_BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SOURCE_BILL_SEQ_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[58].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'SOURCE_BILL_SEQ_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_SOURCE_BILL_SEQ_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[58].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'SOURCE_BILL_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'SOURCE_BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SOURCE_BILL_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[58].getCount());
    }

    /**
     * Retrieves the value of the 'CHANNEL_SEIZURE_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'CHANNEL_SEIZURE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CHANNEL_SEIZURE_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[59].getValue(nIndex));
    }

    /**
     * Sets the value of the 'CHANNEL_SEIZURE_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 15.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_CHANNEL_SEIZURE_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[59].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'CHANNEL_SEIZURE_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'CHANNEL_SEIZURE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CHANNEL_SEIZURE_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[59].getCount());
    }

    /**
     * Retrieves the value of the 'MESSAGE_SWITCH_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'MESSAGE_SWITCH_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MESSAGE_SWITCH_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[60].getValue(nIndex));
    }

    /**
     * Sets the value of the 'MESSAGE_SWITCH_ID' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 8.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_MESSAGE_SWITCH_ID(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[60].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'MESSAGE_SWITCH_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'MESSAGE_SWITCH_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MESSAGE_SWITCH_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[60].getCount());
    }

    /**
     * Retrieves the value of the 'MESSAGE_IDENTIFIER' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'MESSAGE_IDENTIFIER' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MESSAGE_IDENTIFIER(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[61].getValue(nIndex));
    }

    /**
     * Sets the value of the 'MESSAGE_IDENTIFIER' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 25.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_MESSAGE_IDENTIFIER(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[61].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'MESSAGE_IDENTIFIER' field in the FML buffer.
     *
     * @return Number of values defined for 'MESSAGE_IDENTIFIER' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MESSAGE_IDENTIFIER_size() throws FMLManipulationException {
        return (this.fmlBuffer[61].getCount());
    }

    /**
     * Retrieves the value of the 'BL_IGNORE_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'BL_IGNORE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BL_IGNORE_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[62].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'BL_IGNORE_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_BL_IGNORE_IND(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[62].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'BL_IGNORE_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'BL_IGNORE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BL_IGNORE_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[62].getCount());
    }

    /**
     * Retrieves the value of the 'RMS_INV_STORE_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'RMS_INV_STORE_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RMS_INV_STORE_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[63].getValue(nIndex));
    }

    /**
     * Sets the value of the 'RMS_INV_STORE_ID' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 5.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_RMS_INV_STORE_ID(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[63].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'RMS_INV_STORE_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'RMS_INV_STORE_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RMS_INV_STORE_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[63].getCount());
    }

    /**
     * Retrieves the value of the 'RMS_INV_ACTV_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'RMS_INV_ACTV_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RMS_INV_ACTV_TYPE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[64].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'RMS_INV_ACTV_TYPE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_RMS_INV_ACTV_TYPE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[64].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'RMS_INV_ACTV_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'RMS_INV_ACTV_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RMS_INV_ACTV_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[64].getCount());
    }

    /**
     * Retrieves the value of the 'RMS_INV_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'RMS_INV_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_RMS_INV_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[65].getValue(nIndex));
    }

    /**
     * Sets the value of the 'RMS_INV_ID' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_RMS_INV_ID(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[65].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'RMS_INV_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'RMS_INV_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RMS_INV_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[65].getCount());
    }

    /**
     * Retrieves the value of the 'DISCOUNT_PCT_L' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'DISCOUNT_PCT_L' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DISCOUNT_PCT_L(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[66].getValue(nIndex));
    }

    /**
     * Sets the value of the 'DISCOUNT_PCT_L' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_DISCOUNT_PCT_L(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[66].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'DISCOUNT_PCT_L' field in the FML buffer.
     *
     * @return Number of values defined for 'DISCOUNT_PCT_L' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DISCOUNT_PCT_L_size() throws FMLManipulationException {
        return (this.fmlBuffer[66].getCount());
    }

    /**
     * Retrieves the value of the 'SOC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'SOC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SOC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[67].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SOC' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 10.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_SOC(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[67].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SOC' field in the FML buffer.
     *
     * @return Number of values defined for 'SOC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SOC_size() throws FMLManipulationException {
        return (this.fmlBuffer[67].getCount());
    }

    /**
     * Retrieves the value of the 'FTR_REVENUE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'FTR_REVENUE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FTR_REVENUE_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[68].getValue(nIndex));
    }

    /**
     * Sets the value of the 'FTR_REVENUE_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 4.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_FTR_REVENUE_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[68].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'FTR_REVENUE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'FTR_REVENUE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FTR_REVENUE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[68].getCount());
    }

    /**
     * Retrieves the value of the 'FEATURE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'FEATURE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FEATURE_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[69].getValue(nIndex));
    }

    /**
     * Sets the value of the 'FEATURE_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 7.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_FEATURE_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[69].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'FEATURE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'FEATURE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FEATURE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[69].getCount());
    }

    /**
     * Retrieves the value of the 'SUB_MARKET_CD' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'SUB_MARKET_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SUB_MARKET_CD(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[70].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SUB_MARKET_CD' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 4.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_SUB_MARKET_CD(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[70].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SUB_MARKET_CD' field in the FML buffer.
     *
     * @return Number of values defined for 'SUB_MARKET_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SUB_MARKET_CD_size() throws FMLManipulationException {
        return (this.fmlBuffer[70].getCount());
    }

    /**
     * Retrieves the value of the 'SERVICE_FTR_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'SERVICE_FTR_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SERVICE_FTR_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[71].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SERVICE_FTR_SEQ_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_SERVICE_FTR_SEQ_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[71].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SERVICE_FTR_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'SERVICE_FTR_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SERVICE_FTR_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[71].getCount());
    }

    /**
     * Retrieves the value of the 'TAX_ADJUSTMENT_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'TAX_ADJUSTMENT_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TAX_ADJUSTMENT_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[72].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'TAX_ADJUSTMENT_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_TAX_ADJUSTMENT_IND(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[72].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'TAX_ADJUSTMENT_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'TAX_ADJUSTMENT_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TAX_ADJUSTMENT_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[72].getCount());
    }

    /**
     * Retrieves the value of the 'ORG_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'ORG_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ORG_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[73].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ORG_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 10.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_ORG_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[73].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ORG_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'ORG_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ORG_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[73].getCount());
    }

    /**
     * Retrieves the value of the 'VOUCHER_NUM' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'VOUCHER_NUM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_VOUCHER_NUM(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[74].getValue(nIndex));
    }

    /**
     * Sets the value of the 'VOUCHER_NUM' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 14.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_VOUCHER_NUM(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[74].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'VOUCHER_NUM' field in the FML buffer.
     *
     * @return Number of values defined for 'VOUCHER_NUM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_VOUCHER_NUM_size() throws FMLManipulationException {
        return (this.fmlBuffer[74].getCount());
    }

    /**
     * Retrieves the value of the 'DESIGNATED_INV' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'DESIGNATED_INV' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DESIGNATED_INV(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[75].getValue(nIndex));
    }

    /**
     * Sets the value of the 'DESIGNATED_INV' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 14.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_DESIGNATED_INV(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[75].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'DESIGNATED_INV' field in the FML buffer.
     *
     * @return Number of values defined for 'DESIGNATED_INV' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DESIGNATED_INV_size() throws FMLManipulationException {
        return (this.fmlBuffer[75].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'ACTV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACTV_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[76].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ACTV_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 5.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_ACTV_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[76].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ACTV_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[76].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_RELEVANCE_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @return Value of 'BILL_RELEVANCE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_RELEVANCE_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[77].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'BILL_RELEVANCE_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 70).
     * @throws FMLManipulationException
     */
    public void set_BILL_RELEVANCE_IND(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[77].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'BILL_RELEVANCE_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_RELEVANCE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_RELEVANCE_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[77].getCount());
    }
}