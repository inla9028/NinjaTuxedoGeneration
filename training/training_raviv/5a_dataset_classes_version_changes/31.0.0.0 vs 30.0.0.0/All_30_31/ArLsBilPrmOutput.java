package no.netcom.ninja.core.system.tuxedo.service.parameters;

import bea.jolt.pool.Result;
import no.netcom.ninja.core.system.tuxedo.exception.FMLManipulationException;
import no.netcom.ninja.core.util.TypeConverter;

/**
 * @author  Ninja - Generated by Ninja tools
 */
public class ArLsBilPrmOutput extends ServiceOutput {

    /**
     * Creates a new instance of ArLsBilPrmOutput.
     *
     * @throws FMLManipulationException
     */
    public ArLsBilPrmOutput(int nApplicationStatus) throws FMLManipulationException {
        createFmlBuffer();
        setApplicationCode(nApplicationStatus);
    }

    public ArLsBilPrmOutput() {
    }

    /**
     * Creates a new instance of ArLsBilPrmOutput.
     *
     * @param ds Output dataset from ArLsBilPrm service.
     * @throws FMLManipulationException
     */
    public ArLsBilPrmOutput(Result ds) throws FMLManipulationException {
        createFmlBuffer();
        populateFmlBuffer(ds);
    }

    /**
     * Populates the FML buffer.
     *
     * @throws FMLManipulationException
     */
    private void createFmlBuffer() throws FMLManipulationException {
        if ("30.0.0.0".equals(this.getNinjaVersion())) {
            this.fmlBuffer = new FmlField[67];
            this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
            this.fmlBuffer[1] = new FmlField("ROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 1, 1);
            this.fmlBuffer[2] = new FmlField("ROWID", FmlField.TYPE_STRING, 19, null, 2, 30);
            this.fmlBuffer[3] = new FmlField("LINK_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 3, 30);
            this.fmlBuffer[4] = new FmlField("FOREIGN_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 4, 30);
            this.fmlBuffer[5] = new FmlField("LINK_TYPE", FmlField.TYPE_BYTE, -1, null, 5, 30);
            this.fmlBuffer[6] = new FmlField("ADDR_ROWID", FmlField.TYPE_STRING, 19, null, 6, 30);
            this.fmlBuffer[7] = new FmlField("ADDRESS_ID", FmlField.TYPE_INTEGER, -1, null, 7, 30);
            this.fmlBuffer[8] = new FmlField("ADR_TYPE", FmlField.TYPE_BYTE, -1, null, 8, 30);
            this.fmlBuffer[9] = new FmlField("ADR_STATUS", FmlField.TYPE_BYTE, -1, null, 9, 30);
            this.fmlBuffer[10] = new FmlField("ADR_STATUS_DATE", FmlField.TYPE_STRING, 9, null, 10, 30);
            this.fmlBuffer[11] = new FmlField("ADR_SECONDARY_LN", FmlField.TYPE_STRING, 101, null, 11, 30);
            this.fmlBuffer[12] = new FmlField("ADR_PRIMARY_LN", FmlField.TYPE_STRING, 101, null, 12, 30);
            this.fmlBuffer[13] = new FmlField("ADR_CITY", FmlField.TYPE_STRING, 40, null, 13, 30);
            this.fmlBuffer[14] = new FmlField("ADR_ZIP", FmlField.TYPE_STRING, 10, null, 14, 30);
            this.fmlBuffer[15] = new FmlField("ADR_HOUSE_NO", FmlField.TYPE_STRING, 21, null, 15, 30);
            this.fmlBuffer[16] = new FmlField("ADR_STREET_NAME", FmlField.TYPE_STRING, 61, null, 16, 30);
            this.fmlBuffer[17] = new FmlField("ADR_DIRECTION", FmlField.TYPE_STRING, 3, null, 17, 30);
            this.fmlBuffer[18] = new FmlField("ADR_POB", FmlField.TYPE_STRING, 11, null, 18, 30);
            this.fmlBuffer[19] = new FmlField("ADR_COUNTRY", FmlField.TYPE_STRING, 4, null, 19, 30);
            this.fmlBuffer[20] = new FmlField("ADR_HOUSE_LETTER", FmlField.TYPE_STRING, 3, null, 20, 30);
            this.fmlBuffer[21] = new FmlField("ADR_STORY", FmlField.TYPE_STRING, 3, null, 21, 30);
            this.fmlBuffer[22] = new FmlField("ADR_DOOR_NO", FmlField.TYPE_STRING, 5, null, 22, 30);
            this.fmlBuffer[23] = new FmlField("ADR_EMAIL", FmlField.TYPE_STRING, 151, null, 23, 30);
            this.fmlBuffer[24] = new FmlField("SINCE_DATE", FmlField.TYPE_STRING, 9, null, 24, 30);
            this.fmlBuffer[25] = new FmlField("ADR_DISTRICT", FmlField.TYPE_STRING, 41, null, 25, 30);
            this.fmlBuffer[26] = new FmlField("CO_IND", FmlField.TYPE_BYTE, -1, null, 26, 30);
            this.fmlBuffer[27] = new FmlField("CONV_RUN_NO", FmlField.TYPE_SHORT, -1, null, 27, 30);
            this.fmlBuffer[28] = new FmlField("ADR_CO_NAME", FmlField.TYPE_STRING, 61, null, 28, 30);
            this.fmlBuffer[29] = new FmlField("ACCOMMODATION_TYPE", FmlField.TYPE_STRING, 5, null, 29, 30);
            this.fmlBuffer[30] = new FmlField("BL_ADR_SECONDARY_LN", FmlField.TYPE_STRING, 101, null, 30, 30);
            this.fmlBuffer[31] = new FmlField("BL_ADR_PRIMARY_LN", FmlField.TYPE_STRING, 101, null, 31, 30);
            this.fmlBuffer[32] = new FmlField("BL_ADR_CITY", FmlField.TYPE_STRING, 40, null, 32, 30);
            this.fmlBuffer[33] = new FmlField("BL_ADR_ZIP", FmlField.TYPE_STRING, 10, null, 33, 30);
            this.fmlBuffer[34] = new FmlField("BL_ADDRESS_ID", FmlField.TYPE_INTEGER, -1, null, 34, 30);
            this.fmlBuffer[35] = new FmlField("COUNTRY_CODE", FmlField.TYPE_STRING, 4, null, 35, 30);
            this.fmlBuffer[36] = new FmlField("COUNTRY_NAME", FmlField.TYPE_STRING, 26, null, 36, 30);
            this.fmlBuffer[37] = new FmlField("NAME_ROWID", FmlField.TYPE_STRING, 19, null, 37, 30);
            this.fmlBuffer[38] = new FmlField("NAME_ID", FmlField.TYPE_INTEGER, -1, null, 38, 30);
            this.fmlBuffer[39] = new FmlField("CONTROL_NAME", FmlField.TYPE_STRING, 41, null, 39, 30);
            this.fmlBuffer[40] = new FmlField("LAST_BUSINESS_NAME", FmlField.TYPE_STRING, 61, null, 40, 30);
            this.fmlBuffer[41] = new FmlField("FIRST_NAME", FmlField.TYPE_STRING, 33, null, 41, 30);
            this.fmlBuffer[42] = new FmlField("MIDDLE_INITIAL", FmlField.TYPE_STRING, 33, null, 42, 30);
            this.fmlBuffer[43] = new FmlField("ADDITIONAL_TITLE", FmlField.TYPE_STRING, 61, null, 43, 30);
            this.fmlBuffer[44] = new FmlField("NAME_FORMAT", FmlField.TYPE_BYTE, -1, null, 44, 30);
            this.fmlBuffer[45] = new FmlField("ND_CONV_RUN_NO", FmlField.TYPE_SHORT, -1, null, 45, 30);
            this.fmlBuffer[46] = new FmlField("COMPNAME1", FmlField.TYPE_STRING, 61, null, 46, 30);
            this.fmlBuffer[47] = new FmlField("COMPNAME2", FmlField.TYPE_STRING, 61, null, 47, 30);
            this.fmlBuffer[48] = new FmlField("BL_PARAM_ROWID", FmlField.TYPE_STRING, 19, null, 48, 30);
            this.fmlBuffer[49] = new FmlField("BP_BAN", FmlField.TYPE_INTEGER, -1, null, 49, 30);
            this.fmlBuffer[50] = new FmlField("BP_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 50, 30);
            this.fmlBuffer[51] = new FmlField("BP_MEDIA_CATEGORY", FmlField.TYPE_STRING, 3, null, 51, 30);
            this.fmlBuffer[52] = new FmlField("BP_BILL_FORMAT", FmlField.TYPE_STRING, 3, null, 52, 30);
            this.fmlBuffer[53] = new FmlField("BP_NO_OF_COPIES", FmlField.TYPE_SHORT, -1, null, 53, 30);
            this.fmlBuffer[54] = new FmlField("BP_PRINT_CATEGORY", FmlField.TYPE_STRING, 3, null, 54, 30);
            this.fmlBuffer[55] = new FmlField("BP_EFFECTIVE_DATE", FmlField.TYPE_STRING, 9, null, 55, 30);
            this.fmlBuffer[56] = new FmlField("BP_EXPIRATION_DATE", FmlField.TYPE_STRING, 9, null, 56, 30);
            this.fmlBuffer[57] = new FmlField("BP_LANGUAGE", FmlField.TYPE_STRING, 3, null, 57, 30);
            this.fmlBuffer[58] = new FmlField("BP_CALL_DETAILS_MEDIA", FmlField.TYPE_BYTE, -1, null, 58, 30);
            this.fmlBuffer[59] = new FmlField("FORMAT_DESC", FmlField.TYPE_STRING, 41, null, 59, 30);
            this.fmlBuffer[60] = new FmlField("PB_NAME", FmlField.TYPE_STRING, 41, null, 60, 30);
            this.fmlBuffer[61] = new FmlField("TOTALCOUNT", FmlField.TYPE_INTEGER, -1, null, 61, 1);
            this.fmlBuffer[62] = new FmlField("DCI_ERROR_CODE", FmlField.TYPE_INTEGER, -1, null, 62, 1);
            this.fmlBuffer[63] = new FmlField("DCI_ERROR_TYPE", FmlField.TYPE_SHORT, -1, null, 63, 1);
            this.fmlBuffer[64] = new FmlField("DCI_ERROR_TEXT", FmlField.TYPE_STRING, 81, null, 64, 1);
            this.fmlBuffer[65] = new FmlField("DCI_ROW_COUNT", FmlField.TYPE_INTEGER, -1, null, 65, 1);
            this.fmlBuffer[66] = new FmlField("DCI_MORE_ROWS", FmlField.TYPE_SHORT, -1, null, 66, 1);
        } else if ("31.0.0.0".equals(this.getNinjaVersion())) {
            this.fmlBuffer = new FmlField[68];
            this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
            this.fmlBuffer[1] = new FmlField("ROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 1, 1);
            this.fmlBuffer[2] = new FmlField("ROWID", FmlField.TYPE_STRING, 19, null, 2, 30);
            this.fmlBuffer[3] = new FmlField("LINK_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 3, 30);
            this.fmlBuffer[4] = new FmlField("FOREIGN_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 4, 30);
            this.fmlBuffer[5] = new FmlField("LINK_TYPE", FmlField.TYPE_BYTE, -1, null, 5, 30);
            this.fmlBuffer[6] = new FmlField("ADDR_ROWID", FmlField.TYPE_STRING, 19, null, 6, 30);
            this.fmlBuffer[7] = new FmlField("ADDRESS_ID", FmlField.TYPE_INTEGER, -1, null, 7, 30);
            this.fmlBuffer[8] = new FmlField("ADR_TYPE", FmlField.TYPE_BYTE, -1, null, 8, 30);
            this.fmlBuffer[9] = new FmlField("ADR_STATUS", FmlField.TYPE_BYTE, -1, null, 9, 30);
            this.fmlBuffer[10] = new FmlField("ADR_STATUS_DATE", FmlField.TYPE_STRING, 9, null, 10, 30);
            this.fmlBuffer[11] = new FmlField("ADR_SECONDARY_LN", FmlField.TYPE_STRING, 101, null, 11, 30);
            this.fmlBuffer[12] = new FmlField("ADR_PRIMARY_LN", FmlField.TYPE_STRING, 101, null, 12, 30);
            this.fmlBuffer[13] = new FmlField("ADR_CITY", FmlField.TYPE_STRING, 40, null, 13, 30);
            this.fmlBuffer[14] = new FmlField("ADR_ZIP", FmlField.TYPE_STRING, 10, null, 14, 30);
            this.fmlBuffer[15] = new FmlField("ADR_HOUSE_NO", FmlField.TYPE_STRING, 21, null, 15, 30);
            this.fmlBuffer[16] = new FmlField("ADR_STREET_NAME", FmlField.TYPE_STRING, 61, null, 16, 30);
            this.fmlBuffer[17] = new FmlField("ADR_DIRECTION", FmlField.TYPE_STRING, 3, null, 17, 30);
            this.fmlBuffer[18] = new FmlField("ADR_POB", FmlField.TYPE_STRING, 11, null, 18, 30);
            this.fmlBuffer[19] = new FmlField("ADR_COUNTRY", FmlField.TYPE_STRING, 4, null, 19, 30);
            this.fmlBuffer[20] = new FmlField("ADR_HOUSE_LETTER", FmlField.TYPE_STRING, 3, null, 20, 30);
            this.fmlBuffer[21] = new FmlField("ADR_STORY", FmlField.TYPE_STRING, 3, null, 21, 30);
            this.fmlBuffer[22] = new FmlField("ADR_DOOR_NO", FmlField.TYPE_STRING, 5, null, 22, 30);
            this.fmlBuffer[23] = new FmlField("ADR_EMAIL", FmlField.TYPE_STRING, 151, null, 23, 30);
            this.fmlBuffer[24] = new FmlField("SINCE_DATE", FmlField.TYPE_STRING, 9, null, 24, 30);
            this.fmlBuffer[25] = new FmlField("ADR_DISTRICT", FmlField.TYPE_STRING, 41, null, 25, 30);
            this.fmlBuffer[26] = new FmlField("CO_IND", FmlField.TYPE_BYTE, -1, null, 26, 30);
            this.fmlBuffer[27] = new FmlField("CONV_RUN_NO", FmlField.TYPE_SHORT, -1, null, 27, 30);
            this.fmlBuffer[28] = new FmlField("ADR_CO_NAME", FmlField.TYPE_STRING, 61, null, 28, 30);
            this.fmlBuffer[29] = new FmlField("ACCOMMODATION_TYPE", FmlField.TYPE_STRING, 5, null, 29, 30);
            this.fmlBuffer[30] = new FmlField("BL_ADR_SECONDARY_LN", FmlField.TYPE_STRING, 101, null, 30, 30);
            this.fmlBuffer[31] = new FmlField("BL_ADR_PRIMARY_LN", FmlField.TYPE_STRING, 101, null, 31, 30);
            this.fmlBuffer[32] = new FmlField("BL_ADR_CITY", FmlField.TYPE_STRING, 40, null, 32, 30);
            this.fmlBuffer[33] = new FmlField("BL_ADR_ZIP", FmlField.TYPE_STRING, 10, null, 33, 30);
            this.fmlBuffer[34] = new FmlField("BL_ADDRESS_ID", FmlField.TYPE_INTEGER, -1, null, 34, 30);
            this.fmlBuffer[35] = new FmlField("COUNTRY_CODE", FmlField.TYPE_STRING, 4, null, 35, 30);
            this.fmlBuffer[36] = new FmlField("COUNTRY_NAME", FmlField.TYPE_STRING, 26, null, 36, 30);
            this.fmlBuffer[37] = new FmlField("NAME_ROWID", FmlField.TYPE_STRING, 19, null, 37, 30);
            this.fmlBuffer[38] = new FmlField("NAME_ID", FmlField.TYPE_INTEGER, -1, null, 38, 30);
            this.fmlBuffer[39] = new FmlField("CONTROL_NAME", FmlField.TYPE_STRING, 41, null, 39, 30);
            this.fmlBuffer[40] = new FmlField("LAST_BUSINESS_NAME", FmlField.TYPE_STRING, 61, null, 40, 30);
            this.fmlBuffer[41] = new FmlField("FIRST_NAME", FmlField.TYPE_STRING, 33, null, 41, 30);
            this.fmlBuffer[42] = new FmlField("MIDDLE_INITIAL", FmlField.TYPE_STRING, 33, null, 42, 30);
            this.fmlBuffer[43] = new FmlField("ADDITIONAL_TITLE", FmlField.TYPE_STRING, 61, null, 43, 30);
            this.fmlBuffer[44] = new FmlField("NAME_FORMAT", FmlField.TYPE_BYTE, -1, null, 44, 30);
            this.fmlBuffer[45] = new FmlField("ND_CONV_RUN_NO", FmlField.TYPE_SHORT, -1, null, 45, 30);
            this.fmlBuffer[46] = new FmlField("COMPNAME1", FmlField.TYPE_STRING, 61, null, 46, 30);
            this.fmlBuffer[47] = new FmlField("COMPNAME2", FmlField.TYPE_STRING, 61, null, 47, 30);
            this.fmlBuffer[48] = new FmlField("BL_PARAM_ROWID", FmlField.TYPE_STRING, 19, null, 48, 30);
            this.fmlBuffer[49] = new FmlField("BP_BAN", FmlField.TYPE_INTEGER, -1, null, 49, 30);
            this.fmlBuffer[50] = new FmlField("BP_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 50, 30);
            this.fmlBuffer[51] = new FmlField("BP_MEDIA_CATEGORY", FmlField.TYPE_STRING, 3, null, 51, 30);
            this.fmlBuffer[52] = new FmlField("BP_BILL_FORMAT", FmlField.TYPE_STRING, 3, null, 52, 30);
            this.fmlBuffer[53] = new FmlField("BP_NO_OF_COPIES", FmlField.TYPE_SHORT, -1, null, 53, 30);
            this.fmlBuffer[54] = new FmlField("BP_PRINT_CATEGORY", FmlField.TYPE_STRING, 3, null, 54, 30);
            this.fmlBuffer[55] = new FmlField("BP_EFFECTIVE_DATE", FmlField.TYPE_STRING, 9, null, 55, 30);
            this.fmlBuffer[56] = new FmlField("BP_EXPIRATION_DATE", FmlField.TYPE_STRING, 9, null, 56, 30);
            this.fmlBuffer[57] = new FmlField("BP_LANGUAGE", FmlField.TYPE_STRING, 3, null, 57, 30);
            this.fmlBuffer[58] = new FmlField("BP_CALL_DETAILS_MEDIA", FmlField.TYPE_BYTE, -1, null, 58, 30);
            this.fmlBuffer[59] = new FmlField("FORMAT_DESC", FmlField.TYPE_STRING, 41, null, 59, 30);
            this.fmlBuffer[60] = new FmlField("PB_NAME", FmlField.TYPE_STRING, 41, null, 60, 30);
            this.fmlBuffer[61] = new FmlField("BP_REFERENCE_INFO", FmlField.TYPE_STRING, 31, null, 61, 30);
            this.fmlBuffer[62] = new FmlField("TOTALCOUNT", FmlField.TYPE_INTEGER, -1, null, 62, 1);
            this.fmlBuffer[63] = new FmlField("DCI_ERROR_CODE", FmlField.TYPE_INTEGER, -1, null, 63, 1);
            this.fmlBuffer[64] = new FmlField("DCI_ERROR_TYPE", FmlField.TYPE_SHORT, -1, null, 64, 1);
            this.fmlBuffer[65] = new FmlField("DCI_ERROR_TEXT", FmlField.TYPE_STRING, 81, null, 65, 1);
            this.fmlBuffer[66] = new FmlField("DCI_ROW_COUNT", FmlField.TYPE_INTEGER, -1, null, 66, 1);
            this.fmlBuffer[67] = new FmlField("DCI_MORE_ROWS", FmlField.TYPE_SHORT, -1, null, 67, 1);
        } else {
            throw new FMLManipulationException("Current version (" + this.getNinjaVersion() + ") not supported by ArLsBilPrmOutput class");
        }
    }

    /**
     * Retrieves the value of the 'GENERATION' field in the FML buffer.
     *
     * @return Value of 'GENERATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GENERATION() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[0].getValue(0));
    }

    /**
     * Retrieves the value of the 'ROWCOUNT' field in the FML buffer.
     *
     * @return Value of 'ROWCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROWCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[1].getValue(0));
    }

    /**
     * Retrieves the value of the 'ROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[2].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[2].getCount());
    }

    /**
     * Retrieves the value of the 'LINK_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'LINK_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_LINK_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[3].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'LINK_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'LINK_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LINK_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[3].getCount());
    }

    /**
     * Retrieves the value of the 'FOREIGN_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'FOREIGN_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_FOREIGN_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[4].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'FOREIGN_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'FOREIGN_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FOREIGN_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[4].getCount());
    }

    /**
     * Retrieves the value of the 'LINK_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'LINK_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LINK_TYPE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[5].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'LINK_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'LINK_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LINK_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[5].getCount());
    }

    /**
     * Retrieves the value of the 'ADDR_ROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADDR_ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADDR_ROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[6].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADDR_ROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'ADDR_ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADDR_ROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[6].getCount());
    }

    /**
     * Retrieves the value of the 'ADDRESS_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADDRESS_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ADDRESS_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[7].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADDRESS_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'ADDRESS_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADDRESS_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[7].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_TYPE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[8].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'ADR_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[8].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_STATUS' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_STATUS(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[9].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'ADR_STATUS' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_STATUS_size() throws FMLManipulationException {
        return (this.fmlBuffer[9].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_STATUS_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_STATUS_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_STATUS_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[10].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_STATUS_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_STATUS_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_STATUS_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[10].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_SECONDARY_LN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_SECONDARY_LN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_SECONDARY_LN(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[11].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_SECONDARY_LN' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_SECONDARY_LN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_SECONDARY_LN_size() throws FMLManipulationException {
        return (this.fmlBuffer[11].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_PRIMARY_LN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_PRIMARY_LN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_PRIMARY_LN(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[12].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_PRIMARY_LN' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_PRIMARY_LN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_PRIMARY_LN_size() throws FMLManipulationException {
        return (this.fmlBuffer[12].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_CITY' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_CITY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_CITY(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[13].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_CITY' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_CITY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_CITY_size() throws FMLManipulationException {
        return (this.fmlBuffer[13].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_ZIP' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_ZIP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_ZIP(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[14].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_ZIP' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_ZIP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_ZIP_size() throws FMLManipulationException {
        return (this.fmlBuffer[14].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_HOUSE_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_HOUSE_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_HOUSE_NO(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[15].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_HOUSE_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_HOUSE_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_HOUSE_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[15].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_STREET_NAME' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_STREET_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_STREET_NAME(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[16].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_STREET_NAME' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_STREET_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_STREET_NAME_size() throws FMLManipulationException {
        return (this.fmlBuffer[16].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_DIRECTION' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_DIRECTION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_DIRECTION(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[17].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_DIRECTION' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_DIRECTION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_DIRECTION_size() throws FMLManipulationException {
        return (this.fmlBuffer[17].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_POB' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_POB' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_POB(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[18].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_POB' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_POB' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_POB_size() throws FMLManipulationException {
        return (this.fmlBuffer[18].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_COUNTRY' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_COUNTRY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_COUNTRY(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[19].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_COUNTRY' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_COUNTRY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_COUNTRY_size() throws FMLManipulationException {
        return (this.fmlBuffer[19].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_HOUSE_LETTER' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_HOUSE_LETTER' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_HOUSE_LETTER(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[20].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_HOUSE_LETTER' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_HOUSE_LETTER' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_HOUSE_LETTER_size() throws FMLManipulationException {
        return (this.fmlBuffer[20].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_STORY' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_STORY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_STORY(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[21].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_STORY' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_STORY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_STORY_size() throws FMLManipulationException {
        return (this.fmlBuffer[21].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_DOOR_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_DOOR_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_DOOR_NO(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[22].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_DOOR_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_DOOR_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_DOOR_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[22].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_EMAIL' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_EMAIL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_EMAIL(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[23].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_EMAIL' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_EMAIL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_EMAIL_size() throws FMLManipulationException {
        return (this.fmlBuffer[23].getCount());
    }

    /**
     * Retrieves the value of the 'SINCE_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'SINCE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SINCE_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[24].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SINCE_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SINCE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SINCE_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[24].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_DISTRICT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_DISTRICT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_DISTRICT(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[25].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_DISTRICT' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_DISTRICT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_DISTRICT_size() throws FMLManipulationException {
        return (this.fmlBuffer[25].getCount());
    }

    /**
     * Retrieves the value of the 'CO_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'CO_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CO_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[26].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'CO_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'CO_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CO_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[26].getCount());
    }

    /**
     * Retrieves the value of the 'CONV_RUN_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'CONV_RUN_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_CONV_RUN_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[27].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'CONV_RUN_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'CONV_RUN_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CONV_RUN_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[27].getCount());
    }

    /**
     * Retrieves the value of the 'ADR_CO_NAME' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADR_CO_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADR_CO_NAME(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[28].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADR_CO_NAME' field in the FML buffer.
     *
     * @return Number of values defined for 'ADR_CO_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADR_CO_NAME_size() throws FMLManipulationException {
        return (this.fmlBuffer[28].getCount());
    }

    /**
     * Retrieves the value of the 'ACCOMMODATION_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ACCOMMODATION_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACCOMMODATION_TYPE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[29].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ACCOMMODATION_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACCOMMODATION_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACCOMMODATION_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[29].getCount());
    }

    /**
     * Retrieves the value of the 'BL_ADR_SECONDARY_LN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BL_ADR_SECONDARY_LN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BL_ADR_SECONDARY_LN(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[30].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BL_ADR_SECONDARY_LN' field in the FML buffer.
     *
     * @return Number of values defined for 'BL_ADR_SECONDARY_LN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BL_ADR_SECONDARY_LN_size() throws FMLManipulationException {
        return (this.fmlBuffer[30].getCount());
    }

    /**
     * Retrieves the value of the 'BL_ADR_PRIMARY_LN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BL_ADR_PRIMARY_LN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BL_ADR_PRIMARY_LN(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[31].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BL_ADR_PRIMARY_LN' field in the FML buffer.
     *
     * @return Number of values defined for 'BL_ADR_PRIMARY_LN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BL_ADR_PRIMARY_LN_size() throws FMLManipulationException {
        return (this.fmlBuffer[31].getCount());
    }

    /**
     * Retrieves the value of the 'BL_ADR_CITY' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BL_ADR_CITY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BL_ADR_CITY(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[32].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BL_ADR_CITY' field in the FML buffer.
     *
     * @return Number of values defined for 'BL_ADR_CITY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BL_ADR_CITY_size() throws FMLManipulationException {
        return (this.fmlBuffer[32].getCount());
    }

    /**
     * Retrieves the value of the 'BL_ADR_ZIP' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BL_ADR_ZIP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BL_ADR_ZIP(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[33].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BL_ADR_ZIP' field in the FML buffer.
     *
     * @return Number of values defined for 'BL_ADR_ZIP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BL_ADR_ZIP_size() throws FMLManipulationException {
        return (this.fmlBuffer[33].getCount());
    }

    /**
     * Retrieves the value of the 'BL_ADDRESS_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BL_ADDRESS_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_BL_ADDRESS_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[34].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BL_ADDRESS_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'BL_ADDRESS_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BL_ADDRESS_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[34].getCount());
    }

    /**
     * Retrieves the value of the 'COUNTRY_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'COUNTRY_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_COUNTRY_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[35].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'COUNTRY_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'COUNTRY_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_COUNTRY_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[35].getCount());
    }

    /**
     * Retrieves the value of the 'COUNTRY_NAME' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'COUNTRY_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_COUNTRY_NAME(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[36].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'COUNTRY_NAME' field in the FML buffer.
     *
     * @return Number of values defined for 'COUNTRY_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_COUNTRY_NAME_size() throws FMLManipulationException {
        return (this.fmlBuffer[36].getCount());
    }

    /**
     * Retrieves the value of the 'NAME_ROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'NAME_ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_NAME_ROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[37].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'NAME_ROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'NAME_ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_NAME_ROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[37].getCount());
    }

    /**
     * Retrieves the value of the 'NAME_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'NAME_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_NAME_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[38].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'NAME_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'NAME_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_NAME_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[38].getCount());
    }

    /**
     * Retrieves the value of the 'CONTROL_NAME' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'CONTROL_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CONTROL_NAME(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[39].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CONTROL_NAME' field in the FML buffer.
     *
     * @return Number of values defined for 'CONTROL_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CONTROL_NAME_size() throws FMLManipulationException {
        return (this.fmlBuffer[39].getCount());
    }

    /**
     * Retrieves the value of the 'LAST_BUSINESS_NAME' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'LAST_BUSINESS_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LAST_BUSINESS_NAME(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[40].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'LAST_BUSINESS_NAME' field in the FML buffer.
     *
     * @return Number of values defined for 'LAST_BUSINESS_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LAST_BUSINESS_NAME_size() throws FMLManipulationException {
        return (this.fmlBuffer[40].getCount());
    }

    /**
     * Retrieves the value of the 'FIRST_NAME' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'FIRST_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FIRST_NAME(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[41].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'FIRST_NAME' field in the FML buffer.
     *
     * @return Number of values defined for 'FIRST_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FIRST_NAME_size() throws FMLManipulationException {
        return (this.fmlBuffer[41].getCount());
    }

    /**
     * Retrieves the value of the 'MIDDLE_INITIAL' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'MIDDLE_INITIAL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MIDDLE_INITIAL(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[42].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'MIDDLE_INITIAL' field in the FML buffer.
     *
     * @return Number of values defined for 'MIDDLE_INITIAL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MIDDLE_INITIAL_size() throws FMLManipulationException {
        return (this.fmlBuffer[42].getCount());
    }

    /**
     * Retrieves the value of the 'ADDITIONAL_TITLE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ADDITIONAL_TITLE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ADDITIONAL_TITLE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[43].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADDITIONAL_TITLE' field in the FML buffer.
     *
     * @return Number of values defined for 'ADDITIONAL_TITLE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADDITIONAL_TITLE_size() throws FMLManipulationException {
        return (this.fmlBuffer[43].getCount());
    }

    /**
     * Retrieves the value of the 'NAME_FORMAT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'NAME_FORMAT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_NAME_FORMAT(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[44].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'NAME_FORMAT' field in the FML buffer.
     *
     * @return Number of values defined for 'NAME_FORMAT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_NAME_FORMAT_size() throws FMLManipulationException {
        return (this.fmlBuffer[44].getCount());
    }

    /**
     * Retrieves the value of the 'ND_CONV_RUN_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'ND_CONV_RUN_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ND_CONV_RUN_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[45].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'ND_CONV_RUN_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ND_CONV_RUN_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ND_CONV_RUN_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[45].getCount());
    }

    /**
     * Retrieves the value of the 'COMPNAME1' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'COMPNAME1' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_COMPNAME1(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[46].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'COMPNAME1' field in the FML buffer.
     *
     * @return Number of values defined for 'COMPNAME1' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_COMPNAME1_size() throws FMLManipulationException {
        return (this.fmlBuffer[46].getCount());
    }

    /**
     * Retrieves the value of the 'COMPNAME2' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'COMPNAME2' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_COMPNAME2(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[47].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'COMPNAME2' field in the FML buffer.
     *
     * @return Number of values defined for 'COMPNAME2' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_COMPNAME2_size() throws FMLManipulationException {
        return (this.fmlBuffer[47].getCount());
    }

    /**
     * Retrieves the value of the 'BL_PARAM_ROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BL_PARAM_ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BL_PARAM_ROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[48].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BL_PARAM_ROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'BL_PARAM_ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BL_PARAM_ROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[48].getCount());
    }

    /**
     * Retrieves the value of the 'BP_BAN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BP_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_BP_BAN(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[49].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BP_BAN' field in the FML buffer.
     *
     * @return Number of values defined for 'BP_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BP_BAN_size() throws FMLManipulationException {
        return (this.fmlBuffer[49].getCount());
    }

    /**
     * Retrieves the value of the 'BP_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BP_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_BP_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[50].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BP_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'BP_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BP_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[50].getCount());
    }

    /**
     * Retrieves the value of the 'BP_MEDIA_CATEGORY' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BP_MEDIA_CATEGORY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BP_MEDIA_CATEGORY(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[51].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BP_MEDIA_CATEGORY' field in the FML buffer.
     *
     * @return Number of values defined for 'BP_MEDIA_CATEGORY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BP_MEDIA_CATEGORY_size() throws FMLManipulationException {
        return (this.fmlBuffer[51].getCount());
    }

    /**
     * Retrieves the value of the 'BP_BILL_FORMAT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BP_BILL_FORMAT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BP_BILL_FORMAT(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[52].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BP_BILL_FORMAT' field in the FML buffer.
     *
     * @return Number of values defined for 'BP_BILL_FORMAT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BP_BILL_FORMAT_size() throws FMLManipulationException {
        return (this.fmlBuffer[52].getCount());
    }

    /**
     * Retrieves the value of the 'BP_NO_OF_COPIES' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BP_NO_OF_COPIES' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_BP_NO_OF_COPIES(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[53].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'BP_NO_OF_COPIES' field in the FML buffer.
     *
     * @return Number of values defined for 'BP_NO_OF_COPIES' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BP_NO_OF_COPIES_size() throws FMLManipulationException {
        return (this.fmlBuffer[53].getCount());
    }

    /**
     * Retrieves the value of the 'BP_PRINT_CATEGORY' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BP_PRINT_CATEGORY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BP_PRINT_CATEGORY(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[54].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BP_PRINT_CATEGORY' field in the FML buffer.
     *
     * @return Number of values defined for 'BP_PRINT_CATEGORY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BP_PRINT_CATEGORY_size() throws FMLManipulationException {
        return (this.fmlBuffer[54].getCount());
    }

    /**
     * Retrieves the value of the 'BP_EFFECTIVE_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BP_EFFECTIVE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BP_EFFECTIVE_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[55].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BP_EFFECTIVE_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'BP_EFFECTIVE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BP_EFFECTIVE_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[55].getCount());
    }

    /**
     * Retrieves the value of the 'BP_EXPIRATION_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BP_EXPIRATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BP_EXPIRATION_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[56].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BP_EXPIRATION_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'BP_EXPIRATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BP_EXPIRATION_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[56].getCount());
    }

    /**
     * Retrieves the value of the 'BP_LANGUAGE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BP_LANGUAGE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BP_LANGUAGE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[57].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BP_LANGUAGE' field in the FML buffer.
     *
     * @return Number of values defined for 'BP_LANGUAGE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BP_LANGUAGE_size() throws FMLManipulationException {
        return (this.fmlBuffer[57].getCount());
    }

    /**
     * Retrieves the value of the 'BP_CALL_DETAILS_MEDIA' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BP_CALL_DETAILS_MEDIA' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BP_CALL_DETAILS_MEDIA(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[58].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'BP_CALL_DETAILS_MEDIA' field in the FML buffer.
     *
     * @return Number of values defined for 'BP_CALL_DETAILS_MEDIA' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BP_CALL_DETAILS_MEDIA_size() throws FMLManipulationException {
        return (this.fmlBuffer[58].getCount());
    }

    /**
     * Retrieves the value of the 'FORMAT_DESC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'FORMAT_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FORMAT_DESC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[59].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'FORMAT_DESC' field in the FML buffer.
     *
     * @return Number of values defined for 'FORMAT_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FORMAT_DESC_size() throws FMLManipulationException {
        return (this.fmlBuffer[59].getCount());
    }

    /**
     * Retrieves the value of the 'PB_NAME' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'PB_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PB_NAME(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[60].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PB_NAME' field in the FML buffer.
     *
     * @return Number of values defined for 'PB_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PB_NAME_size() throws FMLManipulationException {
        return (this.fmlBuffer[60].getCount());
    }

    /**
     * Retrieves the value of the 'TOTALCOUNT' field in the FML buffer.
     *
     * @return Value of 'TOTALCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_TOTALCOUNT() throws FMLManipulationException {
        if ("30.0.0.0".equals(this.getNinjaVersion())) {
            return ((Integer) this.fmlBuffer[61].getValue(0));
        } else if ("31.0.0.0".equals(this.getNinjaVersion())) {
            return ((Integer) this.fmlBuffer[62].getValue(0));
        } else {
            throw new FMLManipulationException("Current version (" + this.getNinjaVersion() + ") not supported by ArLsBilPrmOutput class");
        }
    }

    /**
     * Retrieves the value of the 'DCI_ERROR_CODE' field in the FML buffer.
     *
     * @return Value of 'DCI_ERROR_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DCI_ERROR_CODE() throws FMLManipulationException {
        if ("30.0.0.0".equals(this.getNinjaVersion())) {
            return ((Integer) this.fmlBuffer[62].getValue(0));
        } else if ("31.0.0.0".equals(this.getNinjaVersion())) {
            return ((Integer) this.fmlBuffer[63].getValue(0));
        } else {
            throw new FMLManipulationException("Current version (" + this.getNinjaVersion() + ") not supported by ArLsBilPrmOutput class");
        }
    }

    /**
     * Retrieves the value of the 'DCI_ERROR_TYPE' field in the FML buffer.
     *
     * @return Value of 'DCI_ERROR_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DCI_ERROR_TYPE() throws FMLManipulationException {
        if ("30.0.0.0".equals(this.getNinjaVersion())) {
            return (TypeConverter.shortToInteger((Short) this.fmlBuffer[63].getValue(0)));
        } else if ("31.0.0.0".equals(this.getNinjaVersion())) {
            return (TypeConverter.shortToInteger((Short) this.fmlBuffer[64].getValue(0)));
        } else {
            throw new FMLManipulationException("Current version (" + this.getNinjaVersion() + ") not supported by ArLsBilPrmOutput class");
        }
    }

    /**
     * Retrieves the value of the 'DCI_ERROR_TEXT' field in the FML buffer.
     *
     * @return Value of 'DCI_ERROR_TEXT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DCI_ERROR_TEXT() throws FMLManipulationException {
        if ("30.0.0.0".equals(this.getNinjaVersion())) {
            return ((String) this.fmlBuffer[64].getValue(0));
        } else if ("31.0.0.0".equals(this.getNinjaVersion())) {
            return ((String) this.fmlBuffer[65].getValue(0));
        } else {
            throw new FMLManipulationException("Current version (" + this.getNinjaVersion() + ") not supported by ArLsBilPrmOutput class");
        }
    }

    /**
     * Retrieves the value of the 'DCI_ROW_COUNT' field in the FML buffer.
     *
     * @return Value of 'DCI_ROW_COUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DCI_ROW_COUNT() throws FMLManipulationException {
        if ("30.0.0.0".equals(this.getNinjaVersion())) {
            return ((Integer) this.fmlBuffer[65].getValue(0));
        } else if ("31.0.0.0".equals(this.getNinjaVersion())) {
            return ((Integer) this.fmlBuffer[66].getValue(0));
        } else {
            throw new FMLManipulationException("Current version (" + this.getNinjaVersion() + ") not supported by ArLsBilPrmOutput class");
        }
    }

    /**
     * Retrieves the value of the 'DCI_MORE_ROWS' field in the FML buffer.
     *
     * @return Value of 'DCI_MORE_ROWS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DCI_MORE_ROWS() throws FMLManipulationException {
        if ("30.0.0.0".equals(this.getNinjaVersion())) {
            return (TypeConverter.shortToInteger((Short) this.fmlBuffer[66].getValue(0)));
        } else if ("31.0.0.0".equals(this.getNinjaVersion())) {
            return (TypeConverter.shortToInteger((Short) this.fmlBuffer[67].getValue(0)));
        } else {
            throw new FMLManipulationException("Current version (" + this.getNinjaVersion() + ") not supported by ArLsBilPrmOutput class");
        }
    }

    /**
     * Retrieves the value of the 'BP_REFERENCE_INFO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 30).
     * @return Value of 'BP_REFERENCE_INFO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BP_REFERENCE_INFO(int nIndex) throws FMLManipulationException {
        if ("30.0.0.0".equals(this.getNinjaVersion())) {
            throw new FMLManipulationException("Method not supported in version 30.0.0.0");
        } else if ("31.0.0.0".equals(this.getNinjaVersion())) {
            return ((String) this.fmlBuffer[61].getValue(nIndex));
        } else {
            throw new FMLManipulationException("Current version (" + this.getNinjaVersion() + ") not supported by ArLsBilPrmOutput class");
        }
    }

    /**
     * Retrieves number of values defined for 'BP_REFERENCE_INFO' field in the FML buffer.
     *
     * @return Number of values defined for 'BP_REFERENCE_INFO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BP_REFERENCE_INFO_size() throws FMLManipulationException {
        if ("30.0.0.0".equals(this.getNinjaVersion())) {
            throw new FMLManipulationException("Method not supported in version 30.0.0.0");
        } else if ("31.0.0.0".equals(this.getNinjaVersion())) {
            return (this.fmlBuffer[61].getCount());
        } else {
            throw new FMLManipulationException("Current version (" + this.getNinjaVersion() + ") not supported by ArLsBilPrmOutput class");
        }
    }

    private void set_BP_REFERENCE_INFO(int nIndex, String value) throws FMLManipulationException {
        if ("30.0.0.0".equals(this.getNinjaVersion())) {
            throw new FMLManipulationException("Method not supported in version 30.0.0.0");
        } else if ("31.0.0.0".equals(this.getNinjaVersion())) {
            this.fmlBuffer[61].setValue(nIndex, value);
        } else {
            throw new FMLManipulationException("Current version (" + this.getNinjaVersion() + ") not supported by ArLsBilPrmOutput class");
        }
    }
}