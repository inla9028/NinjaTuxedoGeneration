package no.netcom.ninja.core.system.tuxedo.service.parameters;

import no.netcom.ninja.core.referencetables.NinjaConfigurationReferenceTable;
import no.netcom.ninja.core.system.tuxedo.exception.EnvironmentException;
import no.netcom.ninja.core.system.tuxedo.exception.FMLManipulationException;
import no.netcom.ninja.core.util.TypeConverter;


/**
 * @author  Ninja - Generated by Ninja tools
 */
public class ArMultCrdInput extends ServiceInput {
    //// Indicates whether the default values has been loaded from the DB or not
    //private static Boolean defaultValuesPopulated = Boolean.FALSE;
    //// Holds default values for fields in FML buffer
    //private static String defaultValues[] = null;

    /**
     * Creates a new instance of ArMultCrdInput
     *
     * @throws EnvironmentException
     * @throws FMLManipulationException
     */
    public ArMultCrdInput() throws EnvironmentException, FMLManipulationException {
        // Initialise FML buffer
        fmlBuffer = new FmlField[143];

        //// Get default values from DB
        //synchronized (this.defaultValuesPopulated) {
        //    if (this.defaultValuesPopulated.equals(Boolean.FALSE)) {
        //        defaultValues = getDefaultValues("arMultCrd", 143);
        //        this.defaultValuesPopulated = Boolean.TRUE;
        //    }
        //}

        this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
        this.fmlBuffer[1] = new FmlField("DIRECTIVE", FmlField.TYPE_INTEGER, -1, NinjaConfigurationReferenceTable.getTuxedoDirective(), 1, 1);
        this.fmlBuffer[2] = new FmlField("FIRST_DIRECTIVE", FmlField.TYPE_INTEGER, -1, null, 2, 1);
        this.fmlBuffer[3] = new FmlField("SECOND_DIRECTIVE", FmlField.TYPE_INTEGER, -1, null, 3, 1);
        this.fmlBuffer[4] = new FmlField("OPERATOR_ID", FmlField.TYPE_INTEGER, -1, NinjaConfigurationReferenceTable.getDefaultFokusOperatorId(), 4, 1);
        this.fmlBuffer[5] = new FmlField("APPLICATION_ID", FmlField.TYPE_STRING, 7, NinjaConfigurationReferenceTable.getApplicationId(), 5, 1);
        this.fmlBuffer[6] = new FmlField("TRANSACTION_MODE", FmlField.TYPE_BYTE, -1, NinjaConfigurationReferenceTable.getTuxedoTransactionMode(), 6, 1);
        this.fmlBuffer[7] = new FmlField("RUN_DATE", FmlField.TYPE_STRING, 9, null, 7, 1);
        this.fmlBuffer[8] = new FmlField("MARKET_CODE", FmlField.TYPE_STRING, 4, NinjaConfigurationReferenceTable.getDefaultMarket(), 8, 1);
        this.fmlBuffer[9] = new FmlField("SVC_STATUS", FmlField.TYPE_BYTE, -1, null, 9, 1);
        this.fmlBuffer[10] = new FmlField("LAST_UPDATE_DATE", FmlField.TYPE_STRING, 15, null, 10, 1);
        this.fmlBuffer[11] = new FmlField("LAST_UPDATE_STAMP", FmlField.TYPE_SHORT, -1, null, 11, 1);
        this.fmlBuffer[12] = new FmlField("ENV_CODE", FmlField.TYPE_STRING, 11, NinjaConfigurationReferenceTable.getFokusEnvironmentCode(), 12, 1);
        this.fmlBuffer[13] = new FmlField("SESSION_ID", FmlField.TYPE_INTEGER, -1, NinjaConfigurationReferenceTable.getTuxedoSessionId(), 13, 1);
        this.fmlBuffer[14] = new FmlField("ONLINE_TRX_NO", FmlField.TYPE_INTEGER, -1, NinjaConfigurationReferenceTable.getTuxedoOnlineTrxNo(), 14, 1);
        this.fmlBuffer[15] = new FmlField("GROUP_TRX_ID", FmlField.TYPE_INTEGER, -1, null, 15, 1);
        this.fmlBuffer[16] = new FmlField("ROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 16, 1);
        this.fmlBuffer[17] = new FmlField("ROWID", FmlField.TYPE_STRING, 19, null, 17, 100);
        this.fmlBuffer[18] = new FmlField("ROOT_BAN", FmlField.TYPE_INTEGER, -1, null, 18, 100);
        this.fmlBuffer[19] = new FmlField("BAN", FmlField.TYPE_INTEGER, -1, null, 19, 100);
        this.fmlBuffer[20] = new FmlField("ACTV_BILL_SEQ_NO", FmlField.TYPE_SHORT, -1, null, 20, 100);
        this.fmlBuffer[21] = new FmlField("ENT_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 21, 100);
        this.fmlBuffer[22] = new FmlField("ACTV_SEQ_NO", FmlField.TYPE_SHORT, -1, null, 22, 100);
        this.fmlBuffer[23] = new FmlField("SYS_CREATION_DATE", FmlField.TYPE_STRING, 15, null, 23, 100);
        this.fmlBuffer[24] = new FmlField("SYS_UPDATE_DATE", FmlField.TYPE_STRING, 15, null, 24, 100);
        this.fmlBuffer[25] = new FmlField("PARMULTCRARRAYOPERATOR_ID", FmlField.TYPE_INTEGER, -1, null, 25, 100);
        this.fmlBuffer[26] = new FmlField("PARMULTCRARRAYAPPLICATION_ID", FmlField.TYPE_STRING, 7, null, 26, 100);
        this.fmlBuffer[27] = new FmlField("DL_SERVICE_CODE", FmlField.TYPE_STRING, 6, null, 27, 100);
        this.fmlBuffer[28] = new FmlField("DL_UPDATE_STAMP", FmlField.TYPE_SHORT, -1, null, 28, 100);
        this.fmlBuffer[29] = new FmlField("VOUCHER_NUM", FmlField.TYPE_STRING, 14, null, 29, 100);
        this.fmlBuffer[30] = new FmlField("SUBSCRIBER_NO", FmlField.TYPE_STRING, 21, null, 30, 100);
        this.fmlBuffer[31] = new FmlField("DEPARTMENT", FmlField.TYPE_STRING, 5, null, 31, 100);
        this.fmlBuffer[32] = new FmlField("ORG_CODE", FmlField.TYPE_STRING, 6, null, 32, 100);
        this.fmlBuffer[33] = new FmlField("PRODUCT_TYPE", FmlField.TYPE_STRING, 4, null, 33, 100);
        this.fmlBuffer[34] = new FmlField("SUB_MARKET_CD", FmlField.TYPE_STRING, 4, null, 34, 100);
        this.fmlBuffer[35] = new FmlField("PRIOD_CVRG_ST_DATE", FmlField.TYPE_STRING, 9, null, 35, 100);
        this.fmlBuffer[36] = new FmlField("PRIOD_CVRG_ND_DATE", FmlField.TYPE_STRING, 9, null, 36, 100);
        this.fmlBuffer[37] = new FmlField("CHG_CREATION_DATE", FmlField.TYPE_STRING, 9, null, 37, 100);
        this.fmlBuffer[38] = new FmlField("EFFECTIVE_DATE", FmlField.TYPE_STRING, 9, null, 38, 100);
        this.fmlBuffer[39] = new FmlField("FINANCE_EFF_DATE", FmlField.TYPE_STRING, 9, null, 39, 100);
        this.fmlBuffer[40] = new FmlField("LAST_RG_RC_DATE", FmlField.TYPE_STRING, 9, null, 40, 100);
        this.fmlBuffer[41] = new FmlField("ACTV_DATE", FmlField.TYPE_STRING, 9, null, 41, 100);
        this.fmlBuffer[42] = new FmlField("ACTV_CODE", FmlField.TYPE_STRING, 5, null, 42, 100);
        this.fmlBuffer[43] = new FmlField("ACTV_REASON_CODE", FmlField.TYPE_STRING, 7, null, 43, 100);
        this.fmlBuffer[44] = new FmlField("ACTV_AMT", FmlField.TYPE_DOUBLE, -1, null, 44, 100);
        this.fmlBuffer[45] = new FmlField("DURATION", FmlField.TYPE_DOUBLE, -1, null, 45, 100);
        this.fmlBuffer[46] = new FmlField("NUM_OF_CALLS", FmlField.TYPE_INTEGER, -1, null, 46, 100);
        this.fmlBuffer[47] = new FmlField("FEATURE_CODE", FmlField.TYPE_STRING, 7, null, 47, 100);
        this.fmlBuffer[48] = new FmlField("FTR_REVENUE_CODE", FmlField.TYPE_STRING, 4, null, 48, 100);
        this.fmlBuffer[49] = new FmlField("FEATURE_CATEGORY", FmlField.TYPE_STRING, 5, null, 49, 100);
        this.fmlBuffer[50] = new FmlField("SECONDARY_FEATURE_CD", FmlField.TYPE_STRING, 7, null, 50, 100);
        this.fmlBuffer[51] = new FmlField("AU_RATING_SCHEME_IND", FmlField.TYPE_BYTE, -1, null, 51, 100);
        this.fmlBuffer[52] = new FmlField("BALANCE_IMPACT_CODE", FmlField.TYPE_BYTE, -1, null, 52, 100);
        this.fmlBuffer[53] = new FmlField("SOC", FmlField.TYPE_STRING, 10, null, 53, 100);
        this.fmlBuffer[54] = new FmlField("SOC_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 54, 100);
        this.fmlBuffer[55] = new FmlField("SOC_VER_NO", FmlField.TYPE_INTEGER, -1, null, 55, 100);
        this.fmlBuffer[56] = new FmlField("SOC_DATE", FmlField.TYPE_STRING, 9, null, 56, 100);
        this.fmlBuffer[57] = new FmlField("SERVICE_TYPE", FmlField.TYPE_BYTE, -1, null, 57, 100);
        this.fmlBuffer[58] = new FmlField("SERVICE_FTR_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 58, 100);
        this.fmlBuffer[59] = new FmlField("TOLL_RS_CODE", FmlField.TYPE_STRING, 10, null, 59, 100);
        this.fmlBuffer[60] = new FmlField("SOURCE_APPL_CODE", FmlField.TYPE_BYTE, -1, null, 60, 100);
        this.fmlBuffer[61] = new FmlField("ASGN_TO_BILL_APPL_CD", FmlField.TYPE_BYTE, -1, null, 61, 100);
        this.fmlBuffer[62] = new FmlField("INV_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 62, 100);
        this.fmlBuffer[63] = new FmlField("VAT_AMT", FmlField.TYPE_DOUBLE, -1, null, 63, 100);
        this.fmlBuffer[64] = new FmlField("VAT_EXMP_AMT", FmlField.TYPE_DOUBLE, -1, null, 64, 100);
        this.fmlBuffer[65] = new FmlField("TAX_CODE", FmlField.TYPE_BYTE, -1, null, 65, 100);
        this.fmlBuffer[66] = new FmlField("VAT_PERCENT_RATE", FmlField.TYPE_DOUBLE, -1, null, 66, 100);
        this.fmlBuffer[67] = new FmlField("VAT_EXMP_IND", FmlField.TYPE_BYTE, -1, null, 67, 100);
        this.fmlBuffer[68] = new FmlField("RC_FTR_PRE_PROR_AMT", FmlField.TYPE_DOUBLE, -1, null, 68, 100);
        this.fmlBuffer[69] = new FmlField("BEFORE_DISCNT_AMT", FmlField.TYPE_DOUBLE, -1, null, 69, 100);
        this.fmlBuffer[70] = new FmlField("DISCOUNT_AMT", FmlField.TYPE_DOUBLE, -1, null, 70, 100);
        this.fmlBuffer[71] = new FmlField("DISCOUNT_PCT", FmlField.TYPE_DOUBLE, -1, null, 71, 100);
        this.fmlBuffer[72] = new FmlField("DISCOUNT_CODE", FmlField.TYPE_STRING, 10, null, 72, 100);
        this.fmlBuffer[73] = new FmlField("CREDIT_LEVEL", FmlField.TYPE_BYTE, -1, null, 73, 100);
        this.fmlBuffer[74] = new FmlField("CRG_QUANTITY", FmlField.TYPE_SHORT, -1, null, 74, 100);
        this.fmlBuffer[75] = new FmlField("AU_ISSUE_CODE", FmlField.TYPE_STRING, 7, null, 75, 100);
        this.fmlBuffer[76] = new FmlField("AU_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 76, 100);
        this.fmlBuffer[77] = new FmlField("ACTION_DIRECTION_CD", FmlField.TYPE_BYTE, -1, null, 77, 100);
        this.fmlBuffer[78] = new FmlField("MANUAL_OVERRIDE_IND", FmlField.TYPE_BYTE, -1, null, 78, 100);
        this.fmlBuffer[79] = new FmlField("MEMO_ID", FmlField.TYPE_INTEGER, -1, null, 79, 100);
        this.fmlBuffer[80] = new FmlField("BL_IGNORE_IND", FmlField.TYPE_BYTE, -1, null, 80, 100);
        this.fmlBuffer[81] = new FmlField("CHARGE_TYPE", FmlField.TYPE_BYTE, -1, null, 81, 100);
        this.fmlBuffer[82] = new FmlField("UTC_DISCOUNT_TYPE", FmlField.TYPE_STRING, 3, null, 82, 100);
        this.fmlBuffer[83] = new FmlField("FRWD_FM_BILL_SEQ_NO", FmlField.TYPE_SHORT, -1, null, 83, 100);
        this.fmlBuffer[84] = new FmlField("CHG_GROUP_LEVEL", FmlField.TYPE_BYTE, -1, null, 84, 100);
        this.fmlBuffer[85] = new FmlField("CHG_GROUP_ID", FmlField.TYPE_INTEGER, -1, null, 85, 100);
        this.fmlBuffer[86] = new FmlField("CHARGE_HIST_IND", FmlField.TYPE_BYTE, -1, null, 86, 100);
        this.fmlBuffer[87] = new FmlField("UTC_FROM_TO_BAN", FmlField.TYPE_INTEGER, -1, null, 87, 100);
        this.fmlBuffer[88] = new FmlField("UTC_FROM_SUBSCRIBER", FmlField.TYPE_STRING, 21, null, 88, 100);
        this.fmlBuffer[89] = new FmlField("BILL_PROD_GRP", FmlField.TYPE_STRING, 3, null, 89, 100);
        this.fmlBuffer[90] = new FmlField("UTC_IND", FmlField.TYPE_BYTE, -1, null, 90, 100);
        this.fmlBuffer[91] = new FmlField("ORIG_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 91, 100);
        this.fmlBuffer[92] = new FmlField("CHANNEL_SEIZURE_DT", FmlField.TYPE_STRING, 15, null, 92, 100);
        this.fmlBuffer[93] = new FmlField("MESSAGE_SWITCH_ID", FmlField.TYPE_STRING, 8, null, 93, 100);
        this.fmlBuffer[94] = new FmlField("MESSAGE_IDENTIFIER", FmlField.TYPE_STRING, 25, null, 94, 100);
        this.fmlBuffer[95] = new FmlField("NO_OF_INSTALL_FROM", FmlField.TYPE_SHORT, -1, null, 95, 100);
        this.fmlBuffer[96] = new FmlField("NO_OF_INSTALL_TO", FmlField.TYPE_SHORT, -1, null, 96, 100);
        this.fmlBuffer[97] = new FmlField("TOTAL_NO_OF_INSTALL", FmlField.TYPE_SHORT, -1, null, 97, 100);
        this.fmlBuffer[98] = new FmlField("RMS_INV_STORE_ID", FmlField.TYPE_STRING, 5, null, 98, 100);
        this.fmlBuffer[99] = new FmlField("RMS_INV_ID", FmlField.TYPE_INTEGER, -1, null, 99, 100);
        this.fmlBuffer[100] = new FmlField("RMS_INV_LINE_SEQ", FmlField.TYPE_SHORT, -1, null, 100, 100);
        this.fmlBuffer[101] = new FmlField("RMS_INV_SUBLN_SEQ", FmlField.TYPE_SHORT, -1, null, 101, 100);
        this.fmlBuffer[102] = new FmlField("RMS_INV_ACTV_TYPE", FmlField.TYPE_BYTE, -1, null, 102, 100);
        this.fmlBuffer[103] = new FmlField("BILL_COMMENT", FmlField.TYPE_STRING, 501, null, 103, 100);
        this.fmlBuffer[104] = new FmlField("CONV_RUN_NO", FmlField.TYPE_SHORT, -1, null, 104, 100);
        this.fmlBuffer[105] = new FmlField("ADJ_MSG_BILL_SEQ_NO", FmlField.TYPE_SHORT, -1, null, 105, 100);
        this.fmlBuffer[106] = new FmlField("DESIGNATED_INV", FmlField.TYPE_STRING, 14, null, 106, 100);
        this.fmlBuffer[107] = new FmlField("DESIGNATED_ITEM", FmlField.TYPE_INTEGER, -1, null, 107, 100);
        this.fmlBuffer[108] = new FmlField("BILL_RELEVANCE_IND", FmlField.TYPE_BYTE, -1, null, 108, 100);
        this.fmlBuffer[109] = new FmlField("NUM_OF_DAYS_PYM_LATE", FmlField.TYPE_SHORT, -1, null, 109, 100);
        this.fmlBuffer[110] = new FmlField("PERCENTAGE_RATE", FmlField.TYPE_DOUBLE, -1, null, 110, 100);
        this.fmlBuffer[111] = new FmlField("BILL_NUM_FOR_LATE_PYM", FmlField.TYPE_STRING, 14, null, 111, 100);
        this.fmlBuffer[112] = new FmlField("ORIG_OPER_ID", FmlField.TYPE_INTEGER, -1, null, 112, 100);
        this.fmlBuffer[113] = new FmlField("DISC_UTC_AMT", FmlField.TYPE_DOUBLE, -1, null, 113, 100);
        this.fmlBuffer[114] = new FmlField("DISC_UTC_VAT", FmlField.TYPE_DOUBLE, -1, null, 114, 100);
        this.fmlBuffer[115] = new FmlField("CHRG_AMT_PRD_1", FmlField.TYPE_DOUBLE, -1, null, 115, 100);
        this.fmlBuffer[116] = new FmlField("CHRG_AMT_PRD_2", FmlField.TYPE_DOUBLE, -1, null, 116, 100);
        this.fmlBuffer[117] = new FmlField("MATCH_TIER_LEVEL", FmlField.TYPE_SHORT, -1, null, 117, 100);
        this.fmlBuffer[118] = new FmlField("TO_PRINT", FmlField.TYPE_BYTE, -1, null, 118, 1);
        this.fmlBuffer[119] = new FmlField("PADJINPINDBILL_COMMENT", FmlField.TYPE_STRING, 501, null, 119, 1);
        this.fmlBuffer[120] = new FmlField("ACT_CODE", FmlField.TYPE_STRING, 4, null, 120, 1);
        this.fmlBuffer[121] = new FmlField("ACT_REASON", FmlField.TYPE_STRING, 5, null, 121, 1);
        this.fmlBuffer[122] = new FmlField("SUSP_RC_RATE_TYPE", FmlField.TYPE_BYTE, -1, null, 122, 1);
        this.fmlBuffer[123] = new FmlField("MEMO_CTN", FmlField.TYPE_STRING, 21, null, 123, 1);
        this.fmlBuffer[124] = new FmlField("USER_TEXT", FmlField.TYPE_STRING, 2001, null, 124, 1);
        this.fmlBuffer[125] = new FmlField("MEMO_SOURCE", FmlField.TYPE_BYTE, -1, null, 125, 1);
        this.fmlBuffer[126] = new FmlField("PARAM_COUNT", FmlField.TYPE_INTEGER, -1, null, 126, 1);
        this.fmlBuffer[127] = new FmlField("P1", FmlField.TYPE_STRING, 21, null, 127, 1);
        this.fmlBuffer[128] = new FmlField("P2", FmlField.TYPE_STRING, 21, null, 128, 1);
        this.fmlBuffer[129] = new FmlField("P3", FmlField.TYPE_STRING, 21, null, 129, 1);
        this.fmlBuffer[130] = new FmlField("P4", FmlField.TYPE_STRING, 21, null, 130, 1);
        this.fmlBuffer[131] = new FmlField("P5", FmlField.TYPE_STRING, 21, null, 131, 1);
        this.fmlBuffer[132] = new FmlField("P6", FmlField.TYPE_STRING, 21, null, 132, 1);
        this.fmlBuffer[133] = new FmlField("P7", FmlField.TYPE_STRING, 21, null, 133, 1);
        this.fmlBuffer[134] = new FmlField("P8", FmlField.TYPE_STRING, 21, null, 134, 1);
        this.fmlBuffer[135] = new FmlField("P9", FmlField.TYPE_STRING, 21, null, 135, 1);
        this.fmlBuffer[136] = new FmlField("P10", FmlField.TYPE_STRING, 21, null, 136, 1);
        this.fmlBuffer[137] = new FmlField("MEMO_AMT", FmlField.TYPE_DOUBLE, -1, null, 137, 1);
        this.fmlBuffer[138] = new FmlField("RMS_ACT_CODE", FmlField.TYPE_STRING, 5, null, 138, 1);
        this.fmlBuffer[139] = new FmlField("CHARGE_AMT", FmlField.TYPE_DOUBLE, -1, null, 139, 1);
        this.fmlBuffer[140] = new FmlField("CHARGE_AMT_IND", FmlField.TYPE_BYTE, -1, null, 140, 1);
        this.fmlBuffer[141] = new FmlField("WAIVE_REASON", FmlField.TYPE_STRING, 7, null, 141, 1);
        this.fmlBuffer[142] = new FmlField("WAIVE_IND", FmlField.TYPE_BYTE, -1, null, 142, 1);
    }

    /**
     * Retrieves the value of the 'GENERATION' field in the FML buffer.
     *
     * @return Value of 'GENERATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GENERATION() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[0].getValue(0));
    }

    /**
     * Sets the value of the 'GENERATION' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_GENERATION(Integer value) throws FMLManipulationException {
        this.fmlBuffer[0].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[1].getValue(0));
    }

    /**
     * Sets the value of the 'DIRECTIVE' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getTuxedoDirective().
     * @throws FMLManipulationException
     */
    public void set_DIRECTIVE(Integer value) throws FMLManipulationException {
        this.fmlBuffer[1].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'FIRST_DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'FIRST_DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_FIRST_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[2].getValue(0));
    }

    /**
     * Sets the value of the 'FIRST_DIRECTIVE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_FIRST_DIRECTIVE(Integer value) throws FMLManipulationException {
        this.fmlBuffer[2].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'SECOND_DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'SECOND_DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SECOND_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[3].getValue(0));
    }

    /**
     * Sets the value of the 'SECOND_DIRECTIVE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_SECOND_DIRECTIVE(Integer value) throws FMLManipulationException {
        this.fmlBuffer[3].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'OPERATOR_ID' field in the FML buffer.
     *
     * @return Value of 'OPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_OPERATOR_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[4].getValue(0));
    }

    /**
     * Sets the value of the 'OPERATOR_ID' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getDefaultFokusOperatorId().
     * @throws FMLManipulationException
     */
    public void set_OPERATOR_ID(Integer value) throws FMLManipulationException {
        this.fmlBuffer[4].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'APPLICATION_ID' field in the FML buffer.
     *
     * @return Value of 'APPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_APPLICATION_ID() throws FMLManipulationException {
        return ((String) this.fmlBuffer[5].getValue(0));
    }

    /**
     * Sets the value of the 'APPLICATION_ID' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getApplicationId(), Maximum length: 7.
     * @throws FMLManipulationException
     */
    public void set_APPLICATION_ID(String value) throws FMLManipulationException {
        this.fmlBuffer[5].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'TRANSACTION_MODE' field in the FML buffer.
     *
     * @return Value of 'TRANSACTION_MODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TRANSACTION_MODE() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[6].getValue(0)));
    }

    /**
     * Sets the value of the 'TRANSACTION_MODE' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getTuxedoTransactionMode().
     * @throws FMLManipulationException
     */
    public void set_TRANSACTION_MODE(String value) throws FMLManipulationException {
        this.fmlBuffer[6].setValue(0, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves the value of the 'RUN_DATE' field in the FML buffer.
     *
     * @return Value of 'RUN_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RUN_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[7].getValue(0));
    }

    /**
     * Sets the value of the 'RUN_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 9.
     * @throws FMLManipulationException
     */
    public void set_RUN_DATE(String value) throws FMLManipulationException {
        this.fmlBuffer[7].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'MARKET_CODE' field in the FML buffer.
     *
     * @return Value of 'MARKET_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MARKET_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[8].getValue(0));
    }

    /**
     * Sets the value of the 'MARKET_CODE' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getDefaultMarket(), Maximum length: 4.
     * @throws FMLManipulationException
     */
    public void set_MARKET_CODE(String value) throws FMLManipulationException {
        this.fmlBuffer[8].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'SVC_STATUS' field in the FML buffer.
     *
     * @return Value of 'SVC_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SVC_STATUS() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[9].getValue(0)));
    }

    /**
     * Sets the value of the 'SVC_STATUS' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_SVC_STATUS(String value) throws FMLManipulationException {
        this.fmlBuffer[9].setValue(0, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves the value of the 'LAST_UPDATE_DATE' field in the FML buffer.
     *
     * @return Value of 'LAST_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LAST_UPDATE_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[10].getValue(0));
    }

    /**
     * Sets the value of the 'LAST_UPDATE_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 15.
     * @throws FMLManipulationException
     */
    public void set_LAST_UPDATE_DATE(String value) throws FMLManipulationException {
        this.fmlBuffer[10].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'LAST_UPDATE_STAMP' field in the FML buffer.
     *
     * @return Value of 'LAST_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_LAST_UPDATE_STAMP() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[11].getValue(0)));
    }

    /**
     * Sets the value of the 'LAST_UPDATE_STAMP' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_LAST_UPDATE_STAMP(Integer value) throws FMLManipulationException {
        this.fmlBuffer[11].setValue(0, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves the value of the 'ENV_CODE' field in the FML buffer.
     *
     * @return Value of 'ENV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ENV_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[12].getValue(0));
    }

    /**
     * Sets the value of the 'ENV_CODE' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getFokusEnvironmentCode(), Maximum length: 11.
     * @throws FMLManipulationException
     */
    public void set_ENV_CODE(String value) throws FMLManipulationException {
        this.fmlBuffer[12].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'SESSION_ID' field in the FML buffer.
     *
     * @return Value of 'SESSION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SESSION_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[13].getValue(0));
    }

    /**
     * Sets the value of the 'SESSION_ID' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getTuxedoSessionId().
     * @throws FMLManipulationException
     */
    public void set_SESSION_ID(Integer value) throws FMLManipulationException {
        this.fmlBuffer[13].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'ONLINE_TRX_NO' field in the FML buffer.
     *
     * @return Value of 'ONLINE_TRX_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ONLINE_TRX_NO() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[14].getValue(0));
    }

    /**
     * Sets the value of the 'ONLINE_TRX_NO' field in the FML buffer.
     *
     * @param value Default value: :NinjaConfigurationReferenceTable.getTuxedoOnlineTrxNo().
     * @throws FMLManipulationException
     */
    public void set_ONLINE_TRX_NO(Integer value) throws FMLManipulationException {
        this.fmlBuffer[14].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'GROUP_TRX_ID' field in the FML buffer.
     *
     * @return Value of 'GROUP_TRX_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GROUP_TRX_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[15].getValue(0));
    }

    /**
     * Sets the value of the 'GROUP_TRX_ID' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_GROUP_TRX_ID(Integer value) throws FMLManipulationException {
        this.fmlBuffer[15].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'ROWCOUNT' field in the FML buffer.
     *
     * @return Value of 'ROWCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROWCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[16].getValue(0));
    }

    /**
     * Sets the value of the 'ROWCOUNT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_ROWCOUNT(Integer value) throws FMLManipulationException {
        this.fmlBuffer[16].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'ROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[17].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ROWID' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 19.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ROWID(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[17].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[17].getCount());
    }

    /**
     * Retrieves the value of the 'ROOT_BAN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ROOT_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROOT_BAN(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[18].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ROOT_BAN' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ROOT_BAN(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[18].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ROOT_BAN' field in the FML buffer.
     *
     * @return Number of values defined for 'ROOT_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ROOT_BAN_size() throws FMLManipulationException {
        return (this.fmlBuffer[18].getCount());
    }

    /**
     * Retrieves the value of the 'BAN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_BAN(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[19].getValue(nIndex));
    }

    /**
     * Sets the value of the 'BAN' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_BAN(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[19].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'BAN' field in the FML buffer.
     *
     * @return Number of values defined for 'BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BAN_size() throws FMLManipulationException {
        return (this.fmlBuffer[19].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_BILL_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ACTV_BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ACTV_BILL_SEQ_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[20].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'ACTV_BILL_SEQ_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ACTV_BILL_SEQ_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[20].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'ACTV_BILL_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_BILL_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[20].getCount());
    }

    /**
     * Retrieves the value of the 'ENT_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ENT_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ENT_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[21].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ENT_SEQ_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ENT_SEQ_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[21].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ENT_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ENT_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ENT_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[21].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ACTV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ACTV_SEQ_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[22].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'ACTV_SEQ_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ACTV_SEQ_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[22].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'ACTV_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[22].getCount());
    }

    /**
     * Retrieves the value of the 'SYS_CREATION_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'SYS_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SYS_CREATION_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[23].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SYS_CREATION_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 15.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_SYS_CREATION_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[23].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SYS_CREATION_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SYS_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SYS_CREATION_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[23].getCount());
    }

    /**
     * Retrieves the value of the 'SYS_UPDATE_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'SYS_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SYS_UPDATE_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[24].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SYS_UPDATE_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 15.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_SYS_UPDATE_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[24].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SYS_UPDATE_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SYS_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SYS_UPDATE_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[24].getCount());
    }

    /**
     * Retrieves the value of the 'PARMULTCRARRAYOPERATOR_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'PARMULTCRARRAYOPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_PARMULTCRARRAYOPERATOR_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[25].getValue(nIndex));
    }

    /**
     * Sets the value of the 'PARMULTCRARRAYOPERATOR_ID' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_PARMULTCRARRAYOPERATOR_ID(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[25].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'PARMULTCRARRAYOPERATOR_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'PARMULTCRARRAYOPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PARMULTCRARRAYOPERATOR_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[25].getCount());
    }

    /**
     * Retrieves the value of the 'PARMULTCRARRAYAPPLICATION_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'PARMULTCRARRAYAPPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PARMULTCRARRAYAPPLICATION_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[26].getValue(nIndex));
    }

    /**
     * Sets the value of the 'PARMULTCRARRAYAPPLICATION_ID' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 7.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_PARMULTCRARRAYAPPLICATION_ID(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[26].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'PARMULTCRARRAYAPPLICATION_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'PARMULTCRARRAYAPPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PARMULTCRARRAYAPPLICATION_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[26].getCount());
    }

    /**
     * Retrieves the value of the 'DL_SERVICE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'DL_SERVICE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DL_SERVICE_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[27].getValue(nIndex));
    }

    /**
     * Sets the value of the 'DL_SERVICE_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 6.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_DL_SERVICE_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[27].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'DL_SERVICE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'DL_SERVICE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DL_SERVICE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[27].getCount());
    }

    /**
     * Retrieves the value of the 'DL_UPDATE_STAMP' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'DL_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DL_UPDATE_STAMP(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[28].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'DL_UPDATE_STAMP' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_DL_UPDATE_STAMP(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[28].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'DL_UPDATE_STAMP' field in the FML buffer.
     *
     * @return Number of values defined for 'DL_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DL_UPDATE_STAMP_size() throws FMLManipulationException {
        return (this.fmlBuffer[28].getCount());
    }

    /**
     * Retrieves the value of the 'VOUCHER_NUM' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'VOUCHER_NUM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_VOUCHER_NUM(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[29].getValue(nIndex));
    }

    /**
     * Sets the value of the 'VOUCHER_NUM' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 14.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_VOUCHER_NUM(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[29].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'VOUCHER_NUM' field in the FML buffer.
     *
     * @return Number of values defined for 'VOUCHER_NUM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_VOUCHER_NUM_size() throws FMLManipulationException {
        return (this.fmlBuffer[29].getCount());
    }

    /**
     * Retrieves the value of the 'SUBSCRIBER_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'SUBSCRIBER_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SUBSCRIBER_NO(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[30].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SUBSCRIBER_NO' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_SUBSCRIBER_NO(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[30].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SUBSCRIBER_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'SUBSCRIBER_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SUBSCRIBER_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[30].getCount());
    }

    /**
     * Retrieves the value of the 'DEPARTMENT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'DEPARTMENT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DEPARTMENT(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[31].getValue(nIndex));
    }

    /**
     * Sets the value of the 'DEPARTMENT' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 5.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_DEPARTMENT(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[31].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'DEPARTMENT' field in the FML buffer.
     *
     * @return Number of values defined for 'DEPARTMENT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DEPARTMENT_size() throws FMLManipulationException {
        return (this.fmlBuffer[31].getCount());
    }

    /**
     * Retrieves the value of the 'ORG_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ORG_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ORG_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[32].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ORG_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 6.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ORG_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[32].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ORG_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'ORG_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ORG_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[32].getCount());
    }

    /**
     * Retrieves the value of the 'PRODUCT_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'PRODUCT_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PRODUCT_TYPE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[33].getValue(nIndex));
    }

    /**
     * Sets the value of the 'PRODUCT_TYPE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 4.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_PRODUCT_TYPE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[33].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'PRODUCT_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'PRODUCT_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PRODUCT_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[33].getCount());
    }

    /**
     * Retrieves the value of the 'SUB_MARKET_CD' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'SUB_MARKET_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SUB_MARKET_CD(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[34].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SUB_MARKET_CD' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 4.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_SUB_MARKET_CD(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[34].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SUB_MARKET_CD' field in the FML buffer.
     *
     * @return Number of values defined for 'SUB_MARKET_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SUB_MARKET_CD_size() throws FMLManipulationException {
        return (this.fmlBuffer[34].getCount());
    }

    /**
     * Retrieves the value of the 'PRIOD_CVRG_ST_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'PRIOD_CVRG_ST_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PRIOD_CVRG_ST_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[35].getValue(nIndex));
    }

    /**
     * Sets the value of the 'PRIOD_CVRG_ST_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 9.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_PRIOD_CVRG_ST_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[35].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'PRIOD_CVRG_ST_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'PRIOD_CVRG_ST_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PRIOD_CVRG_ST_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[35].getCount());
    }

    /**
     * Retrieves the value of the 'PRIOD_CVRG_ND_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'PRIOD_CVRG_ND_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PRIOD_CVRG_ND_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[36].getValue(nIndex));
    }

    /**
     * Sets the value of the 'PRIOD_CVRG_ND_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 9.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_PRIOD_CVRG_ND_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[36].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'PRIOD_CVRG_ND_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'PRIOD_CVRG_ND_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PRIOD_CVRG_ND_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[36].getCount());
    }

    /**
     * Retrieves the value of the 'CHG_CREATION_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'CHG_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CHG_CREATION_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[37].getValue(nIndex));
    }

    /**
     * Sets the value of the 'CHG_CREATION_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 9.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_CHG_CREATION_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[37].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'CHG_CREATION_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'CHG_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CHG_CREATION_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[37].getCount());
    }

    /**
     * Retrieves the value of the 'EFFECTIVE_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'EFFECTIVE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_EFFECTIVE_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[38].getValue(nIndex));
    }

    /**
     * Sets the value of the 'EFFECTIVE_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 9.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_EFFECTIVE_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[38].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'EFFECTIVE_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'EFFECTIVE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_EFFECTIVE_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[38].getCount());
    }

    /**
     * Retrieves the value of the 'FINANCE_EFF_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'FINANCE_EFF_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FINANCE_EFF_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[39].getValue(nIndex));
    }

    /**
     * Sets the value of the 'FINANCE_EFF_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 9.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_FINANCE_EFF_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[39].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'FINANCE_EFF_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'FINANCE_EFF_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FINANCE_EFF_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[39].getCount());
    }

    /**
     * Retrieves the value of the 'LAST_RG_RC_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'LAST_RG_RC_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LAST_RG_RC_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[40].getValue(nIndex));
    }

    /**
     * Sets the value of the 'LAST_RG_RC_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 9.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_LAST_RG_RC_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[40].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'LAST_RG_RC_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'LAST_RG_RC_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LAST_RG_RC_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[40].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ACTV_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACTV_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[41].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ACTV_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 9.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ACTV_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[41].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ACTV_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[41].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ACTV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACTV_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[42].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ACTV_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 5.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ACTV_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[42].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ACTV_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[42].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_REASON_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ACTV_REASON_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACTV_REASON_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[43].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ACTV_REASON_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 7.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ACTV_REASON_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[43].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ACTV_REASON_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_REASON_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_REASON_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[43].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ACTV_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_ACTV_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[44].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ACTV_AMT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ACTV_AMT(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[44].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ACTV_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[44].getCount());
    }

    /**
     * Retrieves the value of the 'DURATION' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'DURATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_DURATION(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[45].getValue(nIndex));
    }

    /**
     * Sets the value of the 'DURATION' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_DURATION(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[45].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'DURATION' field in the FML buffer.
     *
     * @return Number of values defined for 'DURATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DURATION_size() throws FMLManipulationException {
        return (this.fmlBuffer[45].getCount());
    }

    /**
     * Retrieves the value of the 'NUM_OF_CALLS' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'NUM_OF_CALLS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_NUM_OF_CALLS(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[46].getValue(nIndex));
    }

    /**
     * Sets the value of the 'NUM_OF_CALLS' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_NUM_OF_CALLS(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[46].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'NUM_OF_CALLS' field in the FML buffer.
     *
     * @return Number of values defined for 'NUM_OF_CALLS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_NUM_OF_CALLS_size() throws FMLManipulationException {
        return (this.fmlBuffer[46].getCount());
    }

    /**
     * Retrieves the value of the 'FEATURE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'FEATURE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FEATURE_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[47].getValue(nIndex));
    }

    /**
     * Sets the value of the 'FEATURE_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 7.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_FEATURE_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[47].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'FEATURE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'FEATURE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FEATURE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[47].getCount());
    }

    /**
     * Retrieves the value of the 'FTR_REVENUE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'FTR_REVENUE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FTR_REVENUE_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[48].getValue(nIndex));
    }

    /**
     * Sets the value of the 'FTR_REVENUE_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 4.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_FTR_REVENUE_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[48].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'FTR_REVENUE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'FTR_REVENUE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FTR_REVENUE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[48].getCount());
    }

    /**
     * Retrieves the value of the 'FEATURE_CATEGORY' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'FEATURE_CATEGORY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FEATURE_CATEGORY(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[49].getValue(nIndex));
    }

    /**
     * Sets the value of the 'FEATURE_CATEGORY' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 5.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_FEATURE_CATEGORY(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[49].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'FEATURE_CATEGORY' field in the FML buffer.
     *
     * @return Number of values defined for 'FEATURE_CATEGORY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FEATURE_CATEGORY_size() throws FMLManipulationException {
        return (this.fmlBuffer[49].getCount());
    }

    /**
     * Retrieves the value of the 'SECONDARY_FEATURE_CD' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'SECONDARY_FEATURE_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SECONDARY_FEATURE_CD(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[50].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SECONDARY_FEATURE_CD' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 7.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_SECONDARY_FEATURE_CD(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[50].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SECONDARY_FEATURE_CD' field in the FML buffer.
     *
     * @return Number of values defined for 'SECONDARY_FEATURE_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SECONDARY_FEATURE_CD_size() throws FMLManipulationException {
        return (this.fmlBuffer[50].getCount());
    }

    /**
     * Retrieves the value of the 'AU_RATING_SCHEME_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'AU_RATING_SCHEME_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_AU_RATING_SCHEME_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[51].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'AU_RATING_SCHEME_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_AU_RATING_SCHEME_IND(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[51].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'AU_RATING_SCHEME_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'AU_RATING_SCHEME_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_AU_RATING_SCHEME_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[51].getCount());
    }

    /**
     * Retrieves the value of the 'BALANCE_IMPACT_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'BALANCE_IMPACT_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BALANCE_IMPACT_CODE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[52].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'BALANCE_IMPACT_CODE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_BALANCE_IMPACT_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[52].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'BALANCE_IMPACT_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'BALANCE_IMPACT_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BALANCE_IMPACT_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[52].getCount());
    }

    /**
     * Retrieves the value of the 'SOC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'SOC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SOC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[53].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SOC' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 10.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_SOC(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[53].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SOC' field in the FML buffer.
     *
     * @return Number of values defined for 'SOC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SOC_size() throws FMLManipulationException {
        return (this.fmlBuffer[53].getCount());
    }

    /**
     * Retrieves the value of the 'SOC_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'SOC_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SOC_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[54].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SOC_SEQ_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_SOC_SEQ_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[54].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SOC_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'SOC_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SOC_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[54].getCount());
    }

    /**
     * Retrieves the value of the 'SOC_VER_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'SOC_VER_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SOC_VER_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[55].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SOC_VER_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_SOC_VER_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[55].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SOC_VER_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'SOC_VER_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SOC_VER_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[55].getCount());
    }

    /**
     * Retrieves the value of the 'SOC_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'SOC_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SOC_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[56].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SOC_DATE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 9.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_SOC_DATE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[56].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SOC_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SOC_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SOC_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[56].getCount());
    }

    /**
     * Retrieves the value of the 'SERVICE_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'SERVICE_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SERVICE_TYPE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[57].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'SERVICE_TYPE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_SERVICE_TYPE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[57].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'SERVICE_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'SERVICE_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SERVICE_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[57].getCount());
    }

    /**
     * Retrieves the value of the 'SERVICE_FTR_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'SERVICE_FTR_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SERVICE_FTR_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[58].getValue(nIndex));
    }

    /**
     * Sets the value of the 'SERVICE_FTR_SEQ_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_SERVICE_FTR_SEQ_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[58].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'SERVICE_FTR_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'SERVICE_FTR_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SERVICE_FTR_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[58].getCount());
    }

    /**
     * Retrieves the value of the 'TOLL_RS_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'TOLL_RS_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TOLL_RS_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[59].getValue(nIndex));
    }

    /**
     * Sets the value of the 'TOLL_RS_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 10.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_TOLL_RS_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[59].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'TOLL_RS_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'TOLL_RS_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TOLL_RS_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[59].getCount());
    }

    /**
     * Retrieves the value of the 'SOURCE_APPL_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'SOURCE_APPL_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SOURCE_APPL_CODE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[60].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'SOURCE_APPL_CODE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_SOURCE_APPL_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[60].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'SOURCE_APPL_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'SOURCE_APPL_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SOURCE_APPL_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[60].getCount());
    }

    /**
     * Retrieves the value of the 'ASGN_TO_BILL_APPL_CD' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ASGN_TO_BILL_APPL_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ASGN_TO_BILL_APPL_CD(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[61].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'ASGN_TO_BILL_APPL_CD' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ASGN_TO_BILL_APPL_CD(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[61].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'ASGN_TO_BILL_APPL_CD' field in the FML buffer.
     *
     * @return Number of values defined for 'ASGN_TO_BILL_APPL_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ASGN_TO_BILL_APPL_CD_size() throws FMLManipulationException {
        return (this.fmlBuffer[61].getCount());
    }

    /**
     * Retrieves the value of the 'INV_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'INV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_INV_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[62].getValue(nIndex));
    }

    /**
     * Sets the value of the 'INV_SEQ_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_INV_SEQ_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[62].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'INV_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'INV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INV_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[62].getCount());
    }

    /**
     * Retrieves the value of the 'VAT_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'VAT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_VAT_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[63].getValue(nIndex));
    }

    /**
     * Sets the value of the 'VAT_AMT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_VAT_AMT(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[63].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'VAT_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'VAT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_VAT_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[63].getCount());
    }

    /**
     * Retrieves the value of the 'VAT_EXMP_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'VAT_EXMP_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_VAT_EXMP_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[64].getValue(nIndex));
    }

    /**
     * Sets the value of the 'VAT_EXMP_AMT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_VAT_EXMP_AMT(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[64].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'VAT_EXMP_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'VAT_EXMP_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_VAT_EXMP_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[64].getCount());
    }

    /**
     * Retrieves the value of the 'TAX_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'TAX_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TAX_CODE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[65].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'TAX_CODE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_TAX_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[65].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'TAX_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'TAX_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TAX_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[65].getCount());
    }

    /**
     * Retrieves the value of the 'VAT_PERCENT_RATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'VAT_PERCENT_RATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_VAT_PERCENT_RATE(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[66].getValue(nIndex));
    }

    /**
     * Sets the value of the 'VAT_PERCENT_RATE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_VAT_PERCENT_RATE(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[66].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'VAT_PERCENT_RATE' field in the FML buffer.
     *
     * @return Number of values defined for 'VAT_PERCENT_RATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_VAT_PERCENT_RATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[66].getCount());
    }

    /**
     * Retrieves the value of the 'VAT_EXMP_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'VAT_EXMP_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_VAT_EXMP_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[67].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'VAT_EXMP_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_VAT_EXMP_IND(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[67].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'VAT_EXMP_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'VAT_EXMP_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_VAT_EXMP_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[67].getCount());
    }

    /**
     * Retrieves the value of the 'RC_FTR_PRE_PROR_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'RC_FTR_PRE_PROR_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_RC_FTR_PRE_PROR_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[68].getValue(nIndex));
    }

    /**
     * Sets the value of the 'RC_FTR_PRE_PROR_AMT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_RC_FTR_PRE_PROR_AMT(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[68].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'RC_FTR_PRE_PROR_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'RC_FTR_PRE_PROR_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RC_FTR_PRE_PROR_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[68].getCount());
    }

    /**
     * Retrieves the value of the 'BEFORE_DISCNT_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'BEFORE_DISCNT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_BEFORE_DISCNT_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[69].getValue(nIndex));
    }

    /**
     * Sets the value of the 'BEFORE_DISCNT_AMT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_BEFORE_DISCNT_AMT(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[69].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'BEFORE_DISCNT_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'BEFORE_DISCNT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BEFORE_DISCNT_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[69].getCount());
    }

    /**
     * Retrieves the value of the 'DISCOUNT_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'DISCOUNT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_DISCOUNT_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[70].getValue(nIndex));
    }

    /**
     * Sets the value of the 'DISCOUNT_AMT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_DISCOUNT_AMT(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[70].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'DISCOUNT_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'DISCOUNT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DISCOUNT_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[70].getCount());
    }

    /**
     * Retrieves the value of the 'DISCOUNT_PCT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'DISCOUNT_PCT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_DISCOUNT_PCT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[71].getValue(nIndex));
    }

    /**
     * Sets the value of the 'DISCOUNT_PCT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_DISCOUNT_PCT(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[71].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'DISCOUNT_PCT' field in the FML buffer.
     *
     * @return Number of values defined for 'DISCOUNT_PCT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DISCOUNT_PCT_size() throws FMLManipulationException {
        return (this.fmlBuffer[71].getCount());
    }

    /**
     * Retrieves the value of the 'DISCOUNT_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'DISCOUNT_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DISCOUNT_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[72].getValue(nIndex));
    }

    /**
     * Sets the value of the 'DISCOUNT_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 10.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_DISCOUNT_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[72].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'DISCOUNT_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'DISCOUNT_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DISCOUNT_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[72].getCount());
    }

    /**
     * Retrieves the value of the 'CREDIT_LEVEL' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'CREDIT_LEVEL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CREDIT_LEVEL(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[73].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'CREDIT_LEVEL' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_CREDIT_LEVEL(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[73].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'CREDIT_LEVEL' field in the FML buffer.
     *
     * @return Number of values defined for 'CREDIT_LEVEL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CREDIT_LEVEL_size() throws FMLManipulationException {
        return (this.fmlBuffer[73].getCount());
    }

    /**
     * Retrieves the value of the 'CRG_QUANTITY' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'CRG_QUANTITY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_CRG_QUANTITY(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[74].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'CRG_QUANTITY' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_CRG_QUANTITY(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[74].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'CRG_QUANTITY' field in the FML buffer.
     *
     * @return Number of values defined for 'CRG_QUANTITY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CRG_QUANTITY_size() throws FMLManipulationException {
        return (this.fmlBuffer[74].getCount());
    }

    /**
     * Retrieves the value of the 'AU_ISSUE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'AU_ISSUE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_AU_ISSUE_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[75].getValue(nIndex));
    }

    /**
     * Sets the value of the 'AU_ISSUE_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 7.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_AU_ISSUE_CODE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[75].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'AU_ISSUE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'AU_ISSUE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_AU_ISSUE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[75].getCount());
    }

    /**
     * Retrieves the value of the 'AU_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'AU_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_AU_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[76].getValue(nIndex));
    }

    /**
     * Sets the value of the 'AU_SEQ_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_AU_SEQ_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[76].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'AU_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'AU_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_AU_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[76].getCount());
    }

    /**
     * Retrieves the value of the 'ACTION_DIRECTION_CD' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ACTION_DIRECTION_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACTION_DIRECTION_CD(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[77].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'ACTION_DIRECTION_CD' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ACTION_DIRECTION_CD(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[77].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'ACTION_DIRECTION_CD' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTION_DIRECTION_CD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTION_DIRECTION_CD_size() throws FMLManipulationException {
        return (this.fmlBuffer[77].getCount());
    }

    /**
     * Retrieves the value of the 'MANUAL_OVERRIDE_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'MANUAL_OVERRIDE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MANUAL_OVERRIDE_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[78].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'MANUAL_OVERRIDE_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_MANUAL_OVERRIDE_IND(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[78].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'MANUAL_OVERRIDE_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'MANUAL_OVERRIDE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MANUAL_OVERRIDE_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[78].getCount());
    }

    /**
     * Retrieves the value of the 'MEMO_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'MEMO_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_MEMO_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[79].getValue(nIndex));
    }

    /**
     * Sets the value of the 'MEMO_ID' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_MEMO_ID(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[79].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'MEMO_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'MEMO_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MEMO_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[79].getCount());
    }

    /**
     * Retrieves the value of the 'BL_IGNORE_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'BL_IGNORE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BL_IGNORE_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[80].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'BL_IGNORE_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_BL_IGNORE_IND(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[80].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'BL_IGNORE_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'BL_IGNORE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BL_IGNORE_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[80].getCount());
    }

    /**
     * Retrieves the value of the 'CHARGE_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'CHARGE_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CHARGE_TYPE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[81].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'CHARGE_TYPE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_CHARGE_TYPE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[81].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'CHARGE_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'CHARGE_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CHARGE_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[81].getCount());
    }

    /**
     * Retrieves the value of the 'UTC_DISCOUNT_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'UTC_DISCOUNT_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_UTC_DISCOUNT_TYPE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[82].getValue(nIndex));
    }

    /**
     * Sets the value of the 'UTC_DISCOUNT_TYPE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 3.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_UTC_DISCOUNT_TYPE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[82].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'UTC_DISCOUNT_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'UTC_DISCOUNT_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_UTC_DISCOUNT_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[82].getCount());
    }

    /**
     * Retrieves the value of the 'FRWD_FM_BILL_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'FRWD_FM_BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_FRWD_FM_BILL_SEQ_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[83].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'FRWD_FM_BILL_SEQ_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_FRWD_FM_BILL_SEQ_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[83].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'FRWD_FM_BILL_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'FRWD_FM_BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FRWD_FM_BILL_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[83].getCount());
    }

    /**
     * Retrieves the value of the 'CHG_GROUP_LEVEL' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'CHG_GROUP_LEVEL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CHG_GROUP_LEVEL(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[84].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'CHG_GROUP_LEVEL' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_CHG_GROUP_LEVEL(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[84].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'CHG_GROUP_LEVEL' field in the FML buffer.
     *
     * @return Number of values defined for 'CHG_GROUP_LEVEL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CHG_GROUP_LEVEL_size() throws FMLManipulationException {
        return (this.fmlBuffer[84].getCount());
    }

    /**
     * Retrieves the value of the 'CHG_GROUP_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'CHG_GROUP_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_CHG_GROUP_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[85].getValue(nIndex));
    }

    /**
     * Sets the value of the 'CHG_GROUP_ID' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_CHG_GROUP_ID(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[85].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'CHG_GROUP_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'CHG_GROUP_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CHG_GROUP_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[85].getCount());
    }

    /**
     * Retrieves the value of the 'CHARGE_HIST_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'CHARGE_HIST_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CHARGE_HIST_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[86].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'CHARGE_HIST_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_CHARGE_HIST_IND(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[86].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'CHARGE_HIST_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'CHARGE_HIST_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CHARGE_HIST_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[86].getCount());
    }

    /**
     * Retrieves the value of the 'UTC_FROM_TO_BAN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'UTC_FROM_TO_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_UTC_FROM_TO_BAN(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[87].getValue(nIndex));
    }

    /**
     * Sets the value of the 'UTC_FROM_TO_BAN' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_UTC_FROM_TO_BAN(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[87].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'UTC_FROM_TO_BAN' field in the FML buffer.
     *
     * @return Number of values defined for 'UTC_FROM_TO_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_UTC_FROM_TO_BAN_size() throws FMLManipulationException {
        return (this.fmlBuffer[87].getCount());
    }

    /**
     * Retrieves the value of the 'UTC_FROM_SUBSCRIBER' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'UTC_FROM_SUBSCRIBER' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_UTC_FROM_SUBSCRIBER(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[88].getValue(nIndex));
    }

    /**
     * Sets the value of the 'UTC_FROM_SUBSCRIBER' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_UTC_FROM_SUBSCRIBER(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[88].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'UTC_FROM_SUBSCRIBER' field in the FML buffer.
     *
     * @return Number of values defined for 'UTC_FROM_SUBSCRIBER' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_UTC_FROM_SUBSCRIBER_size() throws FMLManipulationException {
        return (this.fmlBuffer[88].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_PROD_GRP' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'BILL_PROD_GRP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_PROD_GRP(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[89].getValue(nIndex));
    }

    /**
     * Sets the value of the 'BILL_PROD_GRP' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 3.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_BILL_PROD_GRP(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[89].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'BILL_PROD_GRP' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_PROD_GRP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_PROD_GRP_size() throws FMLManipulationException {
        return (this.fmlBuffer[89].getCount());
    }

    /**
     * Retrieves the value of the 'UTC_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'UTC_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_UTC_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[90].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'UTC_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_UTC_IND(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[90].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'UTC_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'UTC_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_UTC_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[90].getCount());
    }

    /**
     * Retrieves the value of the 'ORIG_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ORIG_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ORIG_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[91].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ORIG_SEQ_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ORIG_SEQ_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[91].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ORIG_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ORIG_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ORIG_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[91].getCount());
    }

    /**
     * Retrieves the value of the 'CHANNEL_SEIZURE_DT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'CHANNEL_SEIZURE_DT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CHANNEL_SEIZURE_DT(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[92].getValue(nIndex));
    }

    /**
     * Sets the value of the 'CHANNEL_SEIZURE_DT' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 15.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_CHANNEL_SEIZURE_DT(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[92].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'CHANNEL_SEIZURE_DT' field in the FML buffer.
     *
     * @return Number of values defined for 'CHANNEL_SEIZURE_DT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CHANNEL_SEIZURE_DT_size() throws FMLManipulationException {
        return (this.fmlBuffer[92].getCount());
    }

    /**
     * Retrieves the value of the 'MESSAGE_SWITCH_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'MESSAGE_SWITCH_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MESSAGE_SWITCH_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[93].getValue(nIndex));
    }

    /**
     * Sets the value of the 'MESSAGE_SWITCH_ID' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 8.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_MESSAGE_SWITCH_ID(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[93].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'MESSAGE_SWITCH_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'MESSAGE_SWITCH_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MESSAGE_SWITCH_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[93].getCount());
    }

    /**
     * Retrieves the value of the 'MESSAGE_IDENTIFIER' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'MESSAGE_IDENTIFIER' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MESSAGE_IDENTIFIER(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[94].getValue(nIndex));
    }

    /**
     * Sets the value of the 'MESSAGE_IDENTIFIER' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 25.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_MESSAGE_IDENTIFIER(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[94].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'MESSAGE_IDENTIFIER' field in the FML buffer.
     *
     * @return Number of values defined for 'MESSAGE_IDENTIFIER' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MESSAGE_IDENTIFIER_size() throws FMLManipulationException {
        return (this.fmlBuffer[94].getCount());
    }

    /**
     * Retrieves the value of the 'NO_OF_INSTALL_FROM' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'NO_OF_INSTALL_FROM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_NO_OF_INSTALL_FROM(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[95].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'NO_OF_INSTALL_FROM' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_NO_OF_INSTALL_FROM(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[95].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'NO_OF_INSTALL_FROM' field in the FML buffer.
     *
     * @return Number of values defined for 'NO_OF_INSTALL_FROM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_NO_OF_INSTALL_FROM_size() throws FMLManipulationException {
        return (this.fmlBuffer[95].getCount());
    }

    /**
     * Retrieves the value of the 'NO_OF_INSTALL_TO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'NO_OF_INSTALL_TO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_NO_OF_INSTALL_TO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[96].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'NO_OF_INSTALL_TO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_NO_OF_INSTALL_TO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[96].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'NO_OF_INSTALL_TO' field in the FML buffer.
     *
     * @return Number of values defined for 'NO_OF_INSTALL_TO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_NO_OF_INSTALL_TO_size() throws FMLManipulationException {
        return (this.fmlBuffer[96].getCount());
    }

    /**
     * Retrieves the value of the 'TOTAL_NO_OF_INSTALL' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'TOTAL_NO_OF_INSTALL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_TOTAL_NO_OF_INSTALL(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[97].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'TOTAL_NO_OF_INSTALL' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_TOTAL_NO_OF_INSTALL(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[97].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'TOTAL_NO_OF_INSTALL' field in the FML buffer.
     *
     * @return Number of values defined for 'TOTAL_NO_OF_INSTALL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TOTAL_NO_OF_INSTALL_size() throws FMLManipulationException {
        return (this.fmlBuffer[97].getCount());
    }

    /**
     * Retrieves the value of the 'RMS_INV_STORE_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'RMS_INV_STORE_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RMS_INV_STORE_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[98].getValue(nIndex));
    }

    /**
     * Sets the value of the 'RMS_INV_STORE_ID' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 5.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_RMS_INV_STORE_ID(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[98].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'RMS_INV_STORE_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'RMS_INV_STORE_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RMS_INV_STORE_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[98].getCount());
    }

    /**
     * Retrieves the value of the 'RMS_INV_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'RMS_INV_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_RMS_INV_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[99].getValue(nIndex));
    }

    /**
     * Sets the value of the 'RMS_INV_ID' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_RMS_INV_ID(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[99].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'RMS_INV_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'RMS_INV_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RMS_INV_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[99].getCount());
    }

    /**
     * Retrieves the value of the 'RMS_INV_LINE_SEQ' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'RMS_INV_LINE_SEQ' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_RMS_INV_LINE_SEQ(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[100].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'RMS_INV_LINE_SEQ' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_RMS_INV_LINE_SEQ(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[100].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'RMS_INV_LINE_SEQ' field in the FML buffer.
     *
     * @return Number of values defined for 'RMS_INV_LINE_SEQ' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RMS_INV_LINE_SEQ_size() throws FMLManipulationException {
        return (this.fmlBuffer[100].getCount());
    }

    /**
     * Retrieves the value of the 'RMS_INV_SUBLN_SEQ' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'RMS_INV_SUBLN_SEQ' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_RMS_INV_SUBLN_SEQ(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[101].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'RMS_INV_SUBLN_SEQ' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_RMS_INV_SUBLN_SEQ(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[101].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'RMS_INV_SUBLN_SEQ' field in the FML buffer.
     *
     * @return Number of values defined for 'RMS_INV_SUBLN_SEQ' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RMS_INV_SUBLN_SEQ_size() throws FMLManipulationException {
        return (this.fmlBuffer[101].getCount());
    }

    /**
     * Retrieves the value of the 'RMS_INV_ACTV_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'RMS_INV_ACTV_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RMS_INV_ACTV_TYPE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[102].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'RMS_INV_ACTV_TYPE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_RMS_INV_ACTV_TYPE(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[102].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'RMS_INV_ACTV_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'RMS_INV_ACTV_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RMS_INV_ACTV_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[102].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_COMMENT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'BILL_COMMENT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_COMMENT(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[103].getValue(nIndex));
    }

    /**
     * Sets the value of the 'BILL_COMMENT' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 501.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_BILL_COMMENT(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[103].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'BILL_COMMENT' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_COMMENT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_COMMENT_size() throws FMLManipulationException {
        return (this.fmlBuffer[103].getCount());
    }

    /**
     * Retrieves the value of the 'CONV_RUN_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'CONV_RUN_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_CONV_RUN_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[104].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'CONV_RUN_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_CONV_RUN_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[104].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'CONV_RUN_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'CONV_RUN_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CONV_RUN_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[104].getCount());
    }

    /**
     * Retrieves the value of the 'ADJ_MSG_BILL_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ADJ_MSG_BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ADJ_MSG_BILL_SEQ_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[105].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'ADJ_MSG_BILL_SEQ_NO' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ADJ_MSG_BILL_SEQ_NO(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[105].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'ADJ_MSG_BILL_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ADJ_MSG_BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADJ_MSG_BILL_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[105].getCount());
    }

    /**
     * Retrieves the value of the 'DESIGNATED_INV' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'DESIGNATED_INV' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DESIGNATED_INV(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[106].getValue(nIndex));
    }

    /**
     * Sets the value of the 'DESIGNATED_INV' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 14.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_DESIGNATED_INV(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[106].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'DESIGNATED_INV' field in the FML buffer.
     *
     * @return Number of values defined for 'DESIGNATED_INV' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DESIGNATED_INV_size() throws FMLManipulationException {
        return (this.fmlBuffer[106].getCount());
    }

    /**
     * Retrieves the value of the 'DESIGNATED_ITEM' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'DESIGNATED_ITEM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DESIGNATED_ITEM(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[107].getValue(nIndex));
    }

    /**
     * Sets the value of the 'DESIGNATED_ITEM' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_DESIGNATED_ITEM(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[107].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'DESIGNATED_ITEM' field in the FML buffer.
     *
     * @return Number of values defined for 'DESIGNATED_ITEM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DESIGNATED_ITEM_size() throws FMLManipulationException {
        return (this.fmlBuffer[107].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_RELEVANCE_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'BILL_RELEVANCE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_RELEVANCE_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[108].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'BILL_RELEVANCE_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_BILL_RELEVANCE_IND(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[108].setValue(nIndex, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves number of values defined for 'BILL_RELEVANCE_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_RELEVANCE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_RELEVANCE_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[108].getCount());
    }

    /**
     * Retrieves the value of the 'NUM_OF_DAYS_PYM_LATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'NUM_OF_DAYS_PYM_LATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_NUM_OF_DAYS_PYM_LATE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[109].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'NUM_OF_DAYS_PYM_LATE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_NUM_OF_DAYS_PYM_LATE(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[109].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'NUM_OF_DAYS_PYM_LATE' field in the FML buffer.
     *
     * @return Number of values defined for 'NUM_OF_DAYS_PYM_LATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_NUM_OF_DAYS_PYM_LATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[109].getCount());
    }

    /**
     * Retrieves the value of the 'PERCENTAGE_RATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'PERCENTAGE_RATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_PERCENTAGE_RATE(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[110].getValue(nIndex));
    }

    /**
     * Sets the value of the 'PERCENTAGE_RATE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_PERCENTAGE_RATE(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[110].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'PERCENTAGE_RATE' field in the FML buffer.
     *
     * @return Number of values defined for 'PERCENTAGE_RATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PERCENTAGE_RATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[110].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_NUM_FOR_LATE_PYM' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'BILL_NUM_FOR_LATE_PYM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_NUM_FOR_LATE_PYM(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[111].getValue(nIndex));
    }

    /**
     * Sets the value of the 'BILL_NUM_FOR_LATE_PYM' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 14.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_BILL_NUM_FOR_LATE_PYM(int nIndex, String value) throws FMLManipulationException {
        this.fmlBuffer[111].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'BILL_NUM_FOR_LATE_PYM' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_NUM_FOR_LATE_PYM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_NUM_FOR_LATE_PYM_size() throws FMLManipulationException {
        return (this.fmlBuffer[111].getCount());
    }

    /**
     * Retrieves the value of the 'ORIG_OPER_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'ORIG_OPER_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ORIG_OPER_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[112].getValue(nIndex));
    }

    /**
     * Sets the value of the 'ORIG_OPER_ID' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_ORIG_OPER_ID(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[112].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'ORIG_OPER_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'ORIG_OPER_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ORIG_OPER_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[112].getCount());
    }

    /**
     * Retrieves the value of the 'DISC_UTC_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'DISC_UTC_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_DISC_UTC_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[113].getValue(nIndex));
    }

    /**
     * Sets the value of the 'DISC_UTC_AMT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_DISC_UTC_AMT(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[113].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'DISC_UTC_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'DISC_UTC_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DISC_UTC_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[113].getCount());
    }

    /**
     * Retrieves the value of the 'DISC_UTC_VAT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'DISC_UTC_VAT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_DISC_UTC_VAT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[114].getValue(nIndex));
    }

    /**
     * Sets the value of the 'DISC_UTC_VAT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_DISC_UTC_VAT(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[114].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'DISC_UTC_VAT' field in the FML buffer.
     *
     * @return Number of values defined for 'DISC_UTC_VAT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DISC_UTC_VAT_size() throws FMLManipulationException {
        return (this.fmlBuffer[114].getCount());
    }

    /**
     * Retrieves the value of the 'CHRG_AMT_PRD_1' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'CHRG_AMT_PRD_1' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_CHRG_AMT_PRD_1(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[115].getValue(nIndex));
    }

    /**
     * Sets the value of the 'CHRG_AMT_PRD_1' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_CHRG_AMT_PRD_1(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[115].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'CHRG_AMT_PRD_1' field in the FML buffer.
     *
     * @return Number of values defined for 'CHRG_AMT_PRD_1' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CHRG_AMT_PRD_1_size() throws FMLManipulationException {
        return (this.fmlBuffer[115].getCount());
    }

    /**
     * Retrieves the value of the 'CHRG_AMT_PRD_2' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'CHRG_AMT_PRD_2' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_CHRG_AMT_PRD_2(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[116].getValue(nIndex));
    }

    /**
     * Sets the value of the 'CHRG_AMT_PRD_2' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_CHRG_AMT_PRD_2(int nIndex, Double value) throws FMLManipulationException {
        this.fmlBuffer[116].setValue(nIndex, value);
    }

    /**
     * Retrieves number of values defined for 'CHRG_AMT_PRD_2' field in the FML buffer.
     *
     * @return Number of values defined for 'CHRG_AMT_PRD_2' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CHRG_AMT_PRD_2_size() throws FMLManipulationException {
        return (this.fmlBuffer[116].getCount());
    }

    /**
     * Retrieves the value of the 'MATCH_TIER_LEVEL' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @return Value of 'MATCH_TIER_LEVEL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_MATCH_TIER_LEVEL(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[117].getValue(nIndex)));
    }

    /**
     * Sets the value of the 'MATCH_TIER_LEVEL' field in the FML buffer.
     *
     * @param value Default value: null.
     * @param nIndex Sequence of value to be returned (valid values: 0 to 100).
     * @throws FMLManipulationException
     */
    public void set_MATCH_TIER_LEVEL(int nIndex, Integer value) throws FMLManipulationException {
        this.fmlBuffer[117].setValue(nIndex, TypeConverter.integerToShort(value));
    }

    /**
     * Retrieves number of values defined for 'MATCH_TIER_LEVEL' field in the FML buffer.
     *
     * @return Number of values defined for 'MATCH_TIER_LEVEL' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MATCH_TIER_LEVEL_size() throws FMLManipulationException {
        return (this.fmlBuffer[117].getCount());
    }

    /**
     * Retrieves the value of the 'TO_PRINT' field in the FML buffer.
     *
     * @return Value of 'TO_PRINT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TO_PRINT() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[118].getValue(0)));
    }

    /**
     * Sets the value of the 'TO_PRINT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_TO_PRINT(String value) throws FMLManipulationException {
        this.fmlBuffer[118].setValue(0, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves the value of the 'PADJINPINDBILL_COMMENT' field in the FML buffer.
     *
     * @return Value of 'PADJINPINDBILL_COMMENT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PADJINPINDBILL_COMMENT() throws FMLManipulationException {
        return ((String) this.fmlBuffer[119].getValue(0));
    }

    /**
     * Sets the value of the 'PADJINPINDBILL_COMMENT' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 501.
     * @throws FMLManipulationException
     */
    public void set_PADJINPINDBILL_COMMENT(String value) throws FMLManipulationException {
        this.fmlBuffer[119].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'ACT_CODE' field in the FML buffer.
     *
     * @return Value of 'ACT_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACT_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[120].getValue(0));
    }

    /**
     * Sets the value of the 'ACT_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 4.
     * @throws FMLManipulationException
     */
    public void set_ACT_CODE(String value) throws FMLManipulationException {
        this.fmlBuffer[120].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'ACT_REASON' field in the FML buffer.
     *
     * @return Value of 'ACT_REASON' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACT_REASON() throws FMLManipulationException {
        return ((String) this.fmlBuffer[121].getValue(0));
    }

    /**
     * Sets the value of the 'ACT_REASON' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 5.
     * @throws FMLManipulationException
     */
    public void set_ACT_REASON(String value) throws FMLManipulationException {
        this.fmlBuffer[121].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'SUSP_RC_RATE_TYPE' field in the FML buffer.
     *
     * @return Value of 'SUSP_RC_RATE_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SUSP_RC_RATE_TYPE() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[122].getValue(0)));
    }

    /**
     * Sets the value of the 'SUSP_RC_RATE_TYPE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_SUSP_RC_RATE_TYPE(String value) throws FMLManipulationException {
        this.fmlBuffer[122].setValue(0, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves the value of the 'MEMO_CTN' field in the FML buffer.
     *
     * @return Value of 'MEMO_CTN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MEMO_CTN() throws FMLManipulationException {
        return ((String) this.fmlBuffer[123].getValue(0));
    }

    /**
     * Sets the value of the 'MEMO_CTN' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @throws FMLManipulationException
     */
    public void set_MEMO_CTN(String value) throws FMLManipulationException {
        this.fmlBuffer[123].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'USER_TEXT' field in the FML buffer.
     *
     * @return Value of 'USER_TEXT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_USER_TEXT() throws FMLManipulationException {
        return ((String) this.fmlBuffer[124].getValue(0));
    }

    /**
     * Sets the value of the 'USER_TEXT' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 2001.
     * @throws FMLManipulationException
     */
    public void set_USER_TEXT(String value) throws FMLManipulationException {
        this.fmlBuffer[124].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'MEMO_SOURCE' field in the FML buffer.
     *
     * @return Value of 'MEMO_SOURCE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MEMO_SOURCE() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[125].getValue(0)));
    }

    /**
     * Sets the value of the 'MEMO_SOURCE' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_MEMO_SOURCE(String value) throws FMLManipulationException {
        this.fmlBuffer[125].setValue(0, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves the value of the 'PARAM_COUNT' field in the FML buffer.
     *
     * @return Value of 'PARAM_COUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_PARAM_COUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[126].getValue(0));
    }

    /**
     * Sets the value of the 'PARAM_COUNT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_PARAM_COUNT(Integer value) throws FMLManipulationException {
        this.fmlBuffer[126].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P1' field in the FML buffer.
     *
     * @return Value of 'P1' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P1() throws FMLManipulationException {
        return ((String) this.fmlBuffer[127].getValue(0));
    }

    /**
     * Sets the value of the 'P1' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @throws FMLManipulationException
     */
    public void set_P1(String value) throws FMLManipulationException {
        this.fmlBuffer[127].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P2' field in the FML buffer.
     *
     * @return Value of 'P2' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P2() throws FMLManipulationException {
        return ((String) this.fmlBuffer[128].getValue(0));
    }

    /**
     * Sets the value of the 'P2' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @throws FMLManipulationException
     */
    public void set_P2(String value) throws FMLManipulationException {
        this.fmlBuffer[128].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P3' field in the FML buffer.
     *
     * @return Value of 'P3' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P3() throws FMLManipulationException {
        return ((String) this.fmlBuffer[129].getValue(0));
    }

    /**
     * Sets the value of the 'P3' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @throws FMLManipulationException
     */
    public void set_P3(String value) throws FMLManipulationException {
        this.fmlBuffer[129].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P4' field in the FML buffer.
     *
     * @return Value of 'P4' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P4() throws FMLManipulationException {
        return ((String) this.fmlBuffer[130].getValue(0));
    }

    /**
     * Sets the value of the 'P4' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @throws FMLManipulationException
     */
    public void set_P4(String value) throws FMLManipulationException {
        this.fmlBuffer[130].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P5' field in the FML buffer.
     *
     * @return Value of 'P5' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P5() throws FMLManipulationException {
        return ((String) this.fmlBuffer[131].getValue(0));
    }

    /**
     * Sets the value of the 'P5' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @throws FMLManipulationException
     */
    public void set_P5(String value) throws FMLManipulationException {
        this.fmlBuffer[131].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P6' field in the FML buffer.
     *
     * @return Value of 'P6' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P6() throws FMLManipulationException {
        return ((String) this.fmlBuffer[132].getValue(0));
    }

    /**
     * Sets the value of the 'P6' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @throws FMLManipulationException
     */
    public void set_P6(String value) throws FMLManipulationException {
        this.fmlBuffer[132].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P7' field in the FML buffer.
     *
     * @return Value of 'P7' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P7() throws FMLManipulationException {
        return ((String) this.fmlBuffer[133].getValue(0));
    }

    /**
     * Sets the value of the 'P7' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @throws FMLManipulationException
     */
    public void set_P7(String value) throws FMLManipulationException {
        this.fmlBuffer[133].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P8' field in the FML buffer.
     *
     * @return Value of 'P8' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P8() throws FMLManipulationException {
        return ((String) this.fmlBuffer[134].getValue(0));
    }

    /**
     * Sets the value of the 'P8' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @throws FMLManipulationException
     */
    public void set_P8(String value) throws FMLManipulationException {
        this.fmlBuffer[134].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P9' field in the FML buffer.
     *
     * @return Value of 'P9' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P9() throws FMLManipulationException {
        return ((String) this.fmlBuffer[135].getValue(0));
    }

    /**
     * Sets the value of the 'P9' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @throws FMLManipulationException
     */
    public void set_P9(String value) throws FMLManipulationException {
        this.fmlBuffer[135].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'P10' field in the FML buffer.
     *
     * @return Value of 'P10' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_P10() throws FMLManipulationException {
        return ((String) this.fmlBuffer[136].getValue(0));
    }

    /**
     * Sets the value of the 'P10' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 21.
     * @throws FMLManipulationException
     */
    public void set_P10(String value) throws FMLManipulationException {
        this.fmlBuffer[136].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'MEMO_AMT' field in the FML buffer.
     *
     * @return Value of 'MEMO_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_MEMO_AMT() throws FMLManipulationException {
        return ((Double) this.fmlBuffer[137].getValue(0));
    }

    /**
     * Sets the value of the 'MEMO_AMT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_MEMO_AMT(Double value) throws FMLManipulationException {
        this.fmlBuffer[137].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'RMS_ACT_CODE' field in the FML buffer.
     *
     * @return Value of 'RMS_ACT_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RMS_ACT_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[138].getValue(0));
    }

    /**
     * Sets the value of the 'RMS_ACT_CODE' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 5.
     * @throws FMLManipulationException
     */
    public void set_RMS_ACT_CODE(String value) throws FMLManipulationException {
        this.fmlBuffer[138].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'CHARGE_AMT' field in the FML buffer.
     *
     * @return Value of 'CHARGE_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_CHARGE_AMT() throws FMLManipulationException {
        return ((Double) this.fmlBuffer[139].getValue(0));
    }

    /**
     * Sets the value of the 'CHARGE_AMT' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_CHARGE_AMT(Double value) throws FMLManipulationException {
        this.fmlBuffer[139].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'CHARGE_AMT_IND' field in the FML buffer.
     *
     * @return Value of 'CHARGE_AMT_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CHARGE_AMT_IND() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[140].getValue(0)));
    }

    /**
     * Sets the value of the 'CHARGE_AMT_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_CHARGE_AMT_IND(String value) throws FMLManipulationException {
        this.fmlBuffer[140].setValue(0, TypeConverter.stringToByte(value));
    }

    /**
     * Retrieves the value of the 'WAIVE_REASON' field in the FML buffer.
     *
     * @return Value of 'WAIVE_REASON' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_WAIVE_REASON() throws FMLManipulationException {
        return ((String) this.fmlBuffer[141].getValue(0));
    }

    /**
     * Sets the value of the 'WAIVE_REASON' field in the FML buffer.
     *
     * @param value Default value: null, Maximum length: 7.
     * @throws FMLManipulationException
     */
    public void set_WAIVE_REASON(String value) throws FMLManipulationException {
        this.fmlBuffer[141].setValue(0, value);
    }

    /**
     * Retrieves the value of the 'WAIVE_IND' field in the FML buffer.
     *
     * @return Value of 'WAIVE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_WAIVE_IND() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[142].getValue(0)));
    }

    /**
     * Sets the value of the 'WAIVE_IND' field in the FML buffer.
     *
     * @param value Default value: null.
     * @throws FMLManipulationException
     */
    public void set_WAIVE_IND(String value) throws FMLManipulationException {
        this.fmlBuffer[142].setValue(0, TypeConverter.stringToByte(value));
    }
}