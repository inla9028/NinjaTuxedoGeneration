package no.netcom.ninja.core.system.tuxedo.service.parameters;

import bea.jolt.pool.Result;
import no.netcom.ninja.core.system.tuxedo.exception.FMLManipulationException;
import no.netcom.ninja.core.util.TypeConverter;

/**
 * @author  Ninja - Generated by Ninja tools
 */
public class ArRfndLsOutput extends ServiceOutput {

    /**
     * Creates a new instance of ArRfndLsOutput.
     *
     * @throws FMLManipulationException
     */
    public ArRfndLsOutput(int nApplicationStatus) throws FMLManipulationException {
        createFmlBuffer();
        setApplicationCode(nApplicationStatus);
    }

    public ArRfndLsOutput() {
    }

    /**
     * Creates a new instance of ArRfndLsOutput.
     *
     * @param ds Output dataset from ArRfndLs service.
     * @throws FMLManipulationException
     */
    public ArRfndLsOutput(Result ds) throws FMLManipulationException {
        createFmlBuffer();
        populateFmlBuffer(ds);
    }

    /**
     * Populates the FML buffer.
     *
     * @throws FMLManipulationException
     */
    private void createFmlBuffer() throws FMLManipulationException {
        this.fmlBuffer = new FmlField[53];
        this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
        this.fmlBuffer[1] = new FmlField("MOREROWS", FmlField.TYPE_SHORT, -1, null, 1, 1);
        this.fmlBuffer[2] = new FmlField("ROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 2, 1);
        this.fmlBuffer[3] = new FmlField("ROWID", FmlField.TYPE_STRING, 19, null, 3, 50);
        this.fmlBuffer[4] = new FmlField("BAN", FmlField.TYPE_INTEGER, -1, null, 4, 50);
        this.fmlBuffer[5] = new FmlField("ENT_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 5, 50);
        this.fmlBuffer[6] = new FmlField("ACTV_SEQ_NO", FmlField.TYPE_SHORT, -1, null, 6, 50);
        this.fmlBuffer[7] = new FmlField("SYS_CREATION_DATE", FmlField.TYPE_STRING, 15, null, 7, 50);
        this.fmlBuffer[8] = new FmlField("SYS_UPDATE_DATE", FmlField.TYPE_STRING, 15, null, 8, 50);
        this.fmlBuffer[9] = new FmlField("OPERATOR_ID", FmlField.TYPE_INTEGER, -1, null, 9, 50);
        this.fmlBuffer[10] = new FmlField("APPLICATION_ID", FmlField.TYPE_STRING, 7, null, 10, 50);
        this.fmlBuffer[11] = new FmlField("DL_SERVICE_CODE", FmlField.TYPE_STRING, 6, null, 11, 50);
        this.fmlBuffer[12] = new FmlField("DL_UPDATE_STAMP", FmlField.TYPE_SHORT, -1, null, 12, 50);
        this.fmlBuffer[13] = new FmlField("ACTV_CODE", FmlField.TYPE_STRING, 5, null, 13, 50);
        this.fmlBuffer[14] = new FmlField("ACTV_REASON_CODE", FmlField.TYPE_STRING, 7, null, 14, 50);
        this.fmlBuffer[15] = new FmlField("ACTV_DATE", FmlField.TYPE_STRING, 9, null, 15, 50);
        this.fmlBuffer[16] = new FmlField("ACTV_AMT", FmlField.TYPE_DOUBLE, -1, null, 16, 50);
        this.fmlBuffer[17] = new FmlField("MANUAL_REFUND_IND", FmlField.TYPE_BYTE, -1, null, 17, 50);
        this.fmlBuffer[18] = new FmlField("EXTRACT_TO_AP_IND", FmlField.TYPE_BYTE, -1, null, 18, 50);
        this.fmlBuffer[19] = new FmlField("ACTV_BILL_SEQ_NO", FmlField.TYPE_SHORT, -1, null, 19, 50);
        this.fmlBuffer[20] = new FmlField("INV_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 20, 50);
        this.fmlBuffer[21] = new FmlField("ADJ_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 21, 50);
        this.fmlBuffer[22] = new FmlField("PYM_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 22, 50);
        this.fmlBuffer[23] = new FmlField("PYM_ACTV_SEQ_NO", FmlField.TYPE_SHORT, -1, null, 23, 50);
        this.fmlBuffer[24] = new FmlField("CRITERION_ID", FmlField.TYPE_INTEGER, -1, null, 24, 50);
        this.fmlBuffer[25] = new FmlField("EXTRACT_TO_AP_DATE", FmlField.TYPE_STRING, 9, null, 25, 50);
        this.fmlBuffer[26] = new FmlField("REFUND_SOURCE", FmlField.TYPE_STRING, 7, null, 26, 50);
        this.fmlBuffer[27] = new FmlField("BILL_COMMENT", FmlField.TYPE_STRING, 501, null, 27, 50);
        this.fmlBuffer[28] = new FmlField("BL_IGNORE_IND", FmlField.TYPE_BYTE, -1, null, 28, 50);
        this.fmlBuffer[29] = new FmlField("VOUCHER_NUM", FmlField.TYPE_STRING, 14, null, 29, 50);
        this.fmlBuffer[30] = new FmlField("RFN_STATUS", FmlField.TYPE_BYTE, -1, null, 30, 50);
        this.fmlBuffer[31] = new FmlField("RFN_STS_DATE", FmlField.TYPE_STRING, 9, null, 31, 50);
        this.fmlBuffer[32] = new FmlField("RFNRSN_ROWID", FmlField.TYPE_STRING, 19, null, 32, 50);
        this.fmlBuffer[33] = new FmlField("REFUND_APPL_METHOD", FmlField.TYPE_BYTE, -1, null, 33, 50);
        this.fmlBuffer[34] = new FmlField("REFUND_SHORT_DESC", FmlField.TYPE_STRING, 9, null, 34, 50);
        this.fmlBuffer[35] = new FmlField("REFUND_DESC", FmlField.TYPE_STRING, 31, null, 35, 50);
        this.fmlBuffer[36] = new FmlField("CANCEL_REASON_CODE", FmlField.TYPE_STRING, 7, null, 36, 50);
        this.fmlBuffer[37] = new FmlField("CANCEL_SHORT_DESC", FmlField.TYPE_STRING, 9, null, 37, 50);
        this.fmlBuffer[38] = new FmlField("CANCEL_DESC", FmlField.TYPE_STRING, 31, null, 38, 50);
        this.fmlBuffer[39] = new FmlField("RFNR_VOUCHER_NUM", FmlField.TYPE_STRING, 14, null, 39, 50);
        this.fmlBuffer[40] = new FmlField("BILL_DATE", FmlField.TYPE_STRING, 9, null, 40, 50);
        this.fmlBuffer[41] = new FmlField("BANK_CODE", FmlField.TYPE_STRING, 11, null, 41, 50);
        this.fmlBuffer[42] = new FmlField("BANK_BRANCH", FmlField.TYPE_STRING, 11, null, 42, 50);
        this.fmlBuffer[43] = new FmlField("BANK_ACCT_NO", FmlField.TYPE_STRING, 21, null, 43, 50);
        this.fmlBuffer[44] = new FmlField("INVOICE_NO", FmlField.TYPE_STRING, 14, null, 44, 50);
        this.fmlBuffer[45] = new FmlField("DD_CONTRACT_NO", FmlField.TYPE_STRING, 10, null, 45, 50);
        this.fmlBuffer[46] = new FmlField("DIRECT_DEBIT_DATE", FmlField.TYPE_STRING, 9, null, 46, 50);
        this.fmlBuffer[47] = new FmlField("TOTALCOUNT", FmlField.TYPE_INTEGER, -1, null, 47, 1);
        this.fmlBuffer[48] = new FmlField("DCI_ERROR_CODE", FmlField.TYPE_INTEGER, -1, null, 48, 1);
        this.fmlBuffer[49] = new FmlField("DCI_ERROR_TYPE", FmlField.TYPE_SHORT, -1, null, 49, 1);
        this.fmlBuffer[50] = new FmlField("DCI_ERROR_TEXT", FmlField.TYPE_STRING, 81, null, 50, 1);
        this.fmlBuffer[51] = new FmlField("DCI_ROW_COUNT", FmlField.TYPE_INTEGER, -1, null, 51, 1);
        this.fmlBuffer[52] = new FmlField("DCI_MORE_ROWS", FmlField.TYPE_SHORT, -1, null, 52, 1);
    }

    /**
     * Retrieves the value of the 'GENERATION' field in the FML buffer.
     *
     * @return Value of 'GENERATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GENERATION() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[0].getValue(0));
    }

    /**
     * Retrieves the value of the 'MOREROWS' field in the FML buffer.
     *
     * @return Value of 'MOREROWS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_MOREROWS() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[1].getValue(0)));
    }

    /**
     * Retrieves the value of the 'ROWCOUNT' field in the FML buffer.
     *
     * @return Value of 'ROWCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROWCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[2].getValue(0));
    }

    /**
     * Retrieves the value of the 'ROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[3].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[3].getCount());
    }

    /**
     * Retrieves the value of the 'BAN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_BAN(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[4].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BAN' field in the FML buffer.
     *
     * @return Number of values defined for 'BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BAN_size() throws FMLManipulationException {
        return (this.fmlBuffer[4].getCount());
    }

    /**
     * Retrieves the value of the 'ENT_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ENT_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ENT_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[5].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ENT_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ENT_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ENT_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[5].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ACTV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ACTV_SEQ_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[6].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'ACTV_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[6].getCount());
    }

    /**
     * Retrieves the value of the 'SYS_CREATION_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SYS_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SYS_CREATION_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[7].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SYS_CREATION_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SYS_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SYS_CREATION_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[7].getCount());
    }

    /**
     * Retrieves the value of the 'SYS_UPDATE_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'SYS_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SYS_UPDATE_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[8].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SYS_UPDATE_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SYS_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SYS_UPDATE_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[8].getCount());
    }

    /**
     * Retrieves the value of the 'OPERATOR_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'OPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_OPERATOR_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[9].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'OPERATOR_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'OPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_OPERATOR_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[9].getCount());
    }

    /**
     * Retrieves the value of the 'APPLICATION_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'APPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_APPLICATION_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[10].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'APPLICATION_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'APPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_APPLICATION_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[10].getCount());
    }

    /**
     * Retrieves the value of the 'DL_SERVICE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'DL_SERVICE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DL_SERVICE_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[11].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DL_SERVICE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'DL_SERVICE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DL_SERVICE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[11].getCount());
    }

    /**
     * Retrieves the value of the 'DL_UPDATE_STAMP' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'DL_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DL_UPDATE_STAMP(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[12].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'DL_UPDATE_STAMP' field in the FML buffer.
     *
     * @return Number of values defined for 'DL_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DL_UPDATE_STAMP_size() throws FMLManipulationException {
        return (this.fmlBuffer[12].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ACTV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACTV_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[13].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ACTV_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[13].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_REASON_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ACTV_REASON_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACTV_REASON_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[14].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ACTV_REASON_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_REASON_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_REASON_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[14].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ACTV_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ACTV_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[15].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ACTV_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[15].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ACTV_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_ACTV_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[16].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ACTV_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[16].getCount());
    }

    /**
     * Retrieves the value of the 'MANUAL_REFUND_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'MANUAL_REFUND_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MANUAL_REFUND_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[17].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'MANUAL_REFUND_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'MANUAL_REFUND_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MANUAL_REFUND_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[17].getCount());
    }

    /**
     * Retrieves the value of the 'EXTRACT_TO_AP_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'EXTRACT_TO_AP_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_EXTRACT_TO_AP_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[18].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'EXTRACT_TO_AP_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'EXTRACT_TO_AP_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_EXTRACT_TO_AP_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[18].getCount());
    }

    /**
     * Retrieves the value of the 'ACTV_BILL_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ACTV_BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ACTV_BILL_SEQ_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[19].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'ACTV_BILL_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTV_BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTV_BILL_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[19].getCount());
    }

    /**
     * Retrieves the value of the 'INV_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'INV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_INV_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[20].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INV_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'INV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INV_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[20].getCount());
    }

    /**
     * Retrieves the value of the 'ADJ_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'ADJ_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ADJ_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[21].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADJ_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ADJ_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADJ_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[21].getCount());
    }

    /**
     * Retrieves the value of the 'PYM_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'PYM_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_PYM_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[22].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PYM_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'PYM_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PYM_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[22].getCount());
    }

    /**
     * Retrieves the value of the 'PYM_ACTV_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'PYM_ACTV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_PYM_ACTV_SEQ_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[23].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'PYM_ACTV_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'PYM_ACTV_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PYM_ACTV_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[23].getCount());
    }

    /**
     * Retrieves the value of the 'CRITERION_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'CRITERION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_CRITERION_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[24].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CRITERION_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'CRITERION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CRITERION_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[24].getCount());
    }

    /**
     * Retrieves the value of the 'EXTRACT_TO_AP_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'EXTRACT_TO_AP_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_EXTRACT_TO_AP_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[25].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'EXTRACT_TO_AP_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'EXTRACT_TO_AP_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_EXTRACT_TO_AP_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[25].getCount());
    }

    /**
     * Retrieves the value of the 'REFUND_SOURCE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'REFUND_SOURCE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_REFUND_SOURCE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[26].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'REFUND_SOURCE' field in the FML buffer.
     *
     * @return Number of values defined for 'REFUND_SOURCE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_REFUND_SOURCE_size() throws FMLManipulationException {
        return (this.fmlBuffer[26].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_COMMENT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'BILL_COMMENT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_COMMENT(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[27].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_COMMENT' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_COMMENT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_COMMENT_size() throws FMLManipulationException {
        return (this.fmlBuffer[27].getCount());
    }

    /**
     * Retrieves the value of the 'BL_IGNORE_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'BL_IGNORE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BL_IGNORE_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[28].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'BL_IGNORE_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'BL_IGNORE_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BL_IGNORE_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[28].getCount());
    }

    /**
     * Retrieves the value of the 'VOUCHER_NUM' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'VOUCHER_NUM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_VOUCHER_NUM(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[29].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'VOUCHER_NUM' field in the FML buffer.
     *
     * @return Number of values defined for 'VOUCHER_NUM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_VOUCHER_NUM_size() throws FMLManipulationException {
        return (this.fmlBuffer[29].getCount());
    }

    /**
     * Retrieves the value of the 'RFN_STATUS' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'RFN_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RFN_STATUS(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[30].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'RFN_STATUS' field in the FML buffer.
     *
     * @return Number of values defined for 'RFN_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RFN_STATUS_size() throws FMLManipulationException {
        return (this.fmlBuffer[30].getCount());
    }

    /**
     * Retrieves the value of the 'RFN_STS_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'RFN_STS_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RFN_STS_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[31].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'RFN_STS_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'RFN_STS_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RFN_STS_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[31].getCount());
    }

    /**
     * Retrieves the value of the 'RFNRSN_ROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'RFNRSN_ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RFNRSN_ROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[32].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'RFNRSN_ROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'RFNRSN_ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RFNRSN_ROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[32].getCount());
    }

    /**
     * Retrieves the value of the 'REFUND_APPL_METHOD' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'REFUND_APPL_METHOD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_REFUND_APPL_METHOD(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[33].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'REFUND_APPL_METHOD' field in the FML buffer.
     *
     * @return Number of values defined for 'REFUND_APPL_METHOD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_REFUND_APPL_METHOD_size() throws FMLManipulationException {
        return (this.fmlBuffer[33].getCount());
    }

    /**
     * Retrieves the value of the 'REFUND_SHORT_DESC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'REFUND_SHORT_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_REFUND_SHORT_DESC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[34].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'REFUND_SHORT_DESC' field in the FML buffer.
     *
     * @return Number of values defined for 'REFUND_SHORT_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_REFUND_SHORT_DESC_size() throws FMLManipulationException {
        return (this.fmlBuffer[34].getCount());
    }

    /**
     * Retrieves the value of the 'REFUND_DESC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'REFUND_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_REFUND_DESC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[35].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'REFUND_DESC' field in the FML buffer.
     *
     * @return Number of values defined for 'REFUND_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_REFUND_DESC_size() throws FMLManipulationException {
        return (this.fmlBuffer[35].getCount());
    }

    /**
     * Retrieves the value of the 'CANCEL_REASON_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'CANCEL_REASON_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CANCEL_REASON_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[36].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CANCEL_REASON_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'CANCEL_REASON_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CANCEL_REASON_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[36].getCount());
    }

    /**
     * Retrieves the value of the 'CANCEL_SHORT_DESC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'CANCEL_SHORT_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CANCEL_SHORT_DESC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[37].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CANCEL_SHORT_DESC' field in the FML buffer.
     *
     * @return Number of values defined for 'CANCEL_SHORT_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CANCEL_SHORT_DESC_size() throws FMLManipulationException {
        return (this.fmlBuffer[37].getCount());
    }

    /**
     * Retrieves the value of the 'CANCEL_DESC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'CANCEL_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CANCEL_DESC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[38].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CANCEL_DESC' field in the FML buffer.
     *
     * @return Number of values defined for 'CANCEL_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CANCEL_DESC_size() throws FMLManipulationException {
        return (this.fmlBuffer[38].getCount());
    }

    /**
     * Retrieves the value of the 'RFNR_VOUCHER_NUM' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'RFNR_VOUCHER_NUM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RFNR_VOUCHER_NUM(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[39].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'RFNR_VOUCHER_NUM' field in the FML buffer.
     *
     * @return Number of values defined for 'RFNR_VOUCHER_NUM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RFNR_VOUCHER_NUM_size() throws FMLManipulationException {
        return (this.fmlBuffer[39].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'BILL_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[40].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[40].getCount());
    }

    /**
     * Retrieves the value of the 'BANK_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'BANK_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BANK_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[41].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BANK_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'BANK_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BANK_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[41].getCount());
    }

    /**
     * Retrieves the value of the 'BANK_BRANCH' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'BANK_BRANCH' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BANK_BRANCH(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[42].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BANK_BRANCH' field in the FML buffer.
     *
     * @return Number of values defined for 'BANK_BRANCH' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BANK_BRANCH_size() throws FMLManipulationException {
        return (this.fmlBuffer[42].getCount());
    }

    /**
     * Retrieves the value of the 'BANK_ACCT_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'BANK_ACCT_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BANK_ACCT_NO(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[43].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BANK_ACCT_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'BANK_ACCT_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BANK_ACCT_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[43].getCount());
    }

    /**
     * Retrieves the value of the 'INVOICE_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'INVOICE_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INVOICE_NO(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[44].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INVOICE_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'INVOICE_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INVOICE_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[44].getCount());
    }

    /**
     * Retrieves the value of the 'DD_CONTRACT_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'DD_CONTRACT_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DD_CONTRACT_NO(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[45].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DD_CONTRACT_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'DD_CONTRACT_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DD_CONTRACT_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[45].getCount());
    }

    /**
     * Retrieves the value of the 'DIRECT_DEBIT_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 50).
     * @return Value of 'DIRECT_DEBIT_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DIRECT_DEBIT_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[46].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DIRECT_DEBIT_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'DIRECT_DEBIT_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DIRECT_DEBIT_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[46].getCount());
    }

    /**
     * Retrieves the value of the 'TOTALCOUNT' field in the FML buffer.
     *
     * @return Value of 'TOTALCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_TOTALCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[47].getValue(0));
    }

    /**
     * Retrieves the value of the 'DCI_ERROR_CODE' field in the FML buffer.
     *
     * @return Value of 'DCI_ERROR_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DCI_ERROR_CODE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[48].getValue(0));
    }

    /**
     * Retrieves the value of the 'DCI_ERROR_TYPE' field in the FML buffer.
     *
     * @return Value of 'DCI_ERROR_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DCI_ERROR_TYPE() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[49].getValue(0)));
    }

    /**
     * Retrieves the value of the 'DCI_ERROR_TEXT' field in the FML buffer.
     *
     * @return Value of 'DCI_ERROR_TEXT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DCI_ERROR_TEXT() throws FMLManipulationException {
        return ((String) this.fmlBuffer[50].getValue(0));
    }

    /**
     * Retrieves the value of the 'DCI_ROW_COUNT' field in the FML buffer.
     *
     * @return Value of 'DCI_ROW_COUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DCI_ROW_COUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[51].getValue(0));
    }

    /**
     * Retrieves the value of the 'DCI_MORE_ROWS' field in the FML buffer.
     *
     * @return Value of 'DCI_MORE_ROWS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DCI_MORE_ROWS() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[52].getValue(0)));
    }
}