package no.netcom.ninja.core.system.tuxedo.service.parameters;

import bea.jolt.pool.Result;
import no.netcom.ninja.core.system.tuxedo.exception.FMLManipulationException;
import no.netcom.ninja.core.util.TypeConverter;

/**
 * @author  Ninja - Generated by Ninja tools
 */
public class ArGtCurPAOutput extends ServiceOutput {

    /**
     * Creates a new instance of ArGtCurPAOutput.
     *
     * @throws FMLManipulationException
     */
    public ArGtCurPAOutput(int nApplicationStatus) throws FMLManipulationException {
        createFmlBuffer();
        setApplicationCode(nApplicationStatus);
    }

    public ArGtCurPAOutput() {
    }

    /**
     * Creates a new instance of ArGtCurPAOutput.
     *
     * @param ds Output dataset from ArGtCurPA service.
     * @throws FMLManipulationException
     */
    public ArGtCurPAOutput(Result ds) throws FMLManipulationException {
        createFmlBuffer();
        populateFmlBuffer(ds);
    }

    /**
     * Populates the FML buffer.
     *
     * @throws FMLManipulationException
     */
    private void createFmlBuffer() throws FMLManipulationException {
        this.fmlBuffer = new FmlField[47];
        this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
        this.fmlBuffer[1] = new FmlField("DIRECTIVE", FmlField.TYPE_INTEGER, -1, null, 1, 1);
        this.fmlBuffer[2] = new FmlField("FIRST_DIRECTIVE", FmlField.TYPE_INTEGER, -1, null, 2, 1);
        this.fmlBuffer[3] = new FmlField("SECOND_DIRECTIVE", FmlField.TYPE_INTEGER, -1, null, 3, 1);
        this.fmlBuffer[4] = new FmlField("OPERATOR_ID", FmlField.TYPE_INTEGER, -1, null, 4, 1);
        this.fmlBuffer[5] = new FmlField("APPLICATION_ID", FmlField.TYPE_STRING, 7, null, 5, 1);
        this.fmlBuffer[6] = new FmlField("TRANSACTION_MODE", FmlField.TYPE_BYTE, -1, null, 6, 1);
        this.fmlBuffer[7] = new FmlField("RUN_DATE", FmlField.TYPE_STRING, 9, null, 7, 1);
        this.fmlBuffer[8] = new FmlField("MARKET_CODE", FmlField.TYPE_STRING, 4, null, 8, 1);
        this.fmlBuffer[9] = new FmlField("SVC_STATUS", FmlField.TYPE_BYTE, -1, null, 9, 1);
        this.fmlBuffer[10] = new FmlField("LAST_UPDATE_DATE", FmlField.TYPE_STRING, 15, null, 10, 1);
        this.fmlBuffer[11] = new FmlField("LAST_UPDATE_STAMP", FmlField.TYPE_SHORT, -1, null, 11, 1);
        this.fmlBuffer[12] = new FmlField("ENV_CODE", FmlField.TYPE_STRING, 11, null, 12, 1);
        this.fmlBuffer[13] = new FmlField("SESSION_ID", FmlField.TYPE_INTEGER, -1, null, 13, 1);
        this.fmlBuffer[14] = new FmlField("ONLINE_TRX_NO", FmlField.TYPE_INTEGER, -1, null, 14, 1);
        this.fmlBuffer[15] = new FmlField("GROUP_TRX_ID", FmlField.TYPE_INTEGER, -1, null, 15, 1);
        this.fmlBuffer[16] = new FmlField("MOREROWS", FmlField.TYPE_SHORT, -1, null, 16, 1);
        this.fmlBuffer[17] = new FmlField("ROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 17, 1);
        this.fmlBuffer[18] = new FmlField("ROWID", FmlField.TYPE_STRING, 19, null, 18, 500);
        this.fmlBuffer[19] = new FmlField("BAN", FmlField.TYPE_INTEGER, -1, null, 19, 500);
        this.fmlBuffer[20] = new FmlField("PA_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 20, 500);
        this.fmlBuffer[21] = new FmlField("PA_PYM_SEQ_NO", FmlField.TYPE_SHORT, -1, null, 21, 500);
        this.fmlBuffer[22] = new FmlField("SYS_CREATION_DATE", FmlField.TYPE_STRING, 15, null, 22, 500);
        this.fmlBuffer[23] = new FmlField("SYS_UPDATE_DATE", FmlField.TYPE_STRING, 15, null, 23, 500);
        this.fmlBuffer[24] = new FmlField("PYMARRBUFOPERATOR_ID", FmlField.TYPE_INTEGER, -1, null, 24, 500);
        this.fmlBuffer[25] = new FmlField("PYMARRBUFAPPLICATION_ID", FmlField.TYPE_STRING, 7, null, 25, 500);
        this.fmlBuffer[26] = new FmlField("DL_SERVICE_CODE", FmlField.TYPE_STRING, 6, null, 26, 500);
        this.fmlBuffer[27] = new FmlField("DL_UPDATE_STAMP", FmlField.TYPE_SHORT, -1, null, 27, 500);
        this.fmlBuffer[28] = new FmlField("SCHEDULED_DATE", FmlField.TYPE_STRING, 9, null, 28, 500);
        this.fmlBuffer[29] = new FmlField("PA_TYPE", FmlField.TYPE_BYTE, -1, null, 29, 500);
        this.fmlBuffer[30] = new FmlField("PA_STATUS", FmlField.TYPE_BYTE, -1, null, 30, 500);
        this.fmlBuffer[31] = new FmlField("SCHEDULED_PYM_AMT", FmlField.TYPE_DOUBLE, -1, null, 31, 500);
        this.fmlBuffer[32] = new FmlField("EXPECTED_PAST_DUE", FmlField.TYPE_DOUBLE, -1, null, 32, 500);
        this.fmlBuffer[33] = new FmlField("ACTUAL_PAST_DUE", FmlField.TYPE_DOUBLE, -1, null, 33, 500);
        this.fmlBuffer[34] = new FmlField("DELETE_REASON", FmlField.TYPE_STRING, 7, null, 34, 500);
        this.fmlBuffer[35] = new FmlField("INI_CSR_ID", FmlField.TYPE_STRING, 9, null, 35, 500);
        this.fmlBuffer[36] = new FmlField("DEL_CSR_ID", FmlField.TYPE_STRING, 9, null, 36, 500);
        this.fmlBuffer[37] = new FmlField("MAILING_ADDR_TP", FmlField.TYPE_BYTE, -1, null, 37, 500);
        this.fmlBuffer[38] = new FmlField("CREATION_DATE", FmlField.TYPE_STRING, 9, null, 38, 500);
        this.fmlBuffer[39] = new FmlField("PA_RC_FEE", FmlField.TYPE_DOUBLE, -1, null, 39, 500);
        this.fmlBuffer[40] = new FmlField("PA_OC_FEE", FmlField.TYPE_DOUBLE, -1, null, 40, 500);
        this.fmlBuffer[41] = new FmlField("PA_FEE_INV_NO", FmlField.TYPE_STRING, 14, null, 41, 500);
        this.fmlBuffer[42] = new FmlField("CONT_LTR_REQ_DATE", FmlField.TYPE_STRING, 9, null, 42, 500);
        this.fmlBuffer[43] = new FmlField("OC_CHG_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 43, 500);
        this.fmlBuffer[44] = new FmlField("O_PYMARRCOUNT", FmlField.TYPE_INTEGER, -1, null, 44, 1);
        this.fmlBuffer[45] = new FmlField("PAST_DUE_AMT_OUT", FmlField.TYPE_DOUBLE, -1, null, 45, 1);
        this.fmlBuffer[46] = new FmlField("SCHEDULED_PA_REMOVE_DATE", FmlField.TYPE_STRING, 9, null, 46, 1);
    }

    /**
     * Retrieves the value of the 'GENERATION' field in the FML buffer.
     *
     * @return Value of 'GENERATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GENERATION() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[0].getValue(0));
    }

    /**
     * Retrieves the value of the 'DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[1].getValue(0));
    }

    /**
     * Retrieves the value of the 'FIRST_DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'FIRST_DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_FIRST_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[2].getValue(0));
    }

    /**
     * Retrieves the value of the 'SECOND_DIRECTIVE' field in the FML buffer.
     *
     * @return Value of 'SECOND_DIRECTIVE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SECOND_DIRECTIVE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[3].getValue(0));
    }

    /**
     * Retrieves the value of the 'OPERATOR_ID' field in the FML buffer.
     *
     * @return Value of 'OPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_OPERATOR_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[4].getValue(0));
    }

    /**
     * Retrieves the value of the 'APPLICATION_ID' field in the FML buffer.
     *
     * @return Value of 'APPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_APPLICATION_ID() throws FMLManipulationException {
        return ((String) this.fmlBuffer[5].getValue(0));
    }

    /**
     * Retrieves the value of the 'TRANSACTION_MODE' field in the FML buffer.
     *
     * @return Value of 'TRANSACTION_MODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TRANSACTION_MODE() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[6].getValue(0)));
    }

    /**
     * Retrieves the value of the 'RUN_DATE' field in the FML buffer.
     *
     * @return Value of 'RUN_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RUN_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[7].getValue(0));
    }

    /**
     * Retrieves the value of the 'MARKET_CODE' field in the FML buffer.
     *
     * @return Value of 'MARKET_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MARKET_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[8].getValue(0));
    }

    /**
     * Retrieves the value of the 'SVC_STATUS' field in the FML buffer.
     *
     * @return Value of 'SVC_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SVC_STATUS() throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[9].getValue(0)));
    }

    /**
     * Retrieves the value of the 'LAST_UPDATE_DATE' field in the FML buffer.
     *
     * @return Value of 'LAST_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LAST_UPDATE_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[10].getValue(0));
    }

    /**
     * Retrieves the value of the 'LAST_UPDATE_STAMP' field in the FML buffer.
     *
     * @return Value of 'LAST_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_LAST_UPDATE_STAMP() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[11].getValue(0)));
    }

    /**
     * Retrieves the value of the 'ENV_CODE' field in the FML buffer.
     *
     * @return Value of 'ENV_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ENV_CODE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[12].getValue(0));
    }

    /**
     * Retrieves the value of the 'SESSION_ID' field in the FML buffer.
     *
     * @return Value of 'SESSION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_SESSION_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[13].getValue(0));
    }

    /**
     * Retrieves the value of the 'ONLINE_TRX_NO' field in the FML buffer.
     *
     * @return Value of 'ONLINE_TRX_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ONLINE_TRX_NO() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[14].getValue(0));
    }

    /**
     * Retrieves the value of the 'GROUP_TRX_ID' field in the FML buffer.
     *
     * @return Value of 'GROUP_TRX_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GROUP_TRX_ID() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[15].getValue(0));
    }

    /**
     * Retrieves the value of the 'MOREROWS' field in the FML buffer.
     *
     * @return Value of 'MOREROWS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_MOREROWS() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[16].getValue(0)));
    }

    /**
     * Retrieves the value of the 'ROWCOUNT' field in the FML buffer.
     *
     * @return Value of 'ROWCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROWCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[17].getValue(0));
    }

    /**
     * Retrieves the value of the 'ROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[18].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[18].getCount());
    }

    /**
     * Retrieves the value of the 'BAN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_BAN(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[19].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BAN' field in the FML buffer.
     *
     * @return Number of values defined for 'BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BAN_size() throws FMLManipulationException {
        return (this.fmlBuffer[19].getCount());
    }

    /**
     * Retrieves the value of the 'PA_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'PA_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_PA_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[20].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PA_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'PA_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PA_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[20].getCount());
    }

    /**
     * Retrieves the value of the 'PA_PYM_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'PA_PYM_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_PA_PYM_SEQ_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[21].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'PA_PYM_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'PA_PYM_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PA_PYM_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[21].getCount());
    }

    /**
     * Retrieves the value of the 'SYS_CREATION_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'SYS_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SYS_CREATION_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[22].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SYS_CREATION_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SYS_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SYS_CREATION_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[22].getCount());
    }

    /**
     * Retrieves the value of the 'SYS_UPDATE_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'SYS_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SYS_UPDATE_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[23].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SYS_UPDATE_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SYS_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SYS_UPDATE_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[23].getCount());
    }

    /**
     * Retrieves the value of the 'PYMARRBUFOPERATOR_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'PYMARRBUFOPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_PYMARRBUFOPERATOR_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[24].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PYMARRBUFOPERATOR_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'PYMARRBUFOPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PYMARRBUFOPERATOR_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[24].getCount());
    }

    /**
     * Retrieves the value of the 'PYMARRBUFAPPLICATION_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'PYMARRBUFAPPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PYMARRBUFAPPLICATION_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[25].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PYMARRBUFAPPLICATION_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'PYMARRBUFAPPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PYMARRBUFAPPLICATION_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[25].getCount());
    }

    /**
     * Retrieves the value of the 'DL_SERVICE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'DL_SERVICE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DL_SERVICE_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[26].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DL_SERVICE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'DL_SERVICE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DL_SERVICE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[26].getCount());
    }

    /**
     * Retrieves the value of the 'DL_UPDATE_STAMP' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'DL_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DL_UPDATE_STAMP(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[27].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'DL_UPDATE_STAMP' field in the FML buffer.
     *
     * @return Number of values defined for 'DL_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DL_UPDATE_STAMP_size() throws FMLManipulationException {
        return (this.fmlBuffer[27].getCount());
    }

    /**
     * Retrieves the value of the 'SCHEDULED_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'SCHEDULED_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SCHEDULED_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[28].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SCHEDULED_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SCHEDULED_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SCHEDULED_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[28].getCount());
    }

    /**
     * Retrieves the value of the 'PA_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'PA_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PA_TYPE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[29].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'PA_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'PA_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PA_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[29].getCount());
    }

    /**
     * Retrieves the value of the 'PA_STATUS' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'PA_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PA_STATUS(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[30].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'PA_STATUS' field in the FML buffer.
     *
     * @return Number of values defined for 'PA_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PA_STATUS_size() throws FMLManipulationException {
        return (this.fmlBuffer[30].getCount());
    }

    /**
     * Retrieves the value of the 'SCHEDULED_PYM_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'SCHEDULED_PYM_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_SCHEDULED_PYM_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[31].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SCHEDULED_PYM_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'SCHEDULED_PYM_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SCHEDULED_PYM_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[31].getCount());
    }

    /**
     * Retrieves the value of the 'EXPECTED_PAST_DUE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'EXPECTED_PAST_DUE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_EXPECTED_PAST_DUE(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[32].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'EXPECTED_PAST_DUE' field in the FML buffer.
     *
     * @return Number of values defined for 'EXPECTED_PAST_DUE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_EXPECTED_PAST_DUE_size() throws FMLManipulationException {
        return (this.fmlBuffer[32].getCount());
    }

    /**
     * Retrieves the value of the 'ACTUAL_PAST_DUE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'ACTUAL_PAST_DUE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_ACTUAL_PAST_DUE(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[33].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ACTUAL_PAST_DUE' field in the FML buffer.
     *
     * @return Number of values defined for 'ACTUAL_PAST_DUE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ACTUAL_PAST_DUE_size() throws FMLManipulationException {
        return (this.fmlBuffer[33].getCount());
    }

    /**
     * Retrieves the value of the 'DELETE_REASON' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'DELETE_REASON' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DELETE_REASON(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[34].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DELETE_REASON' field in the FML buffer.
     *
     * @return Number of values defined for 'DELETE_REASON' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DELETE_REASON_size() throws FMLManipulationException {
        return (this.fmlBuffer[34].getCount());
    }

    /**
     * Retrieves the value of the 'INI_CSR_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'INI_CSR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INI_CSR_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[35].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INI_CSR_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'INI_CSR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INI_CSR_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[35].getCount());
    }

    /**
     * Retrieves the value of the 'DEL_CSR_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'DEL_CSR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DEL_CSR_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[36].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DEL_CSR_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'DEL_CSR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DEL_CSR_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[36].getCount());
    }

    /**
     * Retrieves the value of the 'MAILING_ADDR_TP' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'MAILING_ADDR_TP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_MAILING_ADDR_TP(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[37].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'MAILING_ADDR_TP' field in the FML buffer.
     *
     * @return Number of values defined for 'MAILING_ADDR_TP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_MAILING_ADDR_TP_size() throws FMLManipulationException {
        return (this.fmlBuffer[37].getCount());
    }

    /**
     * Retrieves the value of the 'CREATION_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CREATION_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[38].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CREATION_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CREATION_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[38].getCount());
    }

    /**
     * Retrieves the value of the 'PA_RC_FEE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'PA_RC_FEE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_PA_RC_FEE(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[39].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PA_RC_FEE' field in the FML buffer.
     *
     * @return Number of values defined for 'PA_RC_FEE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PA_RC_FEE_size() throws FMLManipulationException {
        return (this.fmlBuffer[39].getCount());
    }

    /**
     * Retrieves the value of the 'PA_OC_FEE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'PA_OC_FEE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_PA_OC_FEE(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[40].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PA_OC_FEE' field in the FML buffer.
     *
     * @return Number of values defined for 'PA_OC_FEE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PA_OC_FEE_size() throws FMLManipulationException {
        return (this.fmlBuffer[40].getCount());
    }

    /**
     * Retrieves the value of the 'PA_FEE_INV_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'PA_FEE_INV_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PA_FEE_INV_NO(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[41].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PA_FEE_INV_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'PA_FEE_INV_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PA_FEE_INV_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[41].getCount());
    }

    /**
     * Retrieves the value of the 'CONT_LTR_REQ_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'CONT_LTR_REQ_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CONT_LTR_REQ_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[42].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CONT_LTR_REQ_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'CONT_LTR_REQ_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CONT_LTR_REQ_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[42].getCount());
    }

    /**
     * Retrieves the value of the 'OC_CHG_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 500).
     * @return Value of 'OC_CHG_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_OC_CHG_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[43].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'OC_CHG_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'OC_CHG_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_OC_CHG_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[43].getCount());
    }

    /**
     * Retrieves the value of the 'O_PYMARRCOUNT' field in the FML buffer.
     *
     * @return Value of 'O_PYMARRCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_O_PYMARRCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[44].getValue(0));
    }

    /**
     * Retrieves the value of the 'PAST_DUE_AMT_OUT' field in the FML buffer.
     *
     * @return Value of 'PAST_DUE_AMT_OUT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_PAST_DUE_AMT_OUT() throws FMLManipulationException {
        return ((Double) this.fmlBuffer[45].getValue(0));
    }

    /**
     * Retrieves the value of the 'SCHEDULED_PA_REMOVE_DATE' field in the FML buffer.
     *
     * @return Value of 'SCHEDULED_PA_REMOVE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SCHEDULED_PA_REMOVE_DATE() throws FMLManipulationException {
        return ((String) this.fmlBuffer[46].getValue(0));
    }
}