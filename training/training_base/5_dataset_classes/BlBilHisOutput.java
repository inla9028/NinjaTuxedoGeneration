package no.netcom.ninja.core.system.tuxedo.service.parameters;

import bea.jolt.pool.Result;
import no.netcom.ninja.core.system.tuxedo.exception.FMLManipulationException;
import no.netcom.ninja.core.util.TypeConverter;

/**
 * @author  Ninja - Generated by Ninja tools
 */
public class BlBilHisOutput extends ServiceOutput {

    /**
     * Creates a new instance of BlBilHisOutput.
     *
     * @throws FMLManipulationException
     */
    public BlBilHisOutput(int nApplicationStatus) throws FMLManipulationException {
        createFmlBuffer();
        setApplicationCode(nApplicationStatus);
    }

    public BlBilHisOutput() {
    }

    /**
     * Creates a new instance of BlBilHisOutput.
     *
     * @param ds Output dataset from BlBilHis service.
     * @throws FMLManipulationException
     */
    public BlBilHisOutput(Result ds) throws FMLManipulationException {
        createFmlBuffer();
        populateFmlBuffer(ds);
    }

    /**
     * Populates the FML buffer.
     *
     * @throws FMLManipulationException
     */
    private void createFmlBuffer() throws FMLManipulationException {
        this.fmlBuffer = new FmlField[36];
        this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
        this.fmlBuffer[1] = new FmlField("MOREROWS", FmlField.TYPE_SHORT, -1, null, 1, 1);
        this.fmlBuffer[2] = new FmlField("ROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 2, 1);
        this.fmlBuffer[3] = new FmlField("ROWID", FmlField.TYPE_STRING, 19, null, 3, 60);
        this.fmlBuffer[4] = new FmlField("ROOT_BAN", FmlField.TYPE_INTEGER, -1, null, 4, 60);
        this.fmlBuffer[5] = new FmlField("BAN", FmlField.TYPE_INTEGER, -1, null, 5, 60);
        this.fmlBuffer[6] = new FmlField("BILL_SEQ_NO", FmlField.TYPE_SHORT, -1, null, 6, 60);
        this.fmlBuffer[7] = new FmlField("PRODUCTION_DATE", FmlField.TYPE_STRING, 9, null, 7, 60);
        this.fmlBuffer[8] = new FmlField("DEPOSIT_PAID_AMT", FmlField.TYPE_DOUBLE, -1, null, 8, 60);
        this.fmlBuffer[9] = new FmlField("DEPOSIT_REQ_AMT", FmlField.TYPE_DOUBLE, -1, null, 9, 60);
        this.fmlBuffer[10] = new FmlField("PREV_BALANCE_AMT", FmlField.TYPE_DOUBLE, -1, null, 10, 60);
        this.fmlBuffer[11] = new FmlField("PYM_RECEIVED_AMT", FmlField.TYPE_DOUBLE, -1, null, 11, 60);
        this.fmlBuffer[12] = new FmlField("TOTAL_BILLED_CHARGE", FmlField.TYPE_DOUBLE, -1, null, 12, 60);
        this.fmlBuffer[13] = new FmlField("TOTAL_BILLED_ADJUST", FmlField.TYPE_DOUBLE, -1, null, 13, 60);
        this.fmlBuffer[14] = new FmlField("PAST_DUE_AMT", FmlField.TYPE_DOUBLE, -1, null, 14, 60);
        this.fmlBuffer[15] = new FmlField("CURR_CHARGE_AMT", FmlField.TYPE_DOUBLE, -1, null, 15, 60);
        this.fmlBuffer[16] = new FmlField("CURR_CREDIT_AMT", FmlField.TYPE_DOUBLE, -1, null, 16, 60);
        this.fmlBuffer[17] = new FmlField("TOTAL_DUE_AMT", FmlField.TYPE_DOUBLE, -1, null, 17, 60);
        this.fmlBuffer[18] = new FmlField("PRD_CVRG_STRT_DATE", FmlField.TYPE_STRING, 9, null, 18, 60);
        this.fmlBuffer[19] = new FmlField("PRD_CVRG_END_DATE", FmlField.TYPE_STRING, 9, null, 19, 60);
        this.fmlBuffer[20] = new FmlField("PRODUCTION_TYPE", FmlField.TYPE_BYTE, -1, null, 20, 60);
        this.fmlBuffer[21] = new FmlField("VAT_AMT", FmlField.TYPE_DOUBLE, -1, null, 21, 60);
        this.fmlBuffer[22] = new FmlField("BILL_DUE_DATE", FmlField.TYPE_STRING, 9, null, 22, 60);
        this.fmlBuffer[23] = new FmlField("BILL_DATE", FmlField.TYPE_STRING, 9, null, 23, 60);
        this.fmlBuffer[24] = new FmlField("BILL_CONF_STATUS", FmlField.TYPE_BYTE, -1, null, 24, 60);
        this.fmlBuffer[25] = new FmlField("BILL_STATUS_DATE", FmlField.TYPE_STRING, 9, null, 25, 60);
        this.fmlBuffer[26] = new FmlField("TOT_INVOICE_AMT", FmlField.TYPE_DOUBLE, -1, null, 26, 60);
        this.fmlBuffer[27] = new FmlField("TOT_BAN_OC_AMT", FmlField.TYPE_DOUBLE, -1, null, 27, 60);
        this.fmlBuffer[28] = new FmlField("TOT_BAN_RC_AMT", FmlField.TYPE_DOUBLE, -1, null, 28, 60);
        this.fmlBuffer[29] = new FmlField("INVOICE_SEQ_NO", FmlField.TYPE_STRING, 14, null, 29, 60);
        this.fmlBuffer[30] = new FmlField("PHIERSUMROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 30, 1);
        this.fmlBuffer[31] = new FmlField("O_HIESUM_RROWID", FmlField.TYPE_STRING, 19, null, 31, 600);
        this.fmlBuffer[32] = new FmlField("FEATURE_CATEGORY", FmlField.TYPE_STRING, 5, null, 32, 600);
        this.fmlBuffer[33] = new FmlField("AMT_TO_PAY", FmlField.TYPE_DOUBLE, -1, null, 33, 600);
        this.fmlBuffer[34] = new FmlField("SUM_DURATION", FmlField.TYPE_DOUBLE, -1, null, 34, 600);
        this.fmlBuffer[35] = new FmlField("FTR_CATEGORY_DESC", FmlField.TYPE_STRING, 41, null, 35, 600);
    }

    /**
     * Retrieves the value of the 'GENERATION' field in the FML buffer.
     *
     * @return Value of 'GENERATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GENERATION() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[0].getValue(0));
    }

    /**
     * Retrieves the value of the 'MOREROWS' field in the FML buffer.
     *
     * @return Value of 'MOREROWS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_MOREROWS() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[1].getValue(0)));
    }

    /**
     * Retrieves the value of the 'ROWCOUNT' field in the FML buffer.
     *
     * @return Value of 'ROWCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROWCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[2].getValue(0));
    }

    /**
     * Retrieves the value of the 'ROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[3].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[3].getCount());
    }

    /**
     * Retrieves the value of the 'ROOT_BAN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'ROOT_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROOT_BAN(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[4].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ROOT_BAN' field in the FML buffer.
     *
     * @return Number of values defined for 'ROOT_BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ROOT_BAN_size() throws FMLManipulationException {
        return (this.fmlBuffer[4].getCount());
    }

    /**
     * Retrieves the value of the 'BAN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_BAN(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[5].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BAN' field in the FML buffer.
     *
     * @return Number of values defined for 'BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BAN_size() throws FMLManipulationException {
        return (this.fmlBuffer[5].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_BILL_SEQ_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[6].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'BILL_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[6].getCount());
    }

    /**
     * Retrieves the value of the 'PRODUCTION_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'PRODUCTION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PRODUCTION_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[7].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PRODUCTION_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'PRODUCTION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PRODUCTION_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[7].getCount());
    }

    /**
     * Retrieves the value of the 'DEPOSIT_PAID_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'DEPOSIT_PAID_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_DEPOSIT_PAID_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[8].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DEPOSIT_PAID_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'DEPOSIT_PAID_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DEPOSIT_PAID_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[8].getCount());
    }

    /**
     * Retrieves the value of the 'DEPOSIT_REQ_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'DEPOSIT_REQ_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_DEPOSIT_REQ_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[9].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DEPOSIT_REQ_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'DEPOSIT_REQ_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DEPOSIT_REQ_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[9].getCount());
    }

    /**
     * Retrieves the value of the 'PREV_BALANCE_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'PREV_BALANCE_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_PREV_BALANCE_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[10].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PREV_BALANCE_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'PREV_BALANCE_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PREV_BALANCE_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[10].getCount());
    }

    /**
     * Retrieves the value of the 'PYM_RECEIVED_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'PYM_RECEIVED_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_PYM_RECEIVED_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[11].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PYM_RECEIVED_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'PYM_RECEIVED_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PYM_RECEIVED_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[11].getCount());
    }

    /**
     * Retrieves the value of the 'TOTAL_BILLED_CHARGE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'TOTAL_BILLED_CHARGE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_TOTAL_BILLED_CHARGE(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[12].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TOTAL_BILLED_CHARGE' field in the FML buffer.
     *
     * @return Number of values defined for 'TOTAL_BILLED_CHARGE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TOTAL_BILLED_CHARGE_size() throws FMLManipulationException {
        return (this.fmlBuffer[12].getCount());
    }

    /**
     * Retrieves the value of the 'TOTAL_BILLED_ADJUST' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'TOTAL_BILLED_ADJUST' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_TOTAL_BILLED_ADJUST(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[13].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TOTAL_BILLED_ADJUST' field in the FML buffer.
     *
     * @return Number of values defined for 'TOTAL_BILLED_ADJUST' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TOTAL_BILLED_ADJUST_size() throws FMLManipulationException {
        return (this.fmlBuffer[13].getCount());
    }

    /**
     * Retrieves the value of the 'PAST_DUE_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'PAST_DUE_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_PAST_DUE_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[14].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PAST_DUE_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'PAST_DUE_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PAST_DUE_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[14].getCount());
    }

    /**
     * Retrieves the value of the 'CURR_CHARGE_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'CURR_CHARGE_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_CURR_CHARGE_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[15].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CURR_CHARGE_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'CURR_CHARGE_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CURR_CHARGE_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[15].getCount());
    }

    /**
     * Retrieves the value of the 'CURR_CREDIT_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'CURR_CREDIT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_CURR_CREDIT_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[16].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CURR_CREDIT_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'CURR_CREDIT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CURR_CREDIT_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[16].getCount());
    }

    /**
     * Retrieves the value of the 'TOTAL_DUE_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'TOTAL_DUE_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_TOTAL_DUE_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[17].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TOTAL_DUE_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'TOTAL_DUE_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TOTAL_DUE_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[17].getCount());
    }

    /**
     * Retrieves the value of the 'PRD_CVRG_STRT_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'PRD_CVRG_STRT_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PRD_CVRG_STRT_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[18].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PRD_CVRG_STRT_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'PRD_CVRG_STRT_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PRD_CVRG_STRT_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[18].getCount());
    }

    /**
     * Retrieves the value of the 'PRD_CVRG_END_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'PRD_CVRG_END_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PRD_CVRG_END_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[19].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'PRD_CVRG_END_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'PRD_CVRG_END_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PRD_CVRG_END_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[19].getCount());
    }

    /**
     * Retrieves the value of the 'PRODUCTION_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'PRODUCTION_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_PRODUCTION_TYPE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[20].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'PRODUCTION_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'PRODUCTION_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_PRODUCTION_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[20].getCount());
    }

    /**
     * Retrieves the value of the 'VAT_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'VAT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_VAT_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[21].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'VAT_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'VAT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_VAT_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[21].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_DUE_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'BILL_DUE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_DUE_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[22].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_DUE_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_DUE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_DUE_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[22].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'BILL_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[23].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[23].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_CONF_STATUS' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'BILL_CONF_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_CONF_STATUS(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[24].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'BILL_CONF_STATUS' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_CONF_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_CONF_STATUS_size() throws FMLManipulationException {
        return (this.fmlBuffer[24].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_STATUS_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'BILL_STATUS_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_STATUS_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[25].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_STATUS_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_STATUS_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_STATUS_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[25].getCount());
    }

    /**
     * Retrieves the value of the 'TOT_INVOICE_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'TOT_INVOICE_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_TOT_INVOICE_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[26].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TOT_INVOICE_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'TOT_INVOICE_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TOT_INVOICE_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[26].getCount());
    }

    /**
     * Retrieves the value of the 'TOT_BAN_OC_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'TOT_BAN_OC_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_TOT_BAN_OC_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[27].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TOT_BAN_OC_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'TOT_BAN_OC_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TOT_BAN_OC_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[27].getCount());
    }

    /**
     * Retrieves the value of the 'TOT_BAN_RC_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'TOT_BAN_RC_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_TOT_BAN_RC_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[28].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TOT_BAN_RC_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'TOT_BAN_RC_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TOT_BAN_RC_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[28].getCount());
    }

    /**
     * Retrieves the value of the 'INVOICE_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 60).
     * @return Value of 'INVOICE_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INVOICE_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[29].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INVOICE_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'INVOICE_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INVOICE_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[29].getCount());
    }

    /**
     * Retrieves the value of the 'PHIERSUMROWCOUNT' field in the FML buffer.
     *
     * @return Value of 'PHIERSUMROWCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_PHIERSUMROWCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[30].getValue(0));
    }

    /**
     * Retrieves the value of the 'O_HIESUM_RROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'O_HIESUM_RROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_O_HIESUM_RROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[31].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'O_HIESUM_RROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'O_HIESUM_RROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_O_HIESUM_RROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[31].getCount());
    }

    /**
     * Retrieves the value of the 'FEATURE_CATEGORY' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'FEATURE_CATEGORY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FEATURE_CATEGORY(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[32].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'FEATURE_CATEGORY' field in the FML buffer.
     *
     * @return Number of values defined for 'FEATURE_CATEGORY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FEATURE_CATEGORY_size() throws FMLManipulationException {
        return (this.fmlBuffer[32].getCount());
    }

    /**
     * Retrieves the value of the 'AMT_TO_PAY' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'AMT_TO_PAY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_AMT_TO_PAY(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[33].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'AMT_TO_PAY' field in the FML buffer.
     *
     * @return Number of values defined for 'AMT_TO_PAY' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_AMT_TO_PAY_size() throws FMLManipulationException {
        return (this.fmlBuffer[33].getCount());
    }

    /**
     * Retrieves the value of the 'SUM_DURATION' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'SUM_DURATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_SUM_DURATION(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[34].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SUM_DURATION' field in the FML buffer.
     *
     * @return Number of values defined for 'SUM_DURATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SUM_DURATION_size() throws FMLManipulationException {
        return (this.fmlBuffer[34].getCount());
    }

    /**
     * Retrieves the value of the 'FTR_CATEGORY_DESC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'FTR_CATEGORY_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_FTR_CATEGORY_DESC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[35].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'FTR_CATEGORY_DESC' field in the FML buffer.
     *
     * @return Number of values defined for 'FTR_CATEGORY_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_FTR_CATEGORY_DESC_size() throws FMLManipulationException {
        return (this.fmlBuffer[35].getCount());
    }
}