package no.netcom.ninja.core.system.tuxedo.service.parameters;

import bea.jolt.pool.Result;
import no.netcom.ninja.core.system.tuxedo.exception.FMLManipulationException;
import no.netcom.ninja.core.util.TypeConverter;

/**
 * @author  Ninja - Generated by Ninja tools
 */
public class ArInvcLsOutput extends ServiceOutput {

    /**
     * Creates a new instance of ArInvcLsOutput.
     *
     * @throws FMLManipulationException
     */
    public ArInvcLsOutput(int nApplicationStatus) throws FMLManipulationException {
        createFmlBuffer();
        setApplicationCode(nApplicationStatus);
    }

    public ArInvcLsOutput() {
    }

    /**
     * Creates a new instance of ArInvcLsOutput.
     *
     * @param ds Output dataset from ArInvcLs service.
     * @throws FMLManipulationException
     */
    public ArInvcLsOutput(Result ds) throws FMLManipulationException {
        createFmlBuffer();
        populateFmlBuffer(ds);
    }

    /**
     * Populates the FML buffer.
     *
     * @throws FMLManipulationException
     */
    private void createFmlBuffer() throws FMLManipulationException {
        this.fmlBuffer = new FmlField[55];
        this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
        this.fmlBuffer[1] = new FmlField("MOREROWS", FmlField.TYPE_SHORT, -1, null, 1, 1);
        this.fmlBuffer[2] = new FmlField("ROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 2, 1);
        this.fmlBuffer[3] = new FmlField("ROWID", FmlField.TYPE_STRING, 19, null, 3, 600);
        this.fmlBuffer[4] = new FmlField("BAN", FmlField.TYPE_INTEGER, -1, null, 4, 600);
        this.fmlBuffer[5] = new FmlField("ENT_SEQ_NO", FmlField.TYPE_INTEGER, -1, null, 5, 600);
        this.fmlBuffer[6] = new FmlField("SYS_CREATION_DATE", FmlField.TYPE_STRING, 15, null, 6, 600);
        this.fmlBuffer[7] = new FmlField("SYS_UPDATE_DATE", FmlField.TYPE_STRING, 15, null, 7, 600);
        this.fmlBuffer[8] = new FmlField("OPERATOR_ID", FmlField.TYPE_INTEGER, -1, null, 8, 600);
        this.fmlBuffer[9] = new FmlField("APPLICATION_ID", FmlField.TYPE_STRING, 7, null, 9, 600);
        this.fmlBuffer[10] = new FmlField("DL_SERVICE_CODE", FmlField.TYPE_STRING, 6, null, 10, 600);
        this.fmlBuffer[11] = new FmlField("DL_UPDATE_STAMP", FmlField.TYPE_SHORT, -1, null, 11, 600);
        this.fmlBuffer[12] = new FmlField("BILL_SEQ_NO", FmlField.TYPE_SHORT, -1, null, 12, 600);
        this.fmlBuffer[13] = new FmlField("INV_TYPE", FmlField.TYPE_STRING, 3, null, 13, 600);
        this.fmlBuffer[14] = new FmlField("INV_CREATION_DATE", FmlField.TYPE_STRING, 9, null, 14, 600);
        this.fmlBuffer[15] = new FmlField("INV_DUE_DATE", FmlField.TYPE_STRING, 9, null, 15, 600);
        this.fmlBuffer[16] = new FmlField("INV_STATUS", FmlField.TYPE_BYTE, -1, null, 16, 600);
        this.fmlBuffer[17] = new FmlField("INV_STATUS_DATE", FmlField.TYPE_STRING, 9, null, 17, 600);
        this.fmlBuffer[18] = new FmlField("SOURCE_APPL_ID", FmlField.TYPE_STRING, 7, null, 18, 600);
        this.fmlBuffer[19] = new FmlField("CHARGES_AMT", FmlField.TYPE_DOUBLE, -1, null, 19, 600);
        this.fmlBuffer[20] = new FmlField("SUBSCRIBER_NO", FmlField.TYPE_STRING, 21, null, 20, 600);
        this.fmlBuffer[21] = new FmlField("CARRY_OVER_IND", FmlField.TYPE_BYTE, -1, null, 21, 600);
        this.fmlBuffer[22] = new FmlField("BILL_CREDIT_AMT", FmlField.TYPE_DOUBLE, -1, null, 22, 600);
        this.fmlBuffer[23] = new FmlField("BILL_DISCOUNT_AMT", FmlField.TYPE_DOUBLE, -1, null, 23, 600);
        this.fmlBuffer[24] = new FmlField("TOT_PYM_CRD_AMT", FmlField.TYPE_DOUBLE, -1, null, 24, 600);
        this.fmlBuffer[25] = new FmlField("TOT_GEN_CRD_AMT", FmlField.TYPE_DOUBLE, -1, null, 25, 600);
        this.fmlBuffer[26] = new FmlField("ADJUSTED_AMT", FmlField.TYPE_DOUBLE, -1, null, 26, 600);
        this.fmlBuffer[27] = new FmlField("INV_ADJUSTED_AMT", FmlField.TYPE_DOUBLE, -1, null, 27, 600);
        this.fmlBuffer[28] = new FmlField("DEP_PAID_AMT", FmlField.TYPE_DOUBLE, -1, null, 28, 600);
        this.fmlBuffer[29] = new FmlField("DEP_RETURN_AMT", FmlField.TYPE_DOUBLE, -1, null, 29, 600);
        this.fmlBuffer[30] = new FmlField("DEP_INTR_RTRN_AMT", FmlField.TYPE_DOUBLE, -1, null, 30, 600);
        this.fmlBuffer[31] = new FmlField("DEP_PAID_DATE", FmlField.TYPE_STRING, 9, null, 31, 600);
        this.fmlBuffer[32] = new FmlField("DEP_RETURN_DATE", FmlField.TYPE_STRING, 9, null, 32, 600);
        this.fmlBuffer[33] = new FmlField("DEP_RETURN_MTHD", FmlField.TYPE_BYTE, -1, null, 33, 600);
        this.fmlBuffer[34] = new FmlField("DEP_TERMS_CODE", FmlField.TYPE_BYTE, -1, null, 34, 600);
        this.fmlBuffer[35] = new FmlField("CANCEL_DATE", FmlField.TYPE_STRING, 9, null, 35, 600);
        this.fmlBuffer[36] = new FmlField("CANCEL_RSN_CODE", FmlField.TYPE_STRING, 7, null, 36, 600);
        this.fmlBuffer[37] = new FmlField("RUN_DATE", FmlField.TYPE_STRING, 9, null, 37, 600);
        this.fmlBuffer[38] = new FmlField("CONV_RUN_NO", FmlField.TYPE_SHORT, -1, null, 38, 600);
        this.fmlBuffer[39] = new FmlField("SUB_MARKET_CODE", FmlField.TYPE_STRING, 4, null, 39, 600);
        this.fmlBuffer[40] = new FmlField("RMS_INV_ACTV_TYPE", FmlField.TYPE_BYTE, -1, null, 40, 600);
        this.fmlBuffer[41] = new FmlField("RMS_INV_STORE_ID", FmlField.TYPE_STRING, 5, null, 41, 600);
        this.fmlBuffer[42] = new FmlField("RMS_INV_ID", FmlField.TYPE_INTEGER, -1, null, 42, 600);
        this.fmlBuffer[43] = new FmlField("TAX_TOTAL_INV_AMT", FmlField.TYPE_DOUBLE, -1, null, 43, 600);
        this.fmlBuffer[44] = new FmlField("VOUCHER_NUM", FmlField.TYPE_STRING, 14, null, 44, 600);
        this.fmlBuffer[45] = new FmlField("INV_TYPE_SHRT_DESC", FmlField.TYPE_STRING, 9, null, 45, 600);
        this.fmlBuffer[46] = new FmlField("INV_TYPE_DESC", FmlField.TYPE_STRING, 31, null, 46, 600);
        this.fmlBuffer[47] = new FmlField("BILL_DATE", FmlField.TYPE_STRING, 9, null, 47, 600);
        this.fmlBuffer[48] = new FmlField("LOCATION_NAME", FmlField.TYPE_STRING, 13, null, 48, 600);
        this.fmlBuffer[49] = new FmlField("TAX_CODE", FmlField.TYPE_BYTE, -1, null, 49, 600);
        this.fmlBuffer[50] = new FmlField("DCI_ERROR_CODE", FmlField.TYPE_INTEGER, -1, null, 50, 1);
        this.fmlBuffer[51] = new FmlField("DCI_ERROR_TYPE", FmlField.TYPE_SHORT, -1, null, 51, 1);
        this.fmlBuffer[52] = new FmlField("DCI_ERROR_TEXT", FmlField.TYPE_STRING, 81, null, 52, 1);
        this.fmlBuffer[53] = new FmlField("DCI_ROW_COUNT", FmlField.TYPE_INTEGER, -1, null, 53, 1);
        this.fmlBuffer[54] = new FmlField("DCI_MORE_ROWS", FmlField.TYPE_SHORT, -1, null, 54, 1);
    }

    /**
     * Retrieves the value of the 'GENERATION' field in the FML buffer.
     *
     * @return Value of 'GENERATION' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_GENERATION() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[0].getValue(0));
    }

    /**
     * Retrieves the value of the 'MOREROWS' field in the FML buffer.
     *
     * @return Value of 'MOREROWS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_MOREROWS() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[1].getValue(0)));
    }

    /**
     * Retrieves the value of the 'ROWCOUNT' field in the FML buffer.
     *
     * @return Value of 'ROWCOUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ROWCOUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[2].getValue(0));
    }

    /**
     * Retrieves the value of the 'ROWID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_ROWID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[3].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ROWID' field in the FML buffer.
     *
     * @return Number of values defined for 'ROWID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ROWID_size() throws FMLManipulationException {
        return (this.fmlBuffer[3].getCount());
    }

    /**
     * Retrieves the value of the 'BAN' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_BAN(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[4].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BAN' field in the FML buffer.
     *
     * @return Number of values defined for 'BAN' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BAN_size() throws FMLManipulationException {
        return (this.fmlBuffer[4].getCount());
    }

    /**
     * Retrieves the value of the 'ENT_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'ENT_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_ENT_SEQ_NO(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[5].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ENT_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'ENT_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ENT_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[5].getCount());
    }

    /**
     * Retrieves the value of the 'SYS_CREATION_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'SYS_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SYS_CREATION_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[6].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SYS_CREATION_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SYS_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SYS_CREATION_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[6].getCount());
    }

    /**
     * Retrieves the value of the 'SYS_UPDATE_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'SYS_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SYS_UPDATE_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[7].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SYS_UPDATE_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'SYS_UPDATE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SYS_UPDATE_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[7].getCount());
    }

    /**
     * Retrieves the value of the 'OPERATOR_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'OPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_OPERATOR_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[8].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'OPERATOR_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'OPERATOR_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_OPERATOR_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[8].getCount());
    }

    /**
     * Retrieves the value of the 'APPLICATION_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'APPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_APPLICATION_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[9].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'APPLICATION_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'APPLICATION_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_APPLICATION_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[9].getCount());
    }

    /**
     * Retrieves the value of the 'DL_SERVICE_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'DL_SERVICE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DL_SERVICE_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[10].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DL_SERVICE_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'DL_SERVICE_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DL_SERVICE_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[10].getCount());
    }

    /**
     * Retrieves the value of the 'DL_UPDATE_STAMP' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'DL_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DL_UPDATE_STAMP(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[11].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'DL_UPDATE_STAMP' field in the FML buffer.
     *
     * @return Number of values defined for 'DL_UPDATE_STAMP' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DL_UPDATE_STAMP_size() throws FMLManipulationException {
        return (this.fmlBuffer[11].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_SEQ_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_BILL_SEQ_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[12].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'BILL_SEQ_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_SEQ_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_SEQ_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[12].getCount());
    }

    /**
     * Retrieves the value of the 'INV_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'INV_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INV_TYPE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[13].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INV_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'INV_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INV_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[13].getCount());
    }

    /**
     * Retrieves the value of the 'INV_CREATION_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'INV_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INV_CREATION_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[14].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INV_CREATION_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'INV_CREATION_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INV_CREATION_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[14].getCount());
    }

    /**
     * Retrieves the value of the 'INV_DUE_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'INV_DUE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INV_DUE_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[15].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INV_DUE_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'INV_DUE_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INV_DUE_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[15].getCount());
    }

    /**
     * Retrieves the value of the 'INV_STATUS' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'INV_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INV_STATUS(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[16].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'INV_STATUS' field in the FML buffer.
     *
     * @return Number of values defined for 'INV_STATUS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INV_STATUS_size() throws FMLManipulationException {
        return (this.fmlBuffer[16].getCount());
    }

    /**
     * Retrieves the value of the 'INV_STATUS_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'INV_STATUS_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INV_STATUS_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[17].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INV_STATUS_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'INV_STATUS_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INV_STATUS_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[17].getCount());
    }

    /**
     * Retrieves the value of the 'SOURCE_APPL_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'SOURCE_APPL_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SOURCE_APPL_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[18].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SOURCE_APPL_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'SOURCE_APPL_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SOURCE_APPL_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[18].getCount());
    }

    /**
     * Retrieves the value of the 'CHARGES_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'CHARGES_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_CHARGES_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[19].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CHARGES_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'CHARGES_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CHARGES_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[19].getCount());
    }

    /**
     * Retrieves the value of the 'SUBSCRIBER_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'SUBSCRIBER_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SUBSCRIBER_NO(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[20].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SUBSCRIBER_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'SUBSCRIBER_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SUBSCRIBER_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[20].getCount());
    }

    /**
     * Retrieves the value of the 'CARRY_OVER_IND' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'CARRY_OVER_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CARRY_OVER_IND(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[21].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'CARRY_OVER_IND' field in the FML buffer.
     *
     * @return Number of values defined for 'CARRY_OVER_IND' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CARRY_OVER_IND_size() throws FMLManipulationException {
        return (this.fmlBuffer[21].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_CREDIT_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BILL_CREDIT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_BILL_CREDIT_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[22].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_CREDIT_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_CREDIT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_CREDIT_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[22].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_DISCOUNT_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BILL_DISCOUNT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_BILL_DISCOUNT_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[23].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_DISCOUNT_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_DISCOUNT_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_DISCOUNT_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[23].getCount());
    }

    /**
     * Retrieves the value of the 'TOT_PYM_CRD_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'TOT_PYM_CRD_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_TOT_PYM_CRD_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[24].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TOT_PYM_CRD_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'TOT_PYM_CRD_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TOT_PYM_CRD_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[24].getCount());
    }

    /**
     * Retrieves the value of the 'TOT_GEN_CRD_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'TOT_GEN_CRD_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_TOT_GEN_CRD_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[25].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TOT_GEN_CRD_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'TOT_GEN_CRD_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TOT_GEN_CRD_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[25].getCount());
    }

    /**
     * Retrieves the value of the 'ADJUSTED_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'ADJUSTED_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_ADJUSTED_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[26].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'ADJUSTED_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'ADJUSTED_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_ADJUSTED_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[26].getCount());
    }

    /**
     * Retrieves the value of the 'INV_ADJUSTED_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'INV_ADJUSTED_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_INV_ADJUSTED_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[27].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INV_ADJUSTED_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'INV_ADJUSTED_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INV_ADJUSTED_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[27].getCount());
    }

    /**
     * Retrieves the value of the 'DEP_PAID_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'DEP_PAID_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_DEP_PAID_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[28].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DEP_PAID_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'DEP_PAID_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DEP_PAID_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[28].getCount());
    }

    /**
     * Retrieves the value of the 'DEP_RETURN_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'DEP_RETURN_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_DEP_RETURN_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[29].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DEP_RETURN_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'DEP_RETURN_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DEP_RETURN_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[29].getCount());
    }

    /**
     * Retrieves the value of the 'DEP_INTR_RTRN_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'DEP_INTR_RTRN_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_DEP_INTR_RTRN_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[30].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DEP_INTR_RTRN_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'DEP_INTR_RTRN_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DEP_INTR_RTRN_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[30].getCount());
    }

    /**
     * Retrieves the value of the 'DEP_PAID_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'DEP_PAID_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DEP_PAID_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[31].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DEP_PAID_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'DEP_PAID_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DEP_PAID_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[31].getCount());
    }

    /**
     * Retrieves the value of the 'DEP_RETURN_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'DEP_RETURN_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DEP_RETURN_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[32].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'DEP_RETURN_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'DEP_RETURN_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DEP_RETURN_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[32].getCount());
    }

    /**
     * Retrieves the value of the 'DEP_RETURN_MTHD' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'DEP_RETURN_MTHD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DEP_RETURN_MTHD(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[33].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'DEP_RETURN_MTHD' field in the FML buffer.
     *
     * @return Number of values defined for 'DEP_RETURN_MTHD' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DEP_RETURN_MTHD_size() throws FMLManipulationException {
        return (this.fmlBuffer[33].getCount());
    }

    /**
     * Retrieves the value of the 'DEP_TERMS_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'DEP_TERMS_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DEP_TERMS_CODE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[34].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'DEP_TERMS_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'DEP_TERMS_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_DEP_TERMS_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[34].getCount());
    }

    /**
     * Retrieves the value of the 'CANCEL_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'CANCEL_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CANCEL_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[35].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CANCEL_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'CANCEL_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CANCEL_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[35].getCount());
    }

    /**
     * Retrieves the value of the 'CANCEL_RSN_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'CANCEL_RSN_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_CANCEL_RSN_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[36].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'CANCEL_RSN_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'CANCEL_RSN_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CANCEL_RSN_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[36].getCount());
    }

    /**
     * Retrieves the value of the 'RUN_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'RUN_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RUN_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[37].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'RUN_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'RUN_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RUN_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[37].getCount());
    }

    /**
     * Retrieves the value of the 'CONV_RUN_NO' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'CONV_RUN_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_CONV_RUN_NO(int nIndex) throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[38].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'CONV_RUN_NO' field in the FML buffer.
     *
     * @return Number of values defined for 'CONV_RUN_NO' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_CONV_RUN_NO_size() throws FMLManipulationException {
        return (this.fmlBuffer[38].getCount());
    }

    /**
     * Retrieves the value of the 'SUB_MARKET_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'SUB_MARKET_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_SUB_MARKET_CODE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[39].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'SUB_MARKET_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'SUB_MARKET_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_SUB_MARKET_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[39].getCount());
    }

    /**
     * Retrieves the value of the 'RMS_INV_ACTV_TYPE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'RMS_INV_ACTV_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RMS_INV_ACTV_TYPE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[40].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'RMS_INV_ACTV_TYPE' field in the FML buffer.
     *
     * @return Number of values defined for 'RMS_INV_ACTV_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RMS_INV_ACTV_TYPE_size() throws FMLManipulationException {
        return (this.fmlBuffer[40].getCount());
    }

    /**
     * Retrieves the value of the 'RMS_INV_STORE_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'RMS_INV_STORE_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_RMS_INV_STORE_ID(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[41].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'RMS_INV_STORE_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'RMS_INV_STORE_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RMS_INV_STORE_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[41].getCount());
    }

    /**
     * Retrieves the value of the 'RMS_INV_ID' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'RMS_INV_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_RMS_INV_ID(int nIndex) throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[42].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'RMS_INV_ID' field in the FML buffer.
     *
     * @return Number of values defined for 'RMS_INV_ID' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_RMS_INV_ID_size() throws FMLManipulationException {
        return (this.fmlBuffer[42].getCount());
    }

    /**
     * Retrieves the value of the 'TAX_TOTAL_INV_AMT' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'TAX_TOTAL_INV_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Double get_TAX_TOTAL_INV_AMT(int nIndex) throws FMLManipulationException {
        return ((Double) this.fmlBuffer[43].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'TAX_TOTAL_INV_AMT' field in the FML buffer.
     *
     * @return Number of values defined for 'TAX_TOTAL_INV_AMT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TAX_TOTAL_INV_AMT_size() throws FMLManipulationException {
        return (this.fmlBuffer[43].getCount());
    }

    /**
     * Retrieves the value of the 'VOUCHER_NUM' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'VOUCHER_NUM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_VOUCHER_NUM(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[44].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'VOUCHER_NUM' field in the FML buffer.
     *
     * @return Number of values defined for 'VOUCHER_NUM' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_VOUCHER_NUM_size() throws FMLManipulationException {
        return (this.fmlBuffer[44].getCount());
    }

    /**
     * Retrieves the value of the 'INV_TYPE_SHRT_DESC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'INV_TYPE_SHRT_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INV_TYPE_SHRT_DESC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[45].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INV_TYPE_SHRT_DESC' field in the FML buffer.
     *
     * @return Number of values defined for 'INV_TYPE_SHRT_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INV_TYPE_SHRT_DESC_size() throws FMLManipulationException {
        return (this.fmlBuffer[45].getCount());
    }

    /**
     * Retrieves the value of the 'INV_TYPE_DESC' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'INV_TYPE_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_INV_TYPE_DESC(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[46].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'INV_TYPE_DESC' field in the FML buffer.
     *
     * @return Number of values defined for 'INV_TYPE_DESC' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_INV_TYPE_DESC_size() throws FMLManipulationException {
        return (this.fmlBuffer[46].getCount());
    }

    /**
     * Retrieves the value of the 'BILL_DATE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'BILL_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_BILL_DATE(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[47].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'BILL_DATE' field in the FML buffer.
     *
     * @return Number of values defined for 'BILL_DATE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_BILL_DATE_size() throws FMLManipulationException {
        return (this.fmlBuffer[47].getCount());
    }

    /**
     * Retrieves the value of the 'LOCATION_NAME' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'LOCATION_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_LOCATION_NAME(int nIndex) throws FMLManipulationException {
        return ((String) this.fmlBuffer[48].getValue(nIndex));
    }

    /**
     * Retrieves number of values defined for 'LOCATION_NAME' field in the FML buffer.
     *
     * @return Number of values defined for 'LOCATION_NAME' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_LOCATION_NAME_size() throws FMLManipulationException {
        return (this.fmlBuffer[48].getCount());
    }

    /**
     * Retrieves the value of the 'TAX_CODE' field in the FML buffer.
     *
     * @param nIndex Sequence of value to be returned (valid values: 0 to 600).
     * @return Value of 'TAX_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_TAX_CODE(int nIndex) throws FMLManipulationException {
        return (TypeConverter.byteToString((Byte) this.fmlBuffer[49].getValue(nIndex)));
    }

    /**
     * Retrieves number of values defined for 'TAX_CODE' field in the FML buffer.
     *
     * @return Number of values defined for 'TAX_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public int get_TAX_CODE_size() throws FMLManipulationException {
        return (this.fmlBuffer[49].getCount());
    }

    /**
     * Retrieves the value of the 'DCI_ERROR_CODE' field in the FML buffer.
     *
     * @return Value of 'DCI_ERROR_CODE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DCI_ERROR_CODE() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[50].getValue(0));
    }

    /**
     * Retrieves the value of the 'DCI_ERROR_TYPE' field in the FML buffer.
     *
     * @return Value of 'DCI_ERROR_TYPE' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DCI_ERROR_TYPE() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[51].getValue(0)));
    }

    /**
     * Retrieves the value of the 'DCI_ERROR_TEXT' field in the FML buffer.
     *
     * @return Value of 'DCI_ERROR_TEXT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public String get_DCI_ERROR_TEXT() throws FMLManipulationException {
        return ((String) this.fmlBuffer[52].getValue(0));
    }

    /**
     * Retrieves the value of the 'DCI_ROW_COUNT' field in the FML buffer.
     *
     * @return Value of 'DCI_ROW_COUNT' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DCI_ROW_COUNT() throws FMLManipulationException {
        return ((Integer) this.fmlBuffer[53].getValue(0));
    }

    /**
     * Retrieves the value of the 'DCI_MORE_ROWS' field in the FML buffer.
     *
     * @return Value of 'DCI_MORE_ROWS' field in FML buffer.
     * @throws FMLManipulationException
     */
    public Integer get_DCI_MORE_ROWS() throws FMLManipulationException {
        return (TypeConverter.shortToInteger((Short) this.fmlBuffer[54].getValue(0)));
    }
}